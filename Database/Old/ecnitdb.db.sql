-- phpMyAdmin SQL Dump
-- version 3.4.10.1
-- http://www.phpmyadmin.net
--
-- Host: ecnitdb.db
-- Generation Time: Aug 20, 2012 at 06:01 PM
-- Server version: 5.3.7
-- PHP Version: 5.3.10-nfsn2

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `ecnitdb`
--
CREATE DATABASE `ecnitdb` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci;
USE `ecnitdb`;

-- --------------------------------------------------------

--
-- Table structure for table `directory_owner`
--

CREATE TABLE IF NOT EXISTS `directory_owner` (
  `directoryOwnerID` int(11) NOT NULL AUTO_INCREMENT,
  `directory` int(11) NOT NULL,
  `owner_position` int(11) NOT NULL,
  PRIMARY KEY (`directoryOwnerID`),
  UNIQUE KEY `directory` (`directory`,`owner_position`),
  KEY `owner_position` (`owner_position`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=244 ;

--
-- Dumping data for table `directory_owner`
--

INSERT INTO `directory_owner` (`directoryOwnerID`, `directory`, `owner_position`) VALUES
(1, 1, 1),
(2, 1, 2),
(3, 2, 1),
(4, 2, 2),
(5, 3, 7),
(6, 4, 3),
(7, 5, 1),
(8, 5, 2),
(9, 6, 14),
(10, 7, 23),
(11, 8, 11),
(12, 9, 16),
(13, 10, 7),
(14, 11, 31),
(15, 12, 33),
(16, 13, 7),
(17, 14, 7),
(18, 15, 7),
(19, 16, 33),
(20, 17, 11),
(21, 18, 33),
(22, 19, 33),
(23, 20, 9),
(24, 21, 1),
(25, 21, 2),
(26, 22, 1),
(27, 22, 2),
(28, 23, 14),
(29, 24, 14),
(30, 25, 14),
(31, 26, 14),
(32, 27, 23),
(33, 28, 23),
(34, 29, 23),
(35, 30, 23),
(36, 31, 23),
(37, 32, 11),
(38, 33, 11),
(39, 34, 11),
(40, 35, 11),
(41, 36, 11),
(42, 37, 11),
(43, 38, 11),
(44, 39, 16),
(45, 40, 16),
(46, 41, 16),
(47, 42, 31),
(48, 43, 31),
(49, 44, 33),
(50, 45, 33),
(51, 46, 33),
(52, 47, 33),
(53, 48, 41),
(54, 49, 210),
(55, 50, 54),
(56, 51, 67),
(57, 52, 197),
(58, 53, 80),
(59, 54, 93),
(60, 55, 231),
(61, 56, 106),
(62, 57, 132),
(63, 58, 158),
(64, 59, 145),
(65, 60, 171),
(66, 61, 184),
(67, 62, 195),
(68, 63, 26),
(69, 64, 25),
(70, 65, 18),
(71, 65, 16),
(72, 65, 17),
(73, 65, 286),
(74, 65, 287),
(75, 66, 286),
(76, 66, 287),
(77, 67, 161),
(78, 68, 231),
(79, 69, 231),
(80, 70, 233),
(81, 71, 239),
(82, 72, 244),
(83, 73, 233),
(84, 73, 239),
(85, 73, 244),
(86, 74, 233),
(87, 74, 239),
(88, 74, 244),
(89, 75, 233),
(90, 75, 239),
(91, 75, 244),
(92, 76, 284),
(93, 77, 284),
(94, 78, 284),
(95, 79, 285),
(96, 80, 286),
(97, 81, 33),
(98, 82, 33),
(99, 83, 33),
(100, 84, 11),
(101, 85, 11),
(102, 86, 11),
(103, 87, 11),
(104, 88, 11),
(105, 89, 11),
(106, 90, 11),
(107, 91, 11),
(108, 92, 11),
(109, 93, 11),
(110, 94, 11),
(111, 95, 11),
(112, 96, 11),
(113, 97, 11),
(114, 98, 11),
(115, 99, 11),
(116, 100, 11),
(117, 101, 11),
(118, 102, 11),
(119, 103, 41),
(120, 104, 41),
(121, 105, 41),
(122, 106, 41),
(123, 155, 210),
(124, 156, 210),
(125, 157, 210),
(126, 158, 210),
(127, 107, 54),
(128, 108, 54),
(129, 109, 54),
(130, 110, 54),
(131, 111, 67),
(132, 112, 67),
(133, 113, 67),
(134, 114, 67),
(135, 151, 197),
(136, 152, 197),
(137, 153, 197),
(138, 154, 197),
(139, 115, 80),
(140, 116, 80),
(141, 117, 80),
(142, 118, 80),
(143, 119, 93),
(144, 120, 93),
(145, 121, 93),
(146, 132, 93),
(147, 127, 119),
(148, 128, 119),
(149, 129, 119),
(150, 130, 119),
(151, 131, 132),
(152, 132, 132),
(153, 133, 132),
(154, 134, 132),
(155, 139, 158),
(156, 140, 158),
(157, 141, 158),
(158, 142, 158),
(159, 135, 145),
(160, 136, 145),
(161, 137, 145),
(162, 138, 145),
(163, 143, 171),
(164, 144, 171),
(165, 145, 171),
(166, 146, 171),
(167, 147, 184),
(168, 148, 184),
(169, 149, 184),
(170, 150, 184),
(171, 159, 295),
(172, 160, 295),
(173, 161, 295),
(174, 162, 295),
(175, 163, 26),
(176, 164, 25),
(177, 165, 25),
(178, 166, 25),
(179, 167, 18),
(180, 167, 16),
(181, 167, 17),
(182, 167, 286),
(183, 167, 287),
(184, 168, 16),
(185, 168, 17),
(186, 168, 18),
(187, 168, 286),
(188, 168, 287),
(189, 169, 16),
(190, 169, 17),
(191, 169, 18),
(192, 169, 286),
(193, 169, 287),
(194, 170, 16),
(195, 170, 17),
(196, 170, 18),
(197, 170, 286),
(198, 170, 287),
(199, 171, 286),
(200, 171, 287),
(201, 172, 286),
(202, 172, 287),
(203, 173, 161),
(204, 174, 161),
(205, 175, 161),
(206, 176, 161),
(207, 177, 161),
(208, 178, 231),
(209, 179, 231),
(210, 180, 231),
(211, 181, 231),
(212, 182, 231),
(213, 183, 233),
(214, 184, 233),
(215, 185, 233),
(216, 186, 233),
(217, 187, 233),
(218, 188, 239),
(219, 189, 239),
(220, 190, 239),
(221, 191, 239),
(222, 192, 239),
(223, 193, 244),
(224, 194, 244),
(225, 195, 244),
(226, 196, 244),
(227, 197, 244),
(228, 198, 233),
(229, 198, 239),
(230, 198, 244),
(231, 199, 233),
(232, 199, 239),
(233, 199, 244),
(234, 200, 7),
(235, 200, 8),
(236, 200, 9),
(237, 201, 7),
(238, 201, 8),
(239, 201, 9),
(240, 202, 233),
(241, 202, 239),
(242, 202, 244),
(243, 203, 106);

-- --------------------------------------------------------

--
-- Table structure for table `directory_owners`
--

CREATE TABLE IF NOT EXISTS `directory_owners` (
  `directoryOwnerID` int(11) NOT NULL AUTO_INCREMENT,
  `directory` int(11) NOT NULL,
  `owner_position` int(11) NOT NULL,
  PRIMARY KEY (`directoryOwnerID`),
  UNIQUE KEY `directory` (`directory`,`owner_position`),
  KEY `owner_position` (`owner_position`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=247 ;

--
-- Dumping data for table `directory_owners`
--

INSERT INTO `directory_owners` (`directoryOwnerID`, `directory`, `owner_position`) VALUES
(1, 1, 1),
(2, 1, 2),
(3, 2, 1),
(4, 2, 2),
(5, 3, 7),
(6, 4, 3),
(7, 5, 1),
(8, 5, 2),
(9, 6, 14),
(10, 7, 23),
(11, 8, 11),
(12, 9, 16),
(13, 10, 7),
(14, 11, 31),
(15, 12, 33),
(16, 13, 7),
(17, 14, 7),
(18, 15, 7),
(19, 16, 33),
(20, 17, 11),
(21, 18, 33),
(22, 19, 33),
(23, 20, 9),
(24, 21, 1),
(25, 21, 2),
(26, 22, 1),
(27, 22, 2),
(28, 23, 14),
(29, 24, 14),
(30, 25, 14),
(31, 26, 14),
(32, 27, 23),
(33, 28, 23),
(34, 29, 23),
(35, 30, 23),
(36, 31, 23),
(37, 32, 11),
(38, 33, 11),
(39, 34, 11),
(40, 35, 11),
(41, 36, 11),
(42, 37, 11),
(43, 38, 11),
(44, 39, 16),
(45, 40, 16),
(46, 41, 16),
(47, 42, 31),
(48, 43, 31),
(49, 44, 33),
(50, 45, 33),
(51, 46, 33),
(52, 47, 33),
(53, 48, 41),
(54, 49, 210),
(55, 50, 54),
(56, 51, 67),
(57, 52, 197),
(58, 53, 80),
(59, 54, 93),
(60, 55, 231),
(61, 56, 106),
(62, 57, 132),
(63, 58, 158),
(64, 59, 145),
(65, 60, 171),
(66, 61, 184),
(67, 62, 195),
(68, 63, 26),
(69, 64, 25),
(70, 65, 18),
(71, 65, 16),
(72, 65, 17),
(73, 65, 286),
(74, 65, 287),
(75, 66, 286),
(76, 66, 287),
(77, 67, 161),
(78, 68, 231),
(79, 69, 231),
(80, 70, 233),
(81, 71, 239),
(82, 72, 244),
(83, 73, 233),
(84, 73, 239),
(85, 73, 244),
(86, 74, 233),
(87, 74, 239),
(88, 74, 244),
(89, 75, 233),
(90, 75, 239),
(91, 75, 244),
(92, 76, 284),
(93, 77, 284),
(94, 78, 284),
(95, 79, 285),
(96, 80, 286),
(97, 81, 33),
(98, 82, 33),
(99, 83, 33),
(100, 84, 11),
(101, 85, 11),
(102, 86, 11),
(103, 87, 11),
(104, 88, 11),
(105, 89, 11),
(106, 90, 11),
(107, 91, 11),
(108, 92, 11),
(109, 93, 11),
(110, 94, 11),
(111, 95, 11),
(112, 96, 11),
(113, 97, 11),
(114, 98, 11),
(115, 99, 11),
(116, 100, 11),
(117, 101, 11),
(118, 102, 11),
(119, 103, 41),
(120, 104, 41),
(121, 105, 41),
(122, 106, 41),
(123, 107, 210),
(124, 108, 210),
(125, 109, 210),
(126, 110, 210),
(127, 111, 54),
(128, 112, 54),
(129, 113, 54),
(130, 114, 54),
(131, 115, 67),
(132, 116, 67),
(133, 117, 67),
(134, 118, 67),
(135, 119, 197),
(136, 120, 197),
(137, 121, 197),
(138, 122, 197),
(139, 123, 80),
(140, 124, 80),
(141, 125, 80),
(142, 126, 80),
(143, 127, 93),
(144, 128, 93),
(145, 129, 93),
(146, 130, 93),
(147, 131, 231),
(148, 132, 231),
(149, 133, 231),
(150, 134, 231),
(151, 135, 119),
(152, 136, 119),
(153, 137, 119),
(154, 138, 119),
(155, 139, 132),
(156, 140, 132),
(157, 141, 132),
(158, 142, 132),
(159, 143, 158),
(160, 144, 158),
(161, 145, 158),
(162, 146, 158),
(163, 147, 145),
(164, 148, 145),
(165, 149, 145),
(166, 150, 145),
(167, 151, 171),
(168, 152, 171),
(169, 153, 171),
(170, 154, 171),
(171, 155, 184),
(172, 156, 184),
(173, 157, 184),
(174, 158, 184),
(175, 159, 295),
(176, 160, 295),
(177, 161, 295),
(178, 162, 295),
(179, 163, 26),
(180, 164, 25),
(181, 165, 25),
(182, 166, 25),
(183, 167, 18),
(184, 167, 16),
(185, 167, 17),
(186, 167, 286),
(187, 167, 287),
(188, 168, 16),
(189, 168, 17),
(190, 168, 18),
(191, 168, 286),
(192, 168, 287),
(193, 169, 16),
(194, 169, 17),
(195, 169, 18),
(196, 169, 286),
(197, 169, 287),
(198, 170, 16),
(199, 170, 17),
(200, 170, 18),
(201, 170, 286),
(202, 170, 287),
(203, 171, 286),
(204, 171, 287),
(205, 172, 286),
(206, 172, 287),
(207, 173, 161),
(208, 174, 161),
(209, 175, 161),
(210, 176, 161),
(211, 177, 161),
(212, 178, 231),
(213, 179, 231),
(214, 180, 231),
(215, 181, 231),
(216, 182, 231),
(217, 183, 233),
(218, 184, 233),
(219, 185, 233),
(220, 186, 233),
(221, 187, 233),
(222, 188, 239),
(223, 189, 239),
(224, 190, 239),
(225, 191, 239),
(226, 192, 239),
(227, 193, 244),
(228, 194, 244),
(229, 195, 244),
(230, 196, 244),
(231, 197, 244),
(232, 198, 233),
(233, 198, 239),
(234, 198, 244),
(235, 199, 233),
(236, 199, 239),
(237, 199, 244),
(238, 200, 7),
(239, 200, 8),
(240, 200, 9),
(241, 201, 7),
(242, 201, 8),
(243, 201, 9),
(244, 202, 233),
(245, 202, 239),
(246, 202, 244);

-- --------------------------------------------------------

--
-- Table structure for table `distribution_groups`
--

CREATE TABLE IF NOT EXISTS `distribution_groups` (
  `distributionGroupID` int(11) NOT NULL AUTO_INCREMENT,
  `dgName` varchar(64) NOT NULL,
  PRIMARY KEY (`distributionGroupID`),
  UNIQUE KEY `dgName` (`dgName`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=54 ;

--
-- Dumping data for table `distribution_groups`
--

INSERT INTO `distribution_groups` (`distributionGroupID`, `dgName`) VALUES
(1, 'AEGStaffAll'),
(2, 'FusionAssistantDirector_DG'),
(3, 'FusionDirectorOfFirstImpressions_DG'),
(4, 'FusionDirectorOfStudentDevelopment_DG'),
(5, 'FusionHeadOfSchool_DG'),
(6, 'FusionInformationSpecialist_DG'),
(7, 'FusionMasterTeacher_DG'),
(8, 'FusionOutreach_DG'),
(9, 'FusionRegional_DG'),
(10, 'FusionStaffALL_DG'),
(11, 'FusionStaffHB_DG'),
(12, 'FusionStaffLA_DG'),
(13, 'FusionStaffLG_DG'),
(14, 'FusionStaffLI_DG'),
(15, 'FusionStaffMN_DG'),
(16, 'FusionStaffMV_DG'),
(17, 'FusionStaffPD_DG'),
(18, 'FusionStaffSB_DG'),
(19, 'FusionStaffSD_DG'),
(20, 'FusionStaffSF_DG'),
(21, 'FusionStaffSLB_DG'),
(22, 'FusionStaffSM_DG'),
(23, 'FusionStaffWC_DG'),
(24, 'FusionStaffWCR_DG'),
(25, 'LexisStaffAll_DG'),
(26, 'LSAssociateDirectors_DG'),
(27, 'LSBostonDirectors_DG'),
(28, 'LSCurriculumTeam_DG'),
(29, 'LSExecutiveDirector_DG'),
(30, 'LSExecutiveDirectorandAssociateDirectors_DG'),
(31, 'LSInnovationsMeetingParticipants'),
(32, 'LSMVDirectors_DG'),
(33, 'LSSeniorManagementTeam_DG'),
(34, 'LSStaffAll_DG'),
(35, 'LSTrainingTeam_DG'),
(36, 'ShreinerStaffAll_DG'),
(37, 'TampaDayAdmin_DG'),
(38, 'TampaDayCamp_DG'),
(39, 'TampaDayFriends_DG'),
(40, 'TampaDayFrontOffice_DG'),
(41, 'TampaDayInfo_DG'),
(42, 'TampaDayLowerDivision_DG'),
(43, 'TampaDayNews_DG'),
(44, 'TampaDayParents_DG'),
(45, 'TampaDayPta_DG'),
(46, 'TampaDayRead_DG'),
(47, 'TampaDayStaffAll_DG'),
(48, 'TampaDayTds_DG'),
(49, 'TampaDayTechnology_DG'),
(50, 'TampaDayTest_DG'),
(51, 'TampaDayUpperDivision_DG'),
(52, 'TampaDay_DG'),
(53, 'DGAccessAll_DG');

-- --------------------------------------------------------

--
-- Table structure for table `divisions`
--

CREATE TABLE IF NOT EXISTS `divisions` (
  `divisionID` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) NOT NULL,
  PRIMARY KEY (`divisionID`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=5 ;

--
-- Dumping data for table `divisions`
--

INSERT INTO `divisions` (`divisionID`, `name`) VALUES
(1, 'Corporate'),
(2, 'Fusion'),
(3, 'Lexis'),
(4, 'Little Sprouts');

-- --------------------------------------------------------

--
-- Table structure for table `edit_permissions`
--

CREATE TABLE IF NOT EXISTS `edit_permissions` (
  `editPermissionID` int(11) NOT NULL AUTO_INCREMENT,
  `position` int(11) NOT NULL,
  `directory` int(11) NOT NULL,
  PRIMARY KEY (`editPermissionID`),
  UNIQUE KEY `position` (`position`,`directory`),
  KEY `directory` (`directory`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2203 ;

--
-- Dumping data for table `edit_permissions`
--

INSERT INTO `edit_permissions` (`editPermissionID`, `position`, `directory`) VALUES
(1, 1, 21),
(2, 2, 21),
(3, 3, 21),
(4, 4, 21),
(5, 5, 21),
(6, 6, 21),
(7, 1, 22),
(8, 2, 22),
(9, 3, 22),
(10, 4, 22),
(11, 5, 22),
(12, 6, 22),
(13, 14, 23),
(14, 15, 23),
(15, 14, 24),
(16, 15, 24),
(17, 14, 25),
(18, 15, 25),
(19, 14, 26),
(20, 15, 26),
(21, 23, 27),
(22, 24, 27),
(23, 25, 27),
(24, 26, 27),
(25, 27, 27),
(26, 28, 27),
(27, 29, 27),
(28, 30, 27),
(29, 23, 28),
(30, 24, 28),
(31, 25, 28),
(32, 26, 28),
(33, 27, 28),
(34, 28, 28),
(35, 29, 28),
(36, 30, 28),
(37, 23, 29),
(38, 24, 29),
(39, 25, 29),
(40, 26, 29),
(41, 27, 29),
(42, 28, 29),
(43, 29, 29),
(44, 30, 29),
(45, 23, 30),
(46, 24, 30),
(47, 25, 30),
(48, 26, 30),
(49, 27, 30),
(50, 28, 30),
(51, 29, 30),
(52, 30, 30),
(53, 23, 31),
(54, 24, 31),
(55, 25, 31),
(56, 26, 31),
(57, 27, 31),
(58, 28, 31),
(59, 29, 31),
(60, 30, 31),
(61, 11, 32),
(62, 12, 32),
(63, 13, 32),
(64, 11, 33),
(65, 12, 33),
(66, 13, 33),
(67, 11, 34),
(68, 12, 34),
(69, 13, 34),
(70, 11, 35),
(71, 12, 35),
(72, 13, 35),
(73, 11, 36),
(74, 12, 36),
(75, 13, 36),
(76, 11, 37),
(77, 12, 37),
(78, 13, 37),
(79, 231, 37),
(80, 11, 38),
(81, 12, 38),
(82, 13, 38),
(83, 16, 39),
(84, 17, 39),
(85, 18, 39),
(86, 19, 39),
(87, 20, 39),
(88, 21, 39),
(89, 22, 39),
(90, 16, 40),
(91, 17, 40),
(92, 18, 40),
(93, 19, 40),
(94, 20, 40),
(95, 21, 40),
(96, 22, 40),
(97, 16, 41),
(98, 17, 41),
(99, 18, 41),
(100, 19, 41),
(101, 20, 41),
(102, 21, 41),
(103, 22, 41),
(104, 31, 42),
(105, 32, 42),
(106, 31, 43),
(107, 32, 43),
(108, 33, 44),
(109, 33, 45),
(110, 33, 46),
(111, 33, 47),
(112, 252, 76),
(113, 253, 76),
(114, 254, 76),
(115, 255, 76),
(116, 256, 76),
(117, 257, 76),
(118, 258, 76),
(119, 259, 76),
(120, 260, 76),
(121, 261, 76),
(122, 262, 76),
(123, 263, 76),
(124, 264, 76),
(125, 265, 76),
(126, 266, 76),
(127, 267, 76),
(128, 268, 76),
(129, 269, 76),
(130, 270, 76),
(131, 271, 76),
(132, 272, 76),
(133, 273, 76),
(134, 274, 76),
(135, 275, 76),
(136, 276, 76),
(137, 277, 76),
(138, 278, 76),
(139, 279, 76),
(140, 280, 76),
(141, 281, 76),
(142, 282, 76),
(143, 283, 76),
(144, 284, 76),
(145, 285, 76),
(146, 286, 76),
(147, 287, 76),
(148, 288, 76),
(149, 289, 76),
(150, 290, 76),
(151, 291, 76),
(152, 292, 76),
(153, 293, 76),
(154, 294, 76),
(155, 252, 77),
(156, 253, 77),
(157, 254, 77),
(158, 255, 77),
(159, 256, 77),
(160, 257, 77),
(161, 258, 77),
(162, 259, 77),
(163, 260, 77),
(164, 261, 77),
(165, 262, 77),
(166, 263, 77),
(167, 264, 77),
(168, 265, 77),
(169, 266, 77),
(170, 267, 77),
(171, 268, 77),
(172, 269, 77),
(173, 270, 77),
(174, 271, 77),
(175, 272, 77),
(176, 273, 77),
(177, 274, 77),
(178, 275, 77),
(179, 276, 77),
(180, 277, 77),
(181, 278, 77),
(182, 279, 77),
(183, 280, 77),
(184, 281, 77),
(185, 282, 77),
(186, 283, 77),
(187, 284, 77),
(188, 285, 77),
(189, 286, 77),
(190, 287, 77),
(191, 288, 77),
(192, 289, 77),
(193, 290, 77),
(194, 291, 77),
(195, 292, 77),
(196, 293, 77),
(197, 294, 77),
(198, 284, 78),
(199, 285, 78),
(200, 286, 78),
(201, 287, 78),
(202, 288, 78),
(203, 289, 78),
(204, 290, 78),
(205, 291, 78),
(206, 292, 78),
(207, 293, 78),
(208, 294, 78),
(209, 285, 79),
(210, 294, 79),
(211, 284, 80),
(212, 285, 80),
(213, 286, 80),
(214, 287, 80),
(215, 288, 80),
(216, 289, 80),
(217, 290, 80),
(218, 291, 80),
(219, 292, 80),
(220, 293, 80),
(221, 294, 80),
(222, 1, 81),
(223, 2, 81),
(224, 3, 81),
(225, 4, 81),
(226, 5, 81),
(227, 6, 81),
(228, 7, 81),
(229, 8, 81),
(230, 9, 81),
(231, 10, 81),
(232, 11, 81),
(233, 12, 81),
(234, 13, 81),
(235, 14, 81),
(236, 15, 81),
(237, 16, 81),
(238, 17, 81),
(239, 18, 81),
(240, 19, 81),
(241, 20, 81),
(242, 21, 81),
(243, 22, 81),
(244, 23, 81),
(245, 24, 81),
(246, 25, 81),
(247, 26, 81),
(248, 27, 81),
(249, 28, 81),
(250, 29, 81),
(251, 30, 81),
(252, 31, 81),
(253, 32, 81),
(254, 33, 81),
(255, 38, 82),
(256, 51, 82),
(257, 64, 82),
(258, 77, 82),
(259, 90, 82),
(260, 103, 82),
(261, 116, 82),
(262, 129, 82),
(263, 142, 82),
(264, 155, 82),
(265, 168, 82),
(266, 181, 82),
(267, 194, 82),
(268, 207, 82),
(269, 220, 82),
(270, 39, 82),
(271, 52, 82),
(272, 65, 82),
(273, 78, 82),
(274, 91, 82),
(275, 104, 82),
(276, 117, 82),
(277, 130, 82),
(278, 143, 82),
(279, 156, 82),
(280, 169, 82),
(281, 182, 82),
(282, 195, 82),
(283, 208, 82),
(284, 221, 82),
(285, 40, 82),
(286, 53, 82),
(287, 66, 82),
(288, 79, 82),
(289, 92, 82),
(290, 105, 82),
(291, 118, 82),
(292, 131, 82),
(293, 144, 82),
(294, 157, 82),
(295, 170, 82),
(296, 183, 82),
(297, 196, 82),
(298, 209, 82),
(299, 222, 82),
(300, 41, 82),
(301, 54, 82),
(302, 67, 82),
(303, 80, 82),
(304, 93, 82),
(305, 106, 82),
(306, 119, 82),
(307, 132, 82),
(308, 145, 82),
(309, 158, 82),
(310, 171, 82),
(311, 184, 82),
(312, 197, 82),
(313, 210, 82),
(314, 223, 82),
(315, 43, 82),
(316, 56, 82),
(317, 69, 82),
(318, 82, 82),
(319, 95, 82),
(320, 108, 82),
(321, 120, 82),
(322, 134, 82),
(323, 147, 82),
(324, 160, 82),
(325, 173, 82),
(326, 186, 82),
(327, 199, 82),
(328, 212, 82),
(329, 225, 82),
(330, 229, 82),
(331, 230, 82),
(332, 231, 82),
(333, 232, 82),
(334, 295, 82),
(335, 296, 82),
(336, 252, 83),
(337, 253, 83),
(338, 254, 83),
(339, 255, 83),
(340, 256, 83),
(341, 257, 83),
(342, 258, 83),
(343, 259, 83),
(344, 260, 83),
(345, 261, 83),
(346, 262, 83),
(347, 263, 83),
(348, 264, 83),
(349, 265, 83),
(350, 266, 83),
(351, 267, 83),
(352, 268, 83),
(353, 269, 83),
(354, 270, 83),
(355, 271, 83),
(356, 272, 83),
(357, 273, 83),
(358, 274, 83),
(359, 275, 83),
(360, 276, 83),
(361, 277, 83),
(362, 278, 83),
(363, 279, 83),
(364, 280, 83),
(365, 281, 83),
(366, 282, 83),
(367, 283, 83),
(368, 284, 83),
(369, 285, 83),
(370, 286, 83),
(371, 287, 83),
(372, 288, 83),
(373, 289, 83),
(374, 290, 83),
(375, 291, 83),
(376, 292, 83),
(377, 293, 83),
(378, 294, 83),
(379, 1, 84),
(380, 2, 84),
(381, 3, 84),
(382, 4, 84),
(383, 5, 84),
(384, 6, 84),
(385, 31, 84),
(386, 32, 84),
(387, 1, 85),
(388, 2, 85),
(389, 3, 85),
(390, 4, 85),
(391, 5, 85),
(392, 6, 85),
(393, 31, 85),
(394, 32, 85),
(395, 31, 86),
(396, 32, 86),
(397, 1, 87),
(398, 2, 87),
(399, 3, 87),
(400, 4, 87),
(401, 5, 87),
(402, 6, 87),
(403, 31, 87),
(404, 32, 87),
(405, 1, 88),
(406, 2, 88),
(407, 3, 88),
(408, 4, 88),
(409, 5, 88),
(410, 6, 88),
(411, 31, 88),
(412, 32, 88),
(413, 1, 89),
(414, 2, 89),
(415, 3, 89),
(416, 4, 89),
(417, 5, 89),
(418, 6, 89),
(419, 31, 89),
(420, 32, 89),
(421, 1, 90),
(422, 2, 90),
(423, 3, 90),
(424, 4, 90),
(425, 5, 90),
(426, 6, 90),
(427, 31, 90),
(428, 32, 90),
(429, 253, 93),
(430, 255, 93),
(431, 257, 93),
(432, 259, 93),
(433, 261, 93),
(434, 263, 93),
(435, 265, 93),
(436, 267, 93),
(437, 269, 93),
(438, 271, 93),
(439, 273, 93),
(440, 275, 93),
(441, 277, 93),
(442, 279, 93),
(443, 281, 93),
(444, 283, 93),
(445, 284, 93),
(446, 285, 93),
(447, 286, 93),
(448, 287, 93),
(449, 288, 93),
(450, 289, 93),
(451, 290, 93),
(452, 291, 93),
(453, 292, 93),
(454, 293, 93),
(455, 294, 93),
(456, 38, 94),
(457, 51, 94),
(458, 64, 94),
(459, 77, 94),
(460, 90, 94),
(461, 103, 94),
(462, 116, 94),
(463, 129, 94),
(464, 142, 94),
(465, 155, 94),
(466, 168, 94),
(467, 181, 94),
(468, 194, 94),
(469, 207, 94),
(470, 220, 94),
(471, 39, 94),
(472, 52, 94),
(473, 65, 94),
(474, 78, 94),
(475, 91, 94),
(476, 104, 94),
(477, 117, 94),
(478, 130, 94),
(479, 143, 94),
(480, 156, 94),
(481, 169, 94),
(482, 182, 94),
(483, 195, 94),
(484, 208, 94),
(485, 221, 94),
(486, 40, 94),
(487, 53, 94),
(488, 66, 94),
(489, 79, 94),
(490, 92, 94),
(491, 105, 94),
(492, 118, 94),
(493, 131, 94),
(494, 144, 94),
(495, 157, 94),
(496, 170, 94),
(497, 183, 94),
(498, 196, 94),
(499, 209, 94),
(500, 222, 94),
(501, 41, 94),
(502, 54, 94),
(503, 67, 94),
(504, 80, 94),
(505, 93, 94),
(506, 106, 94),
(507, 119, 94),
(508, 132, 94),
(509, 145, 94),
(510, 158, 94),
(511, 171, 94),
(512, 184, 94),
(513, 197, 94),
(514, 210, 94),
(515, 223, 94),
(516, 43, 94),
(517, 56, 94),
(518, 69, 94),
(519, 94, 94),
(520, 95, 94),
(521, 108, 94),
(522, 120, 94),
(523, 134, 94),
(524, 147, 94),
(525, 160, 94),
(526, 173, 94),
(527, 186, 94),
(528, 199, 94),
(529, 212, 94),
(530, 225, 94),
(531, 229, 94),
(532, 230, 94),
(533, 231, 94),
(534, 232, 94),
(535, 295, 94),
(536, 296, 94),
(537, 244, 95),
(538, 245, 95),
(539, 246, 95),
(540, 247, 95),
(541, 248, 95),
(542, 249, 95),
(543, 233, 96),
(544, 234, 96),
(545, 235, 96),
(546, 236, 96),
(547, 239, 97),
(548, 240, 97),
(549, 241, 97),
(550, 1, 98),
(551, 2, 98),
(552, 3, 98),
(553, 4, 98),
(554, 5, 98),
(555, 6, 98),
(556, 1, 99),
(557, 2, 99),
(558, 3, 99),
(559, 4, 99),
(560, 5, 99),
(561, 6, 99),
(562, 1, 100),
(563, 2, 100),
(564, 3, 100),
(565, 4, 100),
(566, 5, 100),
(567, 6, 100),
(568, 1, 101),
(569, 2, 101),
(570, 3, 101),
(571, 4, 101),
(572, 5, 101),
(573, 6, 101),
(574, 34, 103),
(575, 35, 103),
(576, 36, 103),
(577, 37, 103),
(578, 38, 103),
(579, 39, 103),
(580, 40, 103),
(581, 41, 103),
(582, 42, 103),
(583, 43, 103),
(584, 44, 103),
(585, 45, 103),
(586, 46, 103),
(587, 34, 104),
(588, 35, 104),
(589, 36, 104),
(590, 37, 104),
(591, 38, 104),
(592, 39, 104),
(593, 40, 104),
(594, 41, 104),
(595, 42, 104),
(596, 43, 104),
(597, 44, 104),
(598, 45, 104),
(599, 46, 104),
(600, 34, 105),
(601, 36, 105),
(602, 37, 105),
(603, 38, 105),
(604, 39, 105),
(605, 41, 105),
(606, 43, 105),
(607, 41, 106),
(608, 47, 107),
(609, 48, 107),
(610, 49, 107),
(611, 50, 107),
(612, 51, 107),
(613, 52, 107),
(614, 53, 107),
(615, 54, 107),
(616, 55, 107),
(617, 56, 107),
(618, 57, 107),
(619, 58, 107),
(620, 59, 107),
(621, 47, 108),
(622, 48, 108),
(623, 49, 108),
(624, 50, 108),
(625, 51, 108),
(626, 52, 108),
(627, 53, 108),
(628, 54, 108),
(629, 55, 108),
(630, 56, 108),
(631, 57, 108),
(632, 58, 108),
(633, 59, 108),
(634, 47, 109),
(635, 49, 109),
(636, 50, 109),
(637, 51, 109),
(638, 52, 109),
(639, 54, 109),
(640, 56, 109),
(641, 54, 110),
(642, 60, 111),
(643, 61, 111),
(644, 62, 111),
(645, 63, 111),
(646, 64, 111),
(647, 65, 111),
(648, 66, 111),
(649, 67, 111),
(650, 68, 111),
(651, 69, 111),
(652, 70, 111),
(653, 71, 111),
(654, 72, 111),
(655, 60, 112),
(656, 61, 112),
(657, 62, 112),
(658, 63, 112),
(659, 64, 112),
(660, 65, 112),
(661, 66, 112),
(662, 67, 112),
(663, 68, 112),
(664, 69, 112),
(665, 70, 112),
(666, 71, 112),
(667, 72, 112),
(668, 60, 113),
(669, 62, 113),
(670, 63, 113),
(671, 64, 113),
(672, 65, 113),
(673, 67, 113),
(674, 69, 113),
(675, 67, 114),
(676, 73, 115),
(677, 74, 115),
(678, 75, 115),
(679, 76, 115),
(680, 77, 115),
(681, 78, 115),
(682, 79, 115),
(683, 80, 115),
(684, 81, 115),
(685, 82, 115),
(686, 83, 115),
(687, 84, 115),
(688, 85, 115),
(689, 73, 116),
(690, 74, 116),
(691, 75, 116),
(692, 76, 116),
(693, 77, 116),
(694, 78, 116),
(695, 79, 116),
(696, 80, 116),
(697, 81, 116),
(698, 82, 116),
(699, 83, 116),
(700, 84, 116),
(701, 85, 116),
(702, 73, 117),
(703, 75, 117),
(704, 76, 117),
(705, 77, 117),
(706, 78, 117),
(707, 80, 117),
(708, 82, 117),
(709, 80, 118),
(710, 86, 119),
(711, 87, 119),
(712, 88, 119),
(713, 89, 119),
(714, 90, 119),
(715, 91, 119),
(716, 92, 119),
(717, 93, 119),
(718, 94, 119),
(719, 95, 119),
(720, 96, 119),
(721, 97, 119),
(722, 98, 119),
(723, 86, 120),
(724, 87, 120),
(725, 88, 120),
(726, 89, 120),
(727, 90, 120),
(728, 91, 120),
(729, 92, 120),
(730, 93, 120),
(731, 94, 120),
(732, 95, 120),
(733, 96, 120),
(734, 97, 120),
(735, 98, 120),
(736, 86, 121),
(737, 88, 121),
(738, 89, 121),
(739, 90, 121),
(740, 91, 121),
(741, 93, 121),
(742, 95, 121),
(743, 93, 122),
(744, 99, 123),
(745, 100, 123),
(746, 101, 123),
(747, 102, 123),
(748, 103, 123),
(749, 104, 123),
(750, 105, 123),
(751, 106, 123),
(752, 107, 123),
(753, 108, 123),
(754, 109, 123),
(755, 110, 123),
(756, 111, 123),
(757, 99, 124),
(758, 100, 124),
(759, 101, 124),
(760, 102, 124),
(761, 103, 124),
(762, 104, 124),
(763, 105, 124),
(764, 106, 124),
(765, 107, 124),
(766, 108, 124),
(767, 109, 124),
(768, 110, 124),
(769, 111, 124),
(770, 99, 125),
(771, 101, 125),
(772, 102, 125),
(773, 103, 125),
(774, 104, 125),
(775, 106, 125),
(776, 108, 125),
(777, 106, 126),
(778, 112, 127),
(779, 113, 127),
(780, 114, 127),
(781, 115, 127),
(782, 116, 127),
(783, 117, 127),
(784, 118, 127),
(785, 119, 127),
(786, 120, 127),
(787, 121, 127),
(788, 122, 127),
(789, 123, 127),
(790, 124, 127),
(791, 112, 128),
(792, 113, 128),
(793, 114, 128),
(794, 115, 128),
(795, 116, 128),
(796, 117, 128),
(797, 118, 128),
(798, 119, 128),
(799, 120, 128),
(800, 121, 128),
(801, 122, 128),
(802, 123, 128),
(803, 124, 128),
(804, 112, 129),
(805, 114, 129),
(806, 115, 129),
(807, 116, 129),
(808, 117, 129),
(809, 119, 129),
(810, 121, 129),
(811, 119, 130),
(812, 125, 131),
(813, 126, 131),
(814, 127, 131),
(815, 128, 131),
(816, 129, 131),
(817, 130, 131),
(818, 131, 131),
(819, 132, 131),
(820, 133, 131),
(821, 134, 131),
(822, 135, 131),
(823, 136, 131),
(824, 137, 131),
(825, 125, 132),
(826, 126, 132),
(827, 127, 132),
(828, 128, 132),
(829, 129, 132),
(830, 130, 132),
(831, 131, 132),
(832, 132, 132),
(833, 133, 132),
(834, 134, 132),
(835, 135, 132),
(836, 136, 132),
(837, 137, 132),
(838, 125, 133),
(839, 127, 133),
(840, 128, 133),
(841, 129, 133),
(842, 130, 133),
(843, 132, 133),
(844, 134, 133),
(845, 132, 134),
(846, 138, 135),
(847, 139, 135),
(848, 140, 135),
(849, 141, 135),
(850, 142, 135),
(851, 143, 135),
(852, 144, 135),
(853, 145, 135),
(854, 146, 135),
(855, 147, 135),
(856, 148, 135),
(857, 149, 135),
(858, 150, 135),
(859, 138, 136),
(860, 139, 136),
(861, 140, 136),
(862, 141, 136),
(863, 142, 136),
(864, 143, 136),
(865, 144, 136),
(866, 145, 136),
(867, 146, 136),
(868, 147, 136),
(869, 148, 136),
(870, 149, 136),
(871, 150, 136),
(872, 138, 137),
(873, 140, 137),
(874, 141, 137),
(875, 142, 137),
(876, 143, 137),
(877, 145, 137),
(878, 147, 137),
(879, 145, 138),
(880, 151, 139),
(881, 152, 139),
(882, 153, 139),
(883, 154, 139),
(884, 155, 139),
(885, 156, 139),
(886, 157, 139),
(887, 158, 139),
(888, 159, 139),
(889, 160, 139),
(890, 161, 139),
(891, 162, 139),
(892, 163, 139),
(893, 151, 140),
(894, 152, 140),
(895, 153, 140),
(896, 154, 140),
(897, 155, 140),
(898, 156, 140),
(899, 157, 140),
(900, 158, 140),
(901, 159, 140),
(902, 160, 140),
(903, 161, 140),
(904, 162, 140),
(905, 163, 140),
(906, 151, 141),
(907, 153, 141),
(908, 154, 141),
(909, 155, 141),
(910, 156, 141),
(911, 158, 141),
(912, 160, 141),
(913, 158, 142),
(914, 164, 143),
(915, 165, 143),
(916, 166, 143),
(917, 167, 143),
(918, 168, 143),
(919, 169, 143),
(920, 170, 143),
(921, 171, 143),
(922, 172, 143),
(923, 173, 143),
(924, 174, 143),
(925, 175, 143),
(926, 176, 143),
(927, 164, 144),
(928, 165, 144),
(929, 166, 144),
(930, 167, 144),
(931, 168, 144),
(932, 169, 144),
(933, 170, 144),
(934, 171, 144),
(935, 172, 144),
(936, 173, 144),
(937, 174, 144),
(938, 175, 144),
(939, 176, 144),
(940, 164, 145),
(941, 166, 145),
(942, 167, 145),
(943, 168, 145),
(944, 169, 145),
(945, 171, 145),
(946, 173, 145),
(947, 171, 146),
(948, 177, 147),
(949, 178, 147),
(950, 179, 147),
(951, 180, 147),
(952, 181, 147),
(953, 182, 147),
(954, 183, 147),
(955, 184, 147),
(956, 185, 147),
(957, 186, 147),
(958, 187, 147),
(959, 188, 147),
(960, 189, 147),
(961, 177, 148),
(962, 178, 148),
(963, 179, 148),
(964, 180, 148),
(965, 181, 148),
(966, 182, 148),
(967, 183, 148),
(968, 184, 148),
(969, 185, 148),
(970, 186, 148),
(971, 187, 148),
(972, 188, 148),
(973, 189, 148),
(974, 177, 149),
(975, 179, 149),
(976, 180, 149),
(977, 181, 149),
(978, 182, 149),
(979, 184, 149),
(980, 186, 149),
(981, 184, 150),
(982, 190, 151),
(983, 191, 151),
(984, 192, 151),
(985, 193, 151),
(986, 194, 151),
(987, 195, 151),
(988, 196, 151),
(989, 197, 151),
(990, 198, 151),
(991, 199, 151),
(992, 200, 151),
(993, 201, 151),
(994, 202, 151),
(995, 190, 152),
(996, 191, 152),
(997, 192, 152),
(998, 193, 152),
(999, 194, 152),
(1000, 195, 152),
(1001, 196, 152),
(1002, 197, 152),
(1003, 198, 152),
(1004, 199, 152),
(1005, 200, 152),
(1006, 201, 152),
(1007, 202, 152),
(1008, 190, 153),
(1009, 192, 153),
(1010, 193, 153),
(1011, 194, 153),
(1012, 195, 153),
(1013, 197, 153),
(1014, 199, 153),
(1015, 197, 154),
(1016, 203, 155),
(1017, 204, 155),
(1018, 205, 155),
(1019, 206, 155),
(1020, 207, 155),
(1021, 208, 155),
(1022, 209, 155),
(1023, 210, 155),
(1024, 211, 155),
(1025, 212, 155),
(1026, 213, 155),
(1027, 214, 155),
(1028, 215, 155),
(1029, 203, 156),
(1030, 204, 156),
(1031, 205, 156),
(1032, 206, 156),
(1033, 207, 156),
(1034, 208, 156),
(1035, 209, 156),
(1036, 210, 156),
(1037, 211, 156),
(1038, 212, 156),
(1039, 213, 156),
(1040, 214, 156),
(1041, 215, 156),
(1042, 203, 157),
(1043, 205, 157),
(1044, 206, 157),
(1045, 207, 157),
(1046, 208, 157),
(1047, 210, 157),
(1048, 212, 157),
(1049, 210, 158),
(1050, 1, 159),
(1051, 2, 159),
(1052, 3, 159),
(1053, 4, 159),
(1054, 5, 159),
(1055, 6, 159),
(1056, 7, 159),
(1057, 8, 159),
(1058, 9, 159),
(1059, 10, 159),
(1060, 11, 159),
(1061, 12, 159),
(1062, 13, 159),
(1063, 14, 159),
(1064, 15, 159),
(1065, 16, 159),
(1066, 17, 159),
(1067, 18, 159),
(1068, 19, 159),
(1069, 20, 159),
(1070, 21, 159),
(1071, 22, 159),
(1072, 23, 159),
(1073, 24, 159),
(1074, 25, 159),
(1075, 26, 159),
(1076, 27, 159),
(1077, 28, 159),
(1078, 29, 159),
(1079, 30, 159),
(1080, 31, 159),
(1081, 32, 159),
(1082, 33, 159),
(1083, 40, 159),
(1084, 53, 159),
(1085, 66, 159),
(1086, 79, 159),
(1087, 92, 159),
(1088, 105, 159),
(1089, 118, 159),
(1090, 131, 159),
(1091, 144, 159),
(1092, 157, 159),
(1093, 170, 159),
(1094, 183, 159),
(1095, 196, 159),
(1096, 209, 159),
(1097, 222, 159),
(1098, 295, 159),
(1099, 1, 160),
(1100, 2, 160),
(1101, 3, 160),
(1102, 4, 160),
(1103, 5, 160),
(1104, 6, 160),
(1105, 7, 160),
(1106, 8, 160),
(1107, 9, 160),
(1108, 10, 160),
(1109, 11, 160),
(1110, 12, 160),
(1111, 13, 160),
(1112, 14, 160),
(1113, 15, 160),
(1114, 16, 160),
(1115, 17, 160),
(1116, 18, 160),
(1117, 19, 160),
(1118, 20, 160),
(1119, 21, 160),
(1120, 22, 160),
(1121, 23, 160),
(1122, 24, 160),
(1123, 25, 160),
(1124, 26, 160),
(1125, 27, 160),
(1126, 28, 160),
(1127, 29, 160),
(1128, 30, 160),
(1129, 31, 160),
(1130, 32, 160),
(1131, 33, 160),
(1132, 40, 160),
(1133, 53, 160),
(1134, 66, 160),
(1135, 79, 160),
(1136, 92, 160),
(1137, 105, 160),
(1138, 118, 160),
(1139, 131, 160),
(1140, 144, 160),
(1141, 157, 160),
(1142, 170, 160),
(1143, 183, 160),
(1144, 196, 160),
(1145, 209, 160),
(1146, 222, 160),
(1147, 295, 160),
(1148, 1, 161),
(1149, 2, 161),
(1150, 3, 161),
(1151, 4, 161),
(1152, 5, 161),
(1153, 6, 161),
(1154, 7, 161),
(1155, 8, 161),
(1156, 9, 161),
(1157, 10, 161),
(1158, 11, 161),
(1159, 12, 161),
(1160, 13, 161),
(1161, 14, 161),
(1162, 15, 161),
(1163, 16, 161),
(1164, 17, 161),
(1165, 18, 161),
(1166, 19, 161),
(1167, 20, 161),
(1168, 21, 161),
(1169, 22, 161),
(1170, 23, 161),
(1171, 24, 161),
(1172, 25, 161),
(1173, 26, 161),
(1174, 27, 161),
(1175, 28, 161),
(1176, 29, 161),
(1177, 30, 161),
(1178, 31, 161),
(1179, 32, 161),
(1180, 33, 161),
(1181, 40, 161),
(1182, 53, 161),
(1183, 66, 161),
(1184, 79, 161),
(1185, 92, 161),
(1186, 105, 161),
(1187, 118, 161),
(1188, 131, 161),
(1189, 144, 161),
(1190, 157, 161),
(1191, 170, 161),
(1192, 183, 161),
(1193, 196, 161),
(1194, 209, 161),
(1195, 222, 161),
(1196, 295, 161),
(1197, 1, 162),
(1198, 2, 162),
(1199, 3, 162),
(1200, 4, 162),
(1201, 5, 162),
(1202, 6, 162),
(1203, 7, 162),
(1204, 8, 162),
(1205, 9, 162),
(1206, 10, 162),
(1207, 11, 162),
(1208, 12, 162),
(1209, 13, 162),
(1210, 14, 162),
(1211, 15, 162),
(1212, 16, 162),
(1213, 17, 162),
(1214, 18, 162),
(1215, 19, 162),
(1216, 20, 162),
(1217, 21, 162),
(1218, 22, 162),
(1219, 23, 162),
(1220, 24, 162),
(1221, 25, 162),
(1222, 26, 162),
(1223, 27, 162),
(1224, 28, 162),
(1225, 29, 162),
(1226, 30, 162),
(1227, 31, 162),
(1228, 32, 162),
(1229, 33, 162),
(1230, 34, 162),
(1231, 36, 162),
(1232, 37, 162),
(1233, 38, 162),
(1234, 39, 162),
(1235, 40, 162),
(1236, 41, 162),
(1237, 42, 162),
(1238, 43, 162),
(1239, 44, 162),
(1240, 47, 162),
(1241, 49, 162),
(1242, 50, 162),
(1243, 51, 162),
(1244, 52, 162),
(1245, 53, 162),
(1246, 54, 162),
(1247, 55, 162),
(1248, 56, 162),
(1249, 57, 162),
(1250, 60, 162),
(1251, 62, 162),
(1252, 63, 162),
(1253, 64, 162),
(1254, 65, 162),
(1255, 66, 162),
(1256, 67, 162),
(1257, 68, 162),
(1258, 69, 162),
(1259, 70, 162),
(1260, 73, 162),
(1261, 75, 162),
(1262, 76, 162),
(1263, 77, 162),
(1264, 78, 162),
(1265, 79, 162),
(1266, 80, 162),
(1267, 81, 162),
(1268, 82, 162),
(1269, 83, 162),
(1270, 86, 162),
(1271, 88, 162),
(1272, 89, 162),
(1273, 90, 162),
(1274, 91, 162),
(1275, 92, 162),
(1276, 93, 162),
(1277, 94, 162),
(1278, 95, 162),
(1279, 96, 162),
(1280, 99, 162),
(1281, 101, 162),
(1282, 102, 162),
(1283, 103, 162),
(1284, 104, 162),
(1285, 105, 162),
(1286, 106, 162),
(1287, 107, 162),
(1288, 108, 162),
(1289, 109, 162),
(1290, 112, 162),
(1291, 114, 162),
(1292, 115, 162),
(1293, 116, 162),
(1294, 117, 162),
(1295, 118, 162),
(1296, 119, 162),
(1297, 120, 162),
(1298, 121, 162),
(1299, 122, 162),
(1300, 125, 162),
(1301, 127, 162),
(1302, 128, 162),
(1303, 129, 162),
(1304, 130, 162),
(1305, 131, 162),
(1306, 132, 162),
(1307, 133, 162),
(1308, 134, 162),
(1309, 135, 162),
(1310, 138, 162),
(1311, 140, 162),
(1312, 141, 162),
(1313, 142, 162),
(1314, 143, 162),
(1315, 144, 162),
(1316, 145, 162),
(1317, 146, 162),
(1318, 147, 162),
(1319, 148, 162),
(1320, 151, 162),
(1321, 153, 162),
(1322, 154, 162),
(1323, 155, 162),
(1324, 156, 162),
(1325, 157, 162),
(1326, 158, 162),
(1327, 159, 162),
(1328, 160, 162),
(1329, 161, 162),
(1330, 164, 162),
(1331, 166, 162),
(1332, 167, 162),
(1333, 168, 162),
(1334, 169, 162),
(1335, 170, 162),
(1336, 171, 162),
(1337, 172, 162),
(1338, 173, 162),
(1339, 174, 162),
(1340, 177, 162),
(1341, 179, 162),
(1342, 180, 162),
(1343, 181, 162),
(1344, 182, 162),
(1345, 183, 162),
(1346, 184, 162),
(1347, 185, 162),
(1348, 186, 162),
(1349, 187, 162),
(1350, 190, 162),
(1351, 192, 162),
(1352, 193, 162),
(1353, 194, 162),
(1354, 195, 162),
(1355, 196, 162),
(1356, 197, 162),
(1357, 198, 162),
(1358, 199, 162),
(1359, 200, 162),
(1360, 203, 162),
(1361, 205, 162),
(1362, 206, 162),
(1363, 207, 162),
(1364, 208, 162),
(1365, 209, 162),
(1366, 210, 162),
(1367, 211, 162),
(1368, 212, 162),
(1369, 213, 162),
(1370, 216, 162),
(1371, 218, 162),
(1372, 219, 162),
(1373, 220, 162),
(1374, 221, 162),
(1375, 222, 162),
(1376, 223, 162),
(1377, 224, 162),
(1378, 225, 162),
(1379, 226, 162),
(1380, 23, 163),
(1381, 24, 163),
(1382, 25, 163),
(1383, 26, 163),
(1384, 27, 163),
(1385, 28, 163),
(1386, 29, 163),
(1387, 30, 163),
(1388, 36, 163),
(1389, 49, 163),
(1390, 62, 163),
(1391, 75, 163),
(1392, 88, 163),
(1393, 101, 163),
(1394, 114, 163),
(1395, 127, 163),
(1396, 140, 163),
(1397, 153, 163),
(1398, 166, 163),
(1399, 179, 163),
(1400, 192, 163),
(1401, 205, 163),
(1402, 218, 163),
(1403, 23, 164),
(1404, 24, 164),
(1405, 25, 164),
(1406, 26, 164),
(1407, 27, 164),
(1408, 28, 164),
(1409, 29, 164),
(1410, 30, 164),
(1411, 36, 164),
(1412, 49, 164),
(1413, 62, 164),
(1414, 75, 164),
(1415, 88, 164),
(1416, 101, 164),
(1417, 114, 164),
(1418, 127, 164),
(1419, 140, 164),
(1420, 153, 164),
(1421, 166, 164),
(1422, 179, 164),
(1423, 192, 164),
(1424, 205, 164),
(1425, 218, 164),
(1426, 23, 165),
(1427, 24, 165),
(1428, 25, 165),
(1429, 26, 165),
(1430, 27, 165),
(1431, 28, 165),
(1432, 29, 165),
(1433, 30, 165),
(1434, 36, 165),
(1435, 49, 165),
(1436, 62, 165),
(1437, 75, 165),
(1438, 88, 165),
(1439, 101, 165),
(1440, 114, 165),
(1441, 127, 165),
(1442, 140, 165),
(1443, 153, 165),
(1444, 166, 165),
(1445, 179, 165),
(1446, 192, 165),
(1447, 205, 165),
(1448, 218, 165),
(1449, 23, 166),
(1450, 24, 166),
(1451, 25, 166),
(1452, 26, 166),
(1453, 27, 166),
(1454, 28, 166),
(1455, 29, 166),
(1456, 30, 166),
(1457, 36, 166),
(1458, 49, 166),
(1459, 62, 166),
(1460, 75, 166),
(1461, 88, 166),
(1462, 101, 166),
(1463, 114, 166),
(1464, 127, 166),
(1465, 140, 166),
(1466, 153, 166),
(1467, 166, 166),
(1468, 179, 166),
(1469, 192, 166),
(1470, 205, 166),
(1471, 218, 166),
(1472, 16, 167),
(1473, 17, 167),
(1474, 18, 167),
(1475, 19, 167),
(1476, 20, 167),
(1477, 21, 167),
(1478, 22, 167),
(1479, 16, 168),
(1480, 17, 168),
(1481, 18, 168),
(1482, 19, 168),
(1483, 20, 168),
(1484, 21, 168),
(1485, 22, 168),
(1486, 16, 169),
(1487, 17, 169),
(1488, 18, 169),
(1489, 19, 169),
(1490, 20, 169),
(1491, 21, 169),
(1492, 22, 169),
(1493, 229, 169),
(1494, 231, 169),
(1495, 295, 169),
(1496, 296, 169),
(1497, 34, 169),
(1498, 38, 169),
(1499, 41, 169),
(1500, 42, 169),
(1501, 43, 169),
(1502, 47, 169),
(1503, 51, 169),
(1504, 54, 169),
(1505, 55, 169),
(1506, 56, 169),
(1507, 60, 169),
(1508, 64, 169),
(1509, 67, 169),
(1510, 68, 169),
(1511, 69, 169),
(1512, 73, 169),
(1513, 77, 169),
(1514, 80, 169),
(1515, 81, 169),
(1516, 82, 169),
(1517, 86, 169),
(1518, 90, 169),
(1519, 93, 169),
(1520, 94, 169),
(1521, 95, 169),
(1522, 99, 169),
(1523, 103, 169),
(1524, 106, 169),
(1525, 107, 169),
(1526, 108, 169),
(1527, 112, 169),
(1528, 116, 169),
(1529, 119, 169),
(1530, 120, 169),
(1531, 121, 169),
(1532, 125, 169),
(1533, 129, 169),
(1534, 132, 169),
(1535, 133, 169),
(1536, 134, 169),
(1537, 138, 169),
(1538, 142, 169),
(1539, 145, 169),
(1540, 146, 169),
(1541, 147, 169),
(1542, 151, 169),
(1543, 155, 169),
(1544, 158, 169),
(1545, 159, 169),
(1546, 160, 169),
(1547, 164, 169),
(1548, 168, 169),
(1549, 171, 169),
(1550, 172, 169),
(1551, 173, 169),
(1552, 177, 169),
(1553, 181, 169),
(1554, 184, 169),
(1555, 185, 169),
(1556, 186, 169),
(1557, 190, 169),
(1558, 194, 169),
(1559, 197, 169),
(1560, 198, 169),
(1561, 199, 169),
(1562, 203, 169),
(1563, 207, 169),
(1564, 210, 169),
(1565, 211, 169),
(1566, 212, 169),
(1567, 216, 169),
(1568, 220, 169),
(1569, 223, 169),
(1570, 224, 169),
(1571, 225, 169),
(1572, 1, 171),
(1573, 2, 171),
(1574, 3, 171),
(1575, 4, 171),
(1576, 14, 171),
(1577, 231, 171),
(1578, 291, 171),
(1579, 1, 172),
(1580, 2, 172),
(1581, 3, 172),
(1582, 4, 172),
(1583, 14, 172),
(1584, 231, 172),
(1585, 291, 172),
(1586, 44, 173),
(1587, 57, 173),
(1588, 70, 173),
(1589, 83, 173),
(1590, 96, 173),
(1591, 109, 173),
(1592, 122, 173),
(1593, 135, 173),
(1594, 148, 173),
(1595, 161, 173),
(1596, 174, 173),
(1597, 187, 173),
(1598, 200, 173),
(1599, 213, 173),
(1600, 226, 173),
(1601, 231, 173),
(1602, 291, 173),
(1603, 44, 174),
(1604, 57, 174),
(1605, 70, 174),
(1606, 83, 174),
(1607, 96, 174),
(1608, 109, 174),
(1609, 122, 174),
(1610, 135, 174),
(1611, 148, 174),
(1612, 161, 174),
(1613, 174, 174),
(1614, 187, 174),
(1615, 200, 174),
(1616, 213, 174),
(1617, 226, 174),
(1618, 231, 174),
(1619, 291, 174),
(1620, 44, 175),
(1621, 57, 175),
(1622, 70, 175),
(1623, 83, 175),
(1624, 96, 175),
(1625, 109, 175),
(1626, 122, 175),
(1627, 135, 175),
(1628, 148, 175),
(1629, 161, 175),
(1630, 174, 175),
(1631, 187, 175),
(1632, 200, 175),
(1633, 213, 175),
(1634, 226, 175),
(1635, 231, 175),
(1636, 296, 175),
(1637, 34, 176),
(1638, 35, 176),
(1639, 36, 176),
(1640, 37, 176),
(1641, 38, 176),
(1642, 39, 176),
(1643, 40, 176),
(1644, 41, 176),
(1645, 42, 176),
(1646, 43, 176),
(1647, 44, 176),
(1648, 45, 176),
(1649, 46, 176),
(1650, 47, 176),
(1651, 48, 176),
(1652, 49, 176),
(1653, 50, 176),
(1654, 51, 176),
(1655, 52, 176),
(1656, 53, 176),
(1657, 54, 176),
(1658, 55, 176),
(1659, 56, 176),
(1660, 57, 176),
(1661, 58, 176),
(1662, 59, 176),
(1663, 60, 176),
(1664, 61, 176),
(1665, 62, 176),
(1666, 63, 176),
(1667, 64, 176),
(1668, 65, 176),
(1669, 66, 176),
(1670, 67, 176),
(1671, 68, 176),
(1672, 69, 176),
(1673, 70, 176),
(1674, 71, 176),
(1675, 72, 176),
(1676, 73, 176),
(1677, 74, 176),
(1678, 75, 176),
(1679, 76, 176),
(1680, 77, 176),
(1681, 78, 176),
(1682, 79, 176),
(1683, 80, 176),
(1684, 81, 176),
(1685, 82, 176),
(1686, 83, 176),
(1687, 84, 176),
(1688, 85, 176),
(1689, 86, 176),
(1690, 87, 176),
(1691, 88, 176),
(1692, 89, 176),
(1693, 90, 176),
(1694, 91, 176),
(1695, 92, 176),
(1696, 93, 176),
(1697, 94, 176),
(1698, 95, 176),
(1699, 96, 176),
(1700, 97, 176),
(1701, 98, 176),
(1702, 99, 176),
(1703, 100, 176),
(1704, 101, 176),
(1705, 102, 176),
(1706, 103, 176),
(1707, 104, 176),
(1708, 105, 176),
(1709, 106, 176),
(1710, 107, 176),
(1711, 108, 176),
(1712, 109, 176),
(1713, 110, 176),
(1714, 111, 176),
(1715, 112, 176),
(1716, 113, 176),
(1717, 114, 176),
(1718, 115, 176),
(1719, 116, 176),
(1720, 117, 176),
(1721, 118, 176),
(1722, 119, 176),
(1723, 120, 176),
(1724, 121, 176),
(1725, 122, 176),
(1726, 123, 176),
(1727, 124, 176),
(1728, 125, 176),
(1729, 126, 176),
(1730, 127, 176),
(1731, 128, 176),
(1732, 129, 176),
(1733, 130, 176),
(1734, 131, 176),
(1735, 132, 176),
(1736, 133, 176),
(1737, 134, 176),
(1738, 135, 176),
(1739, 136, 176),
(1740, 137, 176),
(1741, 138, 176),
(1742, 139, 176),
(1743, 140, 176),
(1744, 141, 176),
(1745, 142, 176),
(1746, 143, 176),
(1747, 144, 176),
(1748, 145, 176),
(1749, 146, 176),
(1750, 147, 176),
(1751, 148, 176),
(1752, 149, 176),
(1753, 150, 176),
(1754, 151, 176),
(1755, 152, 176),
(1756, 153, 176),
(1757, 154, 176),
(1758, 155, 176),
(1759, 156, 176),
(1760, 157, 176),
(1761, 158, 176),
(1762, 159, 176),
(1763, 160, 176),
(1764, 161, 176),
(1765, 162, 176),
(1766, 163, 176),
(1767, 164, 176),
(1768, 165, 176),
(1769, 166, 176),
(1770, 167, 176),
(1771, 168, 176),
(1772, 169, 176),
(1773, 170, 176),
(1774, 171, 176),
(1775, 172, 176),
(1776, 173, 176),
(1777, 174, 176),
(1778, 175, 176),
(1779, 176, 176),
(1780, 177, 176),
(1781, 178, 176),
(1782, 179, 176),
(1783, 180, 176),
(1784, 181, 176),
(1785, 182, 176),
(1786, 183, 176),
(1787, 184, 176),
(1788, 185, 176),
(1789, 186, 176),
(1790, 187, 176),
(1791, 188, 176),
(1792, 189, 176),
(1793, 190, 176),
(1794, 191, 176),
(1795, 192, 176),
(1796, 193, 176),
(1797, 194, 176),
(1798, 195, 176),
(1799, 196, 176),
(1800, 197, 176),
(1801, 198, 176),
(1802, 199, 176),
(1803, 200, 176),
(1804, 201, 176),
(1805, 202, 176),
(1806, 203, 176),
(1807, 204, 176),
(1808, 205, 176),
(1809, 206, 176),
(1810, 207, 176),
(1811, 208, 176),
(1812, 209, 176),
(1813, 210, 176),
(1814, 211, 176),
(1815, 212, 176),
(1816, 213, 176),
(1817, 214, 176),
(1818, 215, 176),
(1819, 216, 176),
(1820, 217, 176),
(1821, 218, 176),
(1822, 219, 176),
(1823, 220, 176),
(1824, 221, 176),
(1825, 222, 176),
(1826, 223, 176),
(1827, 224, 176),
(1828, 225, 176),
(1829, 226, 176),
(1830, 227, 176),
(1831, 228, 176),
(1832, 229, 176),
(1833, 230, 176),
(1834, 231, 176),
(1835, 295, 176),
(1836, 296, 176),
(1837, 34, 177),
(1838, 35, 177),
(1839, 36, 177),
(1840, 37, 177),
(1841, 38, 177),
(1842, 39, 177),
(1843, 40, 177),
(1844, 41, 177),
(1845, 42, 177),
(1846, 43, 177),
(1847, 44, 177),
(1848, 45, 177),
(1849, 46, 177),
(1850, 47, 177),
(1851, 48, 177),
(1852, 49, 177),
(1853, 50, 177),
(1854, 51, 177),
(1855, 52, 177),
(1856, 53, 177),
(1857, 54, 177),
(1858, 55, 177),
(1859, 56, 177),
(1860, 57, 177),
(1861, 58, 177),
(1862, 59, 177),
(1863, 60, 177),
(1864, 61, 177),
(1865, 62, 177),
(1866, 63, 177),
(1867, 64, 177),
(1868, 65, 177),
(1869, 66, 177),
(1870, 67, 177),
(1871, 68, 177),
(1872, 69, 177),
(1873, 70, 177),
(1874, 71, 177),
(1875, 72, 177),
(1876, 73, 177),
(1877, 74, 177),
(1878, 75, 177),
(1879, 76, 177),
(1880, 77, 177),
(1881, 78, 177),
(1882, 79, 177),
(1883, 80, 177),
(1884, 81, 177),
(1885, 82, 177),
(1886, 83, 177),
(1887, 84, 177),
(1888, 85, 177),
(1889, 86, 177),
(1890, 87, 177),
(1891, 88, 177),
(1892, 89, 177),
(1893, 90, 177),
(1894, 91, 177),
(1895, 92, 177),
(1896, 93, 177),
(1897, 94, 177),
(1898, 95, 177),
(1899, 96, 177),
(1900, 97, 177),
(1901, 98, 177),
(1902, 99, 177),
(1903, 100, 177),
(1904, 101, 177),
(1905, 102, 177),
(1906, 103, 177),
(1907, 104, 177),
(1908, 105, 177),
(1909, 106, 177),
(1910, 107, 177),
(1911, 108, 177),
(1912, 109, 177),
(1913, 110, 177),
(1914, 111, 177),
(1915, 112, 177),
(1916, 113, 177),
(1917, 114, 177),
(1918, 115, 177),
(1919, 116, 177),
(1920, 117, 177),
(1921, 118, 177),
(1922, 119, 177),
(1923, 120, 177),
(1924, 121, 177),
(1925, 122, 177),
(1926, 123, 177),
(1927, 124, 177),
(1928, 125, 177),
(1929, 126, 177),
(1930, 127, 177),
(1931, 128, 177),
(1932, 129, 177),
(1933, 130, 177),
(1934, 131, 177),
(1935, 132, 177),
(1936, 133, 177),
(1937, 134, 177),
(1938, 135, 177),
(1939, 136, 177),
(1940, 137, 177),
(1941, 138, 177),
(1942, 139, 177),
(1943, 140, 177),
(1944, 141, 177),
(1945, 142, 177),
(1946, 143, 177),
(1947, 144, 177),
(1948, 145, 177),
(1949, 146, 177),
(1950, 147, 177),
(1951, 148, 177),
(1952, 149, 177),
(1953, 150, 177),
(1954, 151, 177),
(1955, 152, 177),
(1956, 153, 177),
(1957, 154, 177),
(1958, 155, 177),
(1959, 156, 177),
(1960, 157, 177),
(1961, 158, 177),
(1962, 159, 177),
(1963, 160, 177),
(1964, 161, 177),
(1965, 162, 177),
(1966, 163, 177),
(1967, 164, 177),
(1968, 165, 177),
(1969, 166, 177),
(1970, 167, 177),
(1971, 168, 177),
(1972, 169, 177),
(1973, 170, 177),
(1974, 171, 177),
(1975, 172, 177),
(1976, 173, 177),
(1977, 174, 177),
(1978, 175, 177),
(1979, 176, 177),
(1980, 177, 177),
(1981, 178, 177),
(1982, 179, 177),
(1983, 180, 177),
(1984, 181, 177),
(1985, 182, 177),
(1986, 183, 177),
(1987, 184, 177),
(1988, 185, 177),
(1989, 186, 177),
(1990, 187, 177),
(1991, 188, 177),
(1992, 189, 177),
(1993, 190, 177),
(1994, 191, 177),
(1995, 192, 177),
(1996, 193, 177),
(1997, 194, 177),
(1998, 195, 177),
(1999, 196, 177),
(2000, 197, 177),
(2001, 198, 177),
(2002, 199, 177),
(2003, 200, 177),
(2004, 201, 177),
(2005, 202, 177),
(2006, 203, 177),
(2007, 204, 177),
(2008, 205, 177),
(2009, 206, 177),
(2010, 207, 177),
(2011, 208, 177),
(2012, 209, 177),
(2013, 210, 177),
(2014, 211, 177),
(2015, 212, 177),
(2016, 213, 177),
(2017, 214, 177),
(2018, 215, 177),
(2019, 216, 177),
(2020, 217, 177),
(2021, 218, 177),
(2022, 219, 177),
(2023, 220, 177),
(2024, 221, 177),
(2025, 222, 177),
(2026, 223, 177),
(2027, 224, 177),
(2028, 225, 177),
(2029, 226, 177),
(2030, 227, 177),
(2031, 228, 177),
(2032, 229, 177),
(2033, 230, 177),
(2034, 231, 177),
(2035, 295, 177),
(2036, 296, 177),
(2037, 7, 178),
(2038, 8, 178),
(2039, 9, 178),
(2040, 10, 178),
(2041, 231, 178),
(2042, 296, 178),
(2043, 7, 179),
(2044, 8, 179),
(2045, 9, 179),
(2046, 10, 179),
(2047, 231, 179),
(2048, 296, 179),
(2049, 229, 181),
(2050, 231, 181),
(2051, 232, 181),
(2052, 296, 181),
(2053, 229, 182),
(2054, 231, 182),
(2055, 232, 182),
(2056, 296, 182),
(2057, 233, 183),
(2058, 234, 183),
(2059, 235, 183),
(2060, 236, 183),
(2061, 237, 183),
(2062, 238, 183),
(2063, 233, 184),
(2064, 234, 184),
(2065, 235, 184),
(2066, 236, 184),
(2067, 237, 184),
(2068, 238, 184),
(2069, 233, 185),
(2070, 234, 185),
(2071, 235, 185),
(2072, 236, 185),
(2073, 233, 186),
(2074, 234, 186),
(2075, 235, 186),
(2076, 236, 186),
(2077, 237, 186),
(2078, 238, 186),
(2079, 233, 187),
(2080, 234, 187),
(2081, 235, 187),
(2082, 236, 187),
(2083, 237, 187),
(2084, 238, 187),
(2085, 239, 188),
(2086, 240, 188),
(2087, 241, 188),
(2088, 242, 188),
(2089, 243, 188),
(2090, 239, 189),
(2091, 240, 189),
(2092, 241, 189),
(2093, 242, 189),
(2094, 243, 189),
(2095, 239, 190),
(2096, 240, 190),
(2097, 241, 190),
(2098, 239, 191),
(2099, 240, 191),
(2100, 241, 191),
(2101, 242, 191),
(2102, 243, 191),
(2103, 239, 192),
(2104, 240, 192),
(2105, 241, 192),
(2106, 242, 192),
(2107, 243, 192),
(2108, 244, 193),
(2109, 245, 193),
(2110, 246, 193),
(2111, 247, 193),
(2112, 248, 193),
(2113, 249, 193),
(2114, 250, 193),
(2115, 251, 193),
(2116, 244, 194),
(2117, 245, 194),
(2118, 246, 194),
(2119, 247, 194),
(2120, 248, 194),
(2121, 249, 194),
(2122, 250, 194),
(2123, 251, 194),
(2124, 244, 195),
(2125, 247, 195),
(2126, 248, 195),
(2127, 244, 196),
(2128, 245, 196),
(2129, 246, 196),
(2130, 247, 196),
(2131, 248, 196),
(2132, 249, 196),
(2133, 250, 196),
(2134, 251, 196),
(2135, 244, 197),
(2136, 245, 197),
(2137, 246, 197),
(2138, 247, 197),
(2139, 248, 197),
(2140, 249, 197),
(2141, 250, 197),
(2142, 251, 197),
(2143, 233, 198),
(2144, 239, 198),
(2145, 244, 198),
(2146, 233, 200),
(2147, 234, 200),
(2148, 235, 200),
(2149, 236, 200),
(2150, 237, 200),
(2151, 238, 200),
(2152, 239, 200),
(2153, 240, 200),
(2154, 241, 200),
(2155, 242, 200),
(2156, 243, 200),
(2157, 244, 200),
(2158, 245, 200),
(2159, 246, 200),
(2160, 247, 200),
(2161, 248, 200),
(2162, 249, 200),
(2163, 250, 200),
(2164, 251, 200),
(2165, 233, 201),
(2166, 234, 201),
(2167, 235, 201),
(2168, 236, 201),
(2169, 237, 201),
(2170, 238, 201),
(2171, 239, 201),
(2172, 240, 201),
(2173, 241, 201),
(2174, 242, 201),
(2175, 243, 201),
(2176, 244, 201),
(2177, 245, 201),
(2178, 246, 201),
(2179, 247, 201),
(2180, 248, 201),
(2181, 249, 201),
(2182, 250, 201),
(2183, 251, 201),
(2184, 233, 202),
(2185, 234, 202),
(2186, 235, 202),
(2187, 236, 202),
(2188, 237, 202),
(2189, 238, 202),
(2190, 239, 202),
(2191, 240, 202),
(2192, 241, 202),
(2193, 242, 202),
(2194, 243, 202),
(2195, 244, 202),
(2196, 245, 202),
(2197, 246, 202),
(2198, 247, 202),
(2199, 248, 202),
(2200, 249, 202),
(2201, 250, 202),
(2202, 251, 202);

-- --------------------------------------------------------

--
-- Table structure for table `positions`
--

CREATE TABLE IF NOT EXISTS `positions` (
  `positionID` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(64) NOT NULL,
  `division` int(11) NOT NULL,
  `school_department` int(11) NOT NULL,
  PRIMARY KEY (`positionID`),
  UNIQUE KEY `title` (`title`,`division`,`school_department`),
  KEY `division` (`division`),
  KEY `school_department` (`school_department`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=297 ;

--
-- Dumping data for table `positions`
--

INSERT INTO `positions` (`positionID`, `title`, `division`, `school_department`) VALUES
(1, 'President', 1, 1),
(2, 'CEO', 1, 1),
(3, 'Senior Vice President', 1, 1),
(4, 'COO of Fusion', 1, 1),
(5, 'Executive Assistant', 1, 1),
(6, 'DePauw Intern', 1, 1),
(7, 'VP of Education', 1, 2),
(8, 'General Manager of Lexis', 1, 2),
(9, 'Education Manager', 1, 2),
(10, 'New Talent Coordinator', 1, 2),
(11, 'VP of Human Resources', 1, 3),
(12, 'Human Resources Manager', 1, 3),
(13, 'Human Resources Associate', 1, 3),
(14, 'IT Manager', 1, 4),
(15, 'IT Intern', 1, 4),
(16, 'Vice President of Finance', 1, 5),
(17, 'CFO', 1, 5),
(18, 'Corporate Controller', 1, 5),
(19, 'Accounting Associate', 1, 5),
(20, 'Accounts Payable Specialist', 1, 5),
(21, 'Accounting Temp', 1, 5),
(22, 'Accounting Intern', 1, 5),
(23, 'Director of Marketing', 1, 6),
(24, 'Marketing Manager', 1, 6),
(25, 'Marketing Specialist', 1, 6),
(26, 'SEM Marketing Analyst', 1, 6),
(27, 'Marketing PPC', 1, 6),
(28, 'Marketing Intern', 1, 6),
(29, 'Social Media Intern', 1, 6),
(30, 'Marketing Consultant', 1, 6),
(31, 'Vice President of New Business Development', 1, 7),
(32, 'School Launch Manager', 1, 7),
(33, 'Administrative Assistant', 1, 8),
(34, 'Assistant Director', 2, 9),
(35, 'Counselor', 2, 9),
(36, 'Director of Communications & Outreach', 2, 9),
(37, 'Director of First Impressions', 2, 9),
(38, 'Director of Student Development', 2, 9),
(39, 'Director of Tutoring', 2, 9),
(40, 'Fusionologist', 2, 9),
(41, 'Head of School', 2, 9),
(42, 'Information Specialist', 2, 9),
(43, 'Master Teacher', 2, 9),
(44, 'Registrar', 2, 9),
(45, 'Substitute Teacher', 2, 9),
(46, 'Teacher', 2, 9),
(47, 'Assistant Director', 2, 10),
(48, 'Counselor', 2, 10),
(49, 'Director of Communications & Outreach', 2, 10),
(50, 'Director of First Impressions', 2, 10),
(51, 'Director of Student Development', 2, 10),
(52, 'Director of Tutoring', 2, 10),
(53, 'Fusionologist', 2, 10),
(54, 'Head of School', 2, 10),
(55, 'Information Specialist', 2, 10),
(56, 'Master Teacher', 2, 10),
(57, 'Registrar', 2, 10),
(58, 'Substitute Teacher', 2, 10),
(59, 'Teacher', 2, 10),
(60, 'Assistant Director', 2, 11),
(61, 'Counselor', 2, 11),
(62, 'Director of Communications & Outreach', 2, 11),
(63, 'Director of First Impressions', 2, 11),
(64, 'Director of Student Development', 2, 11),
(65, 'Director of Tutoring', 2, 11),
(66, 'Fusionologist', 2, 11),
(67, 'Head of School', 2, 11),
(68, 'Information Specialist', 2, 11),
(69, 'Master Teacher', 2, 11),
(70, 'Registrar', 2, 11),
(71, 'Substitute Teacher', 2, 11),
(72, 'Teacher', 2, 11),
(73, 'Assistant Director', 2, 12),
(74, 'Counselor', 2, 12),
(75, 'Director of Communications & Outreach', 2, 12),
(76, 'Director of First Impressions', 2, 12),
(77, 'Director of Student Development', 2, 12),
(78, 'Director of Tutoring', 2, 12),
(79, 'Fusionologist', 2, 12),
(80, 'Head of School', 2, 12),
(81, 'Information Specialist', 2, 12),
(82, 'Master Teacher', 2, 12),
(83, 'Registrar', 2, 12),
(84, 'Substitute Teacher', 2, 12),
(85, 'Teacher', 2, 12),
(86, 'Assistant Director', 2, 13),
(87, 'Counselor', 2, 13),
(88, 'Director of Communications & Outreach', 2, 13),
(89, 'Director of First Impressions', 2, 13),
(90, 'Director of Student Development', 2, 13),
(91, 'Director of Tutoring', 2, 13),
(92, 'Fusionologist', 2, 13),
(93, 'Head of School', 2, 13),
(94, 'Information Specialist', 2, 13),
(95, 'Master Teacher', 2, 13),
(96, 'Registrar', 2, 13),
(97, 'Substitute Teacher', 2, 13),
(98, 'Teacher', 2, 13),
(99, 'Assistant Director', 2, 14),
(100, 'Counselor', 2, 14),
(101, 'Director of Communications & Outreach', 2, 14),
(102, 'Director of First Impressions', 2, 14),
(103, 'Director of Student Development', 2, 14),
(104, 'Director of Tutoring', 2, 14),
(105, 'Fusionologist', 2, 14),
(106, 'Head of School', 2, 14),
(107, 'Information Specialist', 2, 14),
(108, 'Master Teacher', 2, 14),
(109, 'Registrar', 2, 14),
(110, 'Substitute Teacher', 2, 14),
(111, 'Teacher', 2, 14),
(112, 'Assistant Director', 2, 15),
(113, 'Counselor', 2, 15),
(114, 'Director of Communications & Outreach', 2, 15),
(115, 'Director of First Impressions', 2, 15),
(116, 'Director of Student Development', 2, 15),
(117, 'Director of Tutoring', 2, 15),
(118, 'Fusionologist', 2, 15),
(119, 'Head of School', 2, 15),
(120, 'Information Specialist', 2, 15),
(121, 'Master Teacher', 2, 15),
(122, 'Registrar', 2, 15),
(123, 'Substitute Teacher', 2, 15),
(124, 'Teacher', 2, 15),
(125, 'Assistant Director', 2, 16),
(126, 'Counselor', 2, 16),
(127, 'Director of Communications & Outreach', 2, 16),
(128, 'Director of First Impressions', 2, 16),
(129, 'Director of Student Development', 2, 16),
(130, 'Director of Tutoring', 2, 16),
(131, 'Fusionologist', 2, 16),
(132, 'Head of School', 2, 16),
(133, 'Information Specialist', 2, 16),
(134, 'Master Teacher', 2, 16),
(135, 'Registrar', 2, 16),
(136, 'Substitute Teacher', 2, 16),
(137, 'Teacher', 2, 16),
(138, 'Assistant Director', 2, 17),
(139, 'Counselor', 2, 17),
(140, 'Director of Communications & Outreach', 2, 17),
(141, 'Director of First Impressions', 2, 17),
(142, 'Director of Student Development', 2, 17),
(143, 'Director of Tutoring', 2, 17),
(144, 'Fusionologist', 2, 17),
(145, 'Head of School', 2, 17),
(146, 'Information Specialist', 2, 17),
(147, 'Master Teacher', 2, 17),
(148, 'Registrar', 2, 17),
(149, 'Substitute Teacher', 2, 17),
(150, 'Teacher', 2, 17),
(151, 'Assistant Director', 2, 18),
(152, 'Counselor', 2, 18),
(153, 'Director of Communications & Outreach', 2, 18),
(154, 'Director of First Impressions', 2, 18),
(155, 'Director of Student Development', 2, 18),
(156, 'Director of Tutoring', 2, 18),
(157, 'Fusionologist', 2, 18),
(158, 'Head of School', 2, 18),
(159, 'Information Specialist', 2, 18),
(160, 'Master Teacher', 2, 18),
(161, 'Registrar', 2, 18),
(162, 'Substitute Teacher', 2, 18),
(163, 'Teacher', 2, 18),
(164, 'Assistant Director', 2, 19),
(165, 'Counselor', 2, 19),
(166, 'Director of Communications & Outreach', 2, 19),
(167, 'Director of First Impressions', 2, 19),
(168, 'Director of Student Development', 2, 19),
(169, 'Director of Tutoring', 2, 19),
(170, 'Fusionologist', 2, 19),
(171, 'Head of School', 2, 19),
(172, 'Information Specialist', 2, 19),
(173, 'Master Teacher', 2, 19),
(174, 'Registrar', 2, 19),
(175, 'Substitute Teacher', 2, 19),
(176, 'Teacher', 2, 19),
(177, 'Assistant Director', 2, 20),
(178, 'Counselor', 2, 20),
(179, 'Director of Communications & Outreach', 2, 20),
(180, 'Director of First Impressions', 2, 20),
(181, 'Director of Student Development', 2, 20),
(182, 'Director of Tutoring', 2, 20),
(183, 'Fusionologist', 2, 20),
(184, 'Head of School', 2, 20),
(185, 'Information Specialist', 2, 20),
(186, 'Master Teacher', 2, 20),
(187, 'Registrar', 2, 20),
(188, 'Substitute Teacher', 2, 20),
(189, 'Teacher', 2, 20),
(190, 'Assistant Director', 2, 21),
(191, 'Counselor', 2, 21),
(192, 'Director of Communications & Outreach', 2, 21),
(193, 'Director of First Impressions', 2, 21),
(194, 'Director of Student Development', 2, 21),
(195, 'Director of Tutoring', 2, 21),
(196, 'Fusionologist', 2, 21),
(197, 'Head of School', 2, 21),
(198, 'Information Specialist', 2, 21),
(199, 'Master Teacher', 2, 21),
(200, 'Registrar', 2, 21),
(201, 'Substitute Teacher', 2, 21),
(202, 'Teacher', 2, 21),
(203, 'Assistant Director', 2, 22),
(204, 'Counselor', 2, 22),
(205, 'Director of Communications & Outreach', 2, 22),
(206, 'Director of First Impressions', 2, 22),
(207, 'Director of Student Development', 2, 22),
(208, 'Director of Tutoring', 2, 22),
(209, 'Fusionologist', 2, 22),
(210, 'Head of School', 2, 22),
(211, 'Information Specialist', 2, 22),
(212, 'Master Teacher', 2, 22),
(213, 'Registrar', 2, 22),
(214, 'Substitute Teacher', 2, 22),
(215, 'Teacher', 2, 22),
(216, 'Assistant Director', 2, 23),
(217, 'Counselor', 2, 23),
(218, 'Director of Communications & Outreach', 2, 23),
(219, 'Director of First Impressions', 2, 23),
(220, 'Director of Student Development', 2, 23),
(221, 'Director of Tutoring', 2, 23),
(222, 'Fusionologist', 2, 23),
(223, 'Head of School', 2, 23),
(224, 'Information Specialist', 2, 23),
(225, 'Master Teacher', 2, 23),
(226, 'Registrar', 2, 23),
(227, 'Substitute Teacher', 2, 23),
(228, 'Teacher', 2, 23),
(229, 'Regional Assistant', 2, 24),
(230, 'Regional Director of Community Outreach', 2, 24),
(231, 'Director of Operations', 2, 24),
(232, 'New Talent Coordinator', 2, 24),
(233, 'Head of School', 3, 25),
(234, 'Assistant Head of School', 3, 25),
(235, 'Director of Admissions', 3, 25),
(236, 'Business Manager', 3, 25),
(237, 'Teacher', 3, 25),
(238, 'Substitute Teacher', 3, 25),
(239, 'Head of School', 3, 26),
(240, 'Admissions Coordinator', 3, 26),
(241, 'MS Director', 3, 26),
(242, 'Teacher', 3, 26),
(243, 'Substitute Teacher', 3, 26),
(244, 'Head of School', 3, 27),
(245, 'Psychologist', 3, 27),
(246, 'Outreach', 3, 27),
(247, 'Principal', 3, 27),
(248, 'Admin/Admissions Coordinator', 3, 27),
(249, 'Office Manager', 3, 27),
(250, 'Teacher', 3, 27),
(251, 'Substitute Teacher', 3, 27),
(252, 'Executive Director', 4, 28),
(253, 'Teacher', 4, 28),
(254, 'Executive Director', 4, 29),
(255, 'Teacher', 4, 29),
(256, 'Executive Director', 4, 30),
(257, 'Teacher', 4, 30),
(258, 'Executive Director', 4, 31),
(259, 'Teacher', 4, 31),
(260, 'Executive Director', 4, 32),
(261, 'Teacher', 4, 32),
(262, 'Executive Director', 4, 33),
(263, 'Teacher', 4, 33),
(264, 'Executive Director', 4, 34),
(265, 'Teacher', 4, 34),
(266, 'Executive Director', 4, 35),
(267, 'Teacher', 4, 35),
(268, 'Executive Director', 4, 36),
(269, 'Teacher', 4, 36),
(270, 'Executive Director', 4, 37),
(271, 'Teacher', 4, 37),
(272, 'Executive Director', 4, 38),
(273, 'Teacher', 4, 38),
(274, 'Executive Director', 4, 39),
(275, 'Teacher', 4, 39),
(276, 'Executive Director', 4, 40),
(277, 'Teacher', 4, 40),
(278, 'Executive Director', 4, 41),
(279, 'Teacher', 4, 41),
(280, 'Executive Director', 4, 42),
(281, 'Teacher', 4, 42),
(282, 'Executive Director', 4, 43),
(283, 'Teacher', 4, 43),
(284, 'President', 4, 44),
(285, 'VP of Finance', 4, 44),
(286, 'Director of Operations', 4, 44),
(287, 'Regional Director', 4, 44),
(288, 'Director of Research & Development', 4, 44),
(289, 'Director of Human Resources', 4, 44),
(290, 'Director of Operations & Facilities', 4, 44),
(291, 'Director of Curriculum', 4, 44),
(292, 'Director of Talent', 4, 44),
(293, 'Executive Assistant to the President', 4, 44),
(294, 'Executive Assistant to Finance', 4, 44),
(295, 'Regional Fusionologist', 2, 24),
(296, 'Regional Director', 2, 24);

-- --------------------------------------------------------

--
-- Table structure for table `read_permissions`
--

CREATE TABLE IF NOT EXISTS `read_permissions` (
  `readPermissionID` int(11) NOT NULL AUTO_INCREMENT,
  `position` int(11) NOT NULL,
  `directory` int(11) NOT NULL,
  PRIMARY KEY (`readPermissionID`),
  UNIQUE KEY `position` (`position`,`directory`),
  KEY `directory` (`directory`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2836 ;

--
-- Dumping data for table `read_permissions`
--

INSERT INTO `read_permissions` (`readPermissionID`, `position`, `directory`) VALUES
(51, 37, 34),
(52, 50, 34),
(53, 63, 34),
(54, 76, 34),
(55, 89, 34),
(56, 102, 34),
(57, 115, 34),
(58, 128, 34),
(59, 121, 34),
(60, 154, 34),
(61, 167, 34),
(62, 180, 34),
(63, 193, 34),
(64, 206, 34),
(65, 219, 34),
(66, 34, 34),
(67, 47, 34),
(68, 60, 34),
(69, 73, 34),
(70, 86, 34),
(71, 99, 34),
(72, 112, 34),
(73, 125, 34),
(74, 138, 34),
(75, 151, 34),
(76, 164, 34),
(77, 177, 34),
(78, 190, 34),
(79, 203, 34),
(80, 216, 34),
(81, 41, 34),
(82, 54, 34),
(83, 67, 34),
(84, 80, 34),
(85, 93, 34),
(86, 106, 34),
(87, 119, 34),
(88, 132, 34),
(89, 145, 34),
(90, 158, 34),
(91, 171, 34),
(92, 184, 34),
(93, 197, 34),
(94, 210, 34),
(95, 223, 34),
(96, 233, 34),
(97, 239, 34),
(98, 244, 34),
(102, 37, 35),
(103, 50, 35),
(104, 63, 35),
(105, 76, 35),
(106, 89, 35),
(107, 102, 35),
(108, 115, 35),
(109, 128, 35),
(110, 121, 35),
(111, 154, 35),
(112, 167, 35),
(113, 180, 35),
(114, 193, 35),
(115, 206, 35),
(116, 219, 35),
(117, 35, 35),
(118, 47, 35),
(119, 60, 35),
(120, 73, 35),
(121, 86, 35),
(122, 99, 35),
(123, 112, 35),
(124, 125, 35),
(125, 138, 35),
(126, 151, 35),
(127, 164, 35),
(128, 177, 35),
(129, 190, 35),
(130, 203, 35),
(131, 216, 35),
(132, 41, 35),
(133, 54, 35),
(134, 67, 35),
(135, 80, 35),
(136, 93, 35),
(137, 106, 35),
(138, 119, 35),
(139, 132, 35),
(140, 145, 35),
(141, 158, 35),
(142, 171, 35),
(143, 184, 35),
(144, 197, 35),
(145, 210, 35),
(146, 223, 35),
(147, 233, 35),
(148, 239, 35),
(149, 244, 35),
(153, 37, 36),
(154, 50, 36),
(155, 63, 36),
(156, 76, 36),
(157, 89, 36),
(158, 102, 36),
(159, 115, 36),
(160, 128, 36),
(161, 121, 36),
(162, 154, 36),
(163, 167, 36),
(164, 180, 36),
(165, 193, 36),
(166, 206, 36),
(167, 219, 36),
(168, 36, 36),
(169, 47, 36),
(170, 60, 36),
(171, 73, 36),
(172, 86, 36),
(173, 99, 36),
(174, 112, 36),
(175, 125, 36),
(176, 138, 36),
(177, 151, 36),
(178, 164, 36),
(179, 177, 36),
(180, 190, 36),
(181, 203, 36),
(182, 216, 36),
(183, 41, 36),
(184, 54, 36),
(185, 67, 36),
(186, 80, 36),
(187, 93, 36),
(188, 106, 36),
(189, 119, 36),
(190, 132, 36),
(191, 145, 36),
(192, 158, 36),
(193, 171, 36),
(194, 184, 36),
(195, 197, 36),
(196, 210, 36),
(197, 223, 36),
(198, 233, 36),
(199, 239, 36),
(200, 244, 36),
(208, 37, 38),
(209, 50, 38),
(210, 63, 38),
(211, 76, 38),
(212, 89, 38),
(213, 102, 38),
(214, 115, 38),
(215, 128, 38),
(216, 121, 38),
(217, 154, 38),
(218, 167, 38),
(219, 180, 38),
(220, 193, 38),
(221, 206, 38),
(222, 219, 38),
(223, 38, 38),
(224, 47, 38),
(225, 60, 38),
(226, 73, 38),
(227, 86, 38),
(228, 99, 38),
(229, 112, 38),
(230, 125, 38),
(231, 138, 38),
(232, 151, 38),
(233, 164, 38),
(234, 177, 38),
(235, 190, 38),
(236, 203, 38),
(237, 216, 38),
(238, 41, 38),
(239, 54, 38),
(240, 67, 38),
(241, 80, 38),
(242, 93, 38),
(243, 106, 38),
(244, 119, 38),
(245, 132, 38),
(246, 145, 38),
(247, 158, 38),
(248, 171, 38),
(249, 184, 38),
(250, 197, 38),
(251, 210, 38),
(252, 223, 38),
(253, 233, 38),
(254, 239, 38),
(255, 244, 38),
(531, 7, 89),
(532, 8, 89),
(533, 9, 89),
(534, 10, 89),
(535, 11, 89),
(536, 12, 89),
(537, 13, 89),
(538, 14, 89),
(539, 15, 89),
(540, 16, 89),
(541, 17, 89),
(542, 18, 89),
(543, 19, 89),
(544, 20, 89),
(545, 21, 89),
(546, 22, 89),
(547, 23, 89),
(548, 24, 89),
(549, 25, 89),
(550, 26, 89),
(551, 27, 89),
(552, 28, 89),
(553, 29, 89),
(554, 30, 89),
(557, 33, 89),
(564, 7, 90),
(565, 8, 90),
(566, 9, 90),
(567, 10, 90),
(568, 11, 90),
(569, 12, 90),
(570, 13, 90),
(571, 14, 90),
(572, 15, 90),
(573, 16, 90),
(574, 17, 90),
(575, 18, 90),
(576, 19, 90),
(577, 20, 90),
(578, 21, 90),
(579, 22, 90),
(580, 23, 90),
(581, 24, 90),
(582, 25, 90),
(583, 26, 90),
(584, 27, 90),
(585, 28, 90),
(586, 29, 90),
(587, 30, 90),
(590, 33, 90),
(724, 7, 100),
(725, 8, 100),
(726, 9, 100),
(727, 10, 100),
(728, 11, 100),
(729, 12, 100),
(730, 13, 100),
(731, 14, 100),
(732, 15, 100),
(733, 16, 100),
(734, 17, 100),
(735, 18, 100),
(736, 19, 100),
(737, 20, 100),
(738, 21, 100),
(739, 22, 100),
(740, 23, 100),
(741, 24, 100),
(742, 25, 100),
(743, 26, 100),
(744, 27, 100),
(745, 28, 100),
(746, 29, 100),
(747, 30, 100),
(748, 31, 100),
(749, 32, 100),
(750, 33, 100),
(751, 34, 100),
(752, 35, 100),
(753, 36, 100),
(754, 37, 100),
(755, 38, 100),
(756, 39, 100),
(757, 40, 100),
(758, 41, 100),
(759, 42, 100),
(760, 43, 100),
(761, 44, 100),
(762, 45, 100),
(763, 46, 100),
(764, 47, 100),
(765, 48, 100),
(766, 49, 100),
(767, 50, 100),
(768, 51, 100),
(769, 52, 100),
(770, 53, 100),
(771, 54, 100),
(772, 55, 100),
(773, 56, 100),
(774, 57, 100),
(775, 58, 100),
(776, 59, 100),
(777, 60, 100),
(778, 61, 100),
(779, 62, 100),
(780, 63, 100),
(781, 64, 100),
(782, 65, 100),
(783, 66, 100),
(784, 67, 100),
(785, 68, 100),
(786, 69, 100),
(787, 70, 100),
(788, 71, 100),
(789, 72, 100),
(790, 73, 100),
(791, 74, 100),
(792, 75, 100),
(793, 76, 100),
(794, 77, 100),
(795, 78, 100),
(796, 79, 100),
(797, 80, 100),
(798, 81, 100),
(799, 82, 100),
(800, 83, 100),
(801, 84, 100),
(802, 85, 100),
(803, 86, 100),
(804, 87, 100),
(805, 88, 100),
(806, 89, 100),
(807, 90, 100),
(808, 91, 100),
(809, 92, 100),
(810, 93, 100),
(811, 94, 100),
(812, 95, 100),
(813, 96, 100),
(814, 97, 100),
(815, 98, 100),
(816, 99, 100),
(817, 100, 100),
(818, 101, 100),
(819, 102, 100),
(820, 103, 100),
(821, 104, 100),
(822, 105, 100),
(823, 106, 100),
(824, 107, 100),
(825, 108, 100),
(826, 109, 100),
(827, 110, 100),
(828, 111, 100),
(829, 112, 100),
(830, 113, 100),
(831, 114, 100),
(832, 115, 100),
(833, 116, 100),
(834, 117, 100),
(835, 118, 100),
(836, 119, 100),
(837, 120, 100),
(838, 121, 100),
(839, 122, 100),
(840, 123, 100),
(841, 124, 100),
(842, 125, 100),
(843, 126, 100),
(844, 127, 100),
(845, 128, 100),
(846, 129, 100),
(847, 130, 100),
(848, 131, 100),
(849, 132, 100),
(850, 133, 100),
(851, 134, 100),
(852, 135, 100),
(853, 136, 100),
(854, 137, 100),
(855, 138, 100),
(856, 139, 100),
(857, 140, 100),
(858, 141, 100),
(859, 142, 100),
(860, 143, 100),
(861, 144, 100),
(862, 145, 100),
(863, 146, 100),
(864, 147, 100),
(865, 148, 100),
(866, 149, 100),
(867, 150, 100),
(868, 151, 100),
(869, 152, 100),
(870, 153, 100),
(871, 154, 100),
(872, 155, 100),
(873, 156, 100),
(874, 157, 100),
(875, 158, 100),
(876, 159, 100),
(877, 160, 100),
(878, 161, 100),
(879, 162, 100),
(880, 163, 100),
(881, 164, 100),
(882, 165, 100),
(883, 166, 100),
(884, 167, 100),
(885, 168, 100),
(886, 169, 100),
(887, 170, 100),
(888, 171, 100),
(889, 172, 100),
(890, 173, 100),
(891, 174, 100),
(892, 175, 100),
(893, 176, 100),
(894, 177, 100),
(895, 178, 100),
(896, 179, 100),
(897, 180, 100),
(898, 181, 100),
(899, 182, 100),
(900, 183, 100),
(901, 184, 100),
(902, 185, 100),
(903, 186, 100),
(904, 187, 100),
(905, 188, 100),
(906, 189, 100),
(907, 190, 100),
(908, 191, 100),
(909, 192, 100),
(910, 193, 100),
(911, 194, 100),
(912, 195, 100),
(913, 196, 100),
(914, 197, 100),
(915, 198, 100),
(916, 199, 100),
(917, 200, 100),
(918, 201, 100),
(919, 202, 100),
(920, 203, 100),
(921, 204, 100),
(922, 205, 100),
(923, 206, 100),
(924, 207, 100),
(925, 208, 100),
(926, 209, 100),
(927, 210, 100),
(928, 211, 100),
(929, 212, 100),
(930, 213, 100),
(931, 214, 100),
(932, 215, 100),
(933, 216, 100),
(934, 217, 100),
(935, 218, 100),
(936, 219, 100),
(937, 220, 100),
(938, 221, 100),
(939, 222, 100),
(940, 223, 100),
(941, 224, 100),
(942, 225, 100),
(943, 226, 100),
(944, 227, 100),
(945, 228, 100),
(946, 229, 100),
(947, 230, 100),
(948, 231, 100),
(949, 232, 100),
(950, 233, 100),
(951, 234, 100),
(952, 235, 100),
(953, 236, 100),
(954, 237, 100),
(955, 238, 100),
(956, 239, 100),
(957, 240, 100),
(958, 241, 100),
(959, 242, 100),
(960, 243, 100),
(961, 244, 100),
(962, 245, 100),
(963, 246, 100),
(964, 247, 100),
(965, 248, 100),
(966, 249, 100),
(967, 250, 100),
(968, 251, 100),
(969, 252, 100),
(970, 253, 100),
(971, 254, 100),
(972, 255, 100),
(973, 256, 100),
(974, 257, 100),
(975, 258, 100),
(976, 259, 100),
(977, 260, 100),
(978, 261, 100),
(979, 262, 100),
(980, 263, 100),
(981, 264, 100),
(982, 265, 100),
(983, 266, 100),
(984, 267, 100),
(985, 268, 100),
(986, 269, 100),
(987, 270, 100),
(988, 271, 100),
(989, 272, 100),
(990, 273, 100),
(991, 274, 100),
(992, 275, 100),
(993, 276, 100),
(994, 277, 100),
(995, 278, 100),
(996, 279, 100),
(997, 280, 100),
(998, 281, 100),
(999, 282, 100),
(1000, 283, 100),
(1001, 284, 100),
(1002, 285, 100),
(1003, 286, 100),
(1004, 287, 100),
(1005, 288, 100),
(1006, 289, 100),
(1007, 290, 100),
(1008, 291, 100),
(1009, 292, 100),
(1010, 293, 100),
(1011, 294, 100),
(1012, 295, 100),
(1013, 296, 100),
(1020, 7, 101),
(1021, 8, 101),
(1022, 9, 101),
(1023, 10, 101),
(1024, 11, 101),
(1025, 12, 101),
(1026, 13, 101),
(1027, 14, 101),
(1028, 15, 101),
(1029, 16, 101),
(1030, 17, 101),
(1031, 18, 101),
(1032, 19, 101),
(1033, 20, 101),
(1034, 21, 101),
(1035, 22, 101),
(1036, 23, 101),
(1037, 24, 101),
(1038, 25, 101),
(1039, 26, 101),
(1040, 27, 101),
(1041, 28, 101),
(1042, 29, 101),
(1043, 30, 101),
(1044, 31, 101),
(1045, 32, 101),
(1046, 33, 101),
(1047, 34, 101),
(1048, 35, 101),
(1049, 36, 101),
(1050, 37, 101),
(1051, 38, 101),
(1052, 39, 101),
(1053, 40, 101),
(1054, 41, 101),
(1055, 42, 101),
(1056, 43, 101),
(1057, 44, 101),
(1058, 45, 101),
(1059, 46, 101),
(1060, 47, 101),
(1061, 48, 101),
(1062, 49, 101),
(1063, 50, 101),
(1064, 51, 101),
(1065, 52, 101),
(1066, 53, 101),
(1067, 54, 101),
(1068, 55, 101),
(1069, 56, 101),
(1070, 57, 101),
(1071, 58, 101),
(1072, 59, 101),
(1073, 60, 101),
(1074, 61, 101),
(1075, 62, 101),
(1076, 63, 101),
(1077, 64, 101),
(1078, 65, 101),
(1079, 66, 101),
(1080, 67, 101),
(1081, 68, 101),
(1082, 69, 101),
(1083, 70, 101),
(1084, 71, 101),
(1085, 72, 101),
(1086, 73, 101),
(1087, 74, 101),
(1088, 75, 101),
(1089, 76, 101),
(1090, 77, 101),
(1091, 78, 101),
(1092, 79, 101),
(1093, 80, 101),
(1094, 81, 101),
(1095, 82, 101),
(1096, 83, 101),
(1097, 84, 101),
(1098, 85, 101),
(1099, 86, 101),
(1100, 87, 101),
(1101, 88, 101),
(1102, 89, 101),
(1103, 90, 101),
(1104, 91, 101),
(1105, 92, 101),
(1106, 93, 101),
(1107, 94, 101),
(1108, 95, 101),
(1109, 96, 101),
(1110, 97, 101),
(1111, 98, 101),
(1112, 99, 101),
(1113, 100, 101),
(1114, 101, 101),
(1115, 102, 101),
(1116, 103, 101),
(1117, 104, 101),
(1118, 105, 101),
(1119, 106, 101),
(1120, 107, 101),
(1121, 108, 101),
(1122, 109, 101),
(1123, 110, 101),
(1124, 111, 101),
(1125, 112, 101),
(1126, 113, 101),
(1127, 114, 101),
(1128, 115, 101),
(1129, 116, 101),
(1130, 117, 101),
(1131, 118, 101),
(1132, 119, 101),
(1133, 120, 101),
(1134, 121, 101),
(1135, 122, 101),
(1136, 123, 101),
(1137, 124, 101),
(1138, 125, 101),
(1139, 126, 101),
(1140, 127, 101),
(1141, 128, 101),
(1142, 129, 101),
(1143, 130, 101),
(1144, 131, 101),
(1145, 132, 101),
(1146, 133, 101),
(1147, 134, 101),
(1148, 135, 101),
(1149, 136, 101),
(1150, 137, 101),
(1151, 138, 101),
(1152, 139, 101),
(1153, 140, 101),
(1154, 141, 101),
(1155, 142, 101),
(1156, 143, 101),
(1157, 144, 101),
(1158, 145, 101),
(1159, 146, 101),
(1160, 147, 101),
(1161, 148, 101),
(1162, 149, 101),
(1163, 150, 101),
(1164, 151, 101),
(1165, 152, 101),
(1166, 153, 101),
(1167, 154, 101),
(1168, 155, 101),
(1169, 156, 101),
(1170, 157, 101),
(1171, 158, 101),
(1172, 159, 101),
(1173, 160, 101),
(1174, 161, 101),
(1175, 162, 101),
(1176, 163, 101),
(1177, 164, 101),
(1178, 165, 101),
(1179, 166, 101),
(1180, 167, 101),
(1181, 168, 101),
(1182, 169, 101),
(1183, 170, 101),
(1184, 171, 101),
(1185, 172, 101),
(1186, 173, 101),
(1187, 174, 101),
(1188, 175, 101),
(1189, 176, 101),
(1190, 177, 101),
(1191, 178, 101),
(1192, 179, 101),
(1193, 180, 101),
(1194, 181, 101),
(1195, 182, 101),
(1196, 183, 101),
(1197, 184, 101),
(1198, 185, 101),
(1199, 186, 101),
(1200, 187, 101),
(1201, 188, 101),
(1202, 189, 101),
(1203, 190, 101),
(1204, 191, 101),
(1205, 192, 101),
(1206, 193, 101),
(1207, 194, 101),
(1208, 195, 101),
(1209, 196, 101),
(1210, 197, 101),
(1211, 198, 101),
(1212, 199, 101),
(1213, 200, 101),
(1214, 201, 101),
(1215, 202, 101),
(1216, 203, 101),
(1217, 204, 101),
(1218, 205, 101),
(1219, 206, 101),
(1220, 207, 101),
(1221, 208, 101),
(1222, 209, 101),
(1223, 210, 101),
(1224, 211, 101),
(1225, 212, 101),
(1226, 213, 101),
(1227, 214, 101),
(1228, 215, 101),
(1229, 216, 101),
(1230, 217, 101),
(1231, 218, 101),
(1232, 219, 101),
(1233, 220, 101),
(1234, 221, 101),
(1235, 222, 101),
(1236, 223, 101),
(1237, 224, 101),
(1238, 225, 101),
(1239, 226, 101),
(1240, 227, 101),
(1241, 228, 101),
(1242, 229, 101),
(1243, 230, 101),
(1244, 231, 101),
(1245, 232, 101),
(1246, 233, 101),
(1247, 234, 101),
(1248, 235, 101),
(1249, 236, 101),
(1250, 237, 101),
(1251, 238, 101),
(1252, 239, 101),
(1253, 240, 101),
(1254, 241, 101),
(1255, 242, 101),
(1256, 243, 101),
(1257, 244, 101),
(1258, 245, 101),
(1259, 246, 101),
(1260, 247, 101),
(1261, 248, 101),
(1262, 249, 101),
(1263, 250, 101),
(1264, 251, 101),
(1265, 252, 101),
(1266, 253, 101),
(1267, 254, 101),
(1268, 255, 101),
(1269, 256, 101),
(1270, 257, 101),
(1271, 258, 101),
(1272, 259, 101),
(1273, 260, 101),
(1274, 261, 101),
(1275, 262, 101),
(1276, 263, 101),
(1277, 264, 101),
(1278, 265, 101),
(1279, 266, 101),
(1280, 267, 101),
(1281, 268, 101),
(1282, 269, 101),
(1283, 270, 101),
(1284, 271, 101),
(1285, 272, 101),
(1286, 273, 101),
(1287, 274, 101),
(1288, 275, 101),
(1289, 276, 101),
(1290, 277, 101),
(1291, 278, 101),
(1292, 279, 101),
(1293, 280, 101),
(1294, 281, 101),
(1295, 282, 101),
(1296, 283, 101),
(1297, 284, 101),
(1298, 285, 101),
(1299, 286, 101),
(1300, 287, 101),
(1301, 288, 101),
(1302, 289, 101),
(1303, 290, 101),
(1304, 291, 101),
(1305, 292, 101),
(1306, 293, 101),
(1307, 294, 101),
(1308, 295, 101),
(1309, 296, 101),
(1455, 34, 159),
(1456, 36, 159),
(1457, 37, 159),
(1458, 38, 159),
(1459, 39, 159),
(1461, 41, 159),
(1462, 42, 159),
(1463, 43, 159),
(1464, 44, 159),
(1465, 47, 159),
(1466, 49, 159),
(1467, 50, 159),
(1468, 51, 159),
(1469, 52, 159),
(1471, 54, 159),
(1472, 55, 159),
(1473, 56, 159),
(1474, 57, 159),
(1475, 60, 159),
(1476, 62, 159),
(1477, 63, 159),
(1478, 64, 159),
(1479, 65, 159),
(1481, 67, 159),
(1482, 68, 159),
(1483, 69, 159),
(1484, 70, 159),
(1485, 73, 159),
(1486, 75, 159),
(1487, 76, 159),
(1488, 77, 159),
(1489, 78, 159),
(1491, 80, 159),
(1492, 81, 159),
(1493, 82, 159),
(1494, 83, 159),
(1495, 86, 159),
(1496, 88, 159),
(1497, 89, 159),
(1498, 90, 159),
(1499, 91, 159),
(1501, 93, 159),
(1502, 94, 159),
(1503, 95, 159),
(1504, 96, 159),
(1505, 99, 159),
(1506, 101, 159),
(1507, 102, 159),
(1508, 103, 159),
(1509, 104, 159),
(1511, 106, 159),
(1512, 107, 159),
(1513, 108, 159),
(1514, 109, 159),
(1515, 112, 159),
(1516, 114, 159),
(1517, 115, 159),
(1518, 116, 159),
(1519, 117, 159),
(1521, 119, 159),
(1522, 120, 159),
(1523, 121, 159),
(1524, 122, 159),
(1525, 125, 159),
(1526, 127, 159),
(1527, 128, 159),
(1528, 129, 159),
(1529, 130, 159),
(1531, 132, 159),
(1532, 133, 159),
(1533, 134, 159),
(1534, 135, 159),
(1535, 138, 159),
(1536, 140, 159),
(1537, 141, 159),
(1538, 142, 159),
(1539, 143, 159),
(1541, 145, 159),
(1542, 146, 159),
(1543, 147, 159),
(1544, 148, 159),
(1545, 151, 159),
(1546, 153, 159),
(1547, 154, 159),
(1548, 155, 159),
(1549, 156, 159),
(1551, 158, 159),
(1552, 159, 159),
(1553, 160, 159),
(1554, 161, 159),
(1555, 164, 159),
(1556, 166, 159),
(1557, 167, 159),
(1558, 168, 159),
(1559, 169, 159),
(1561, 171, 159),
(1562, 172, 159),
(1563, 173, 159),
(1564, 174, 159),
(1565, 177, 159),
(1566, 179, 159),
(1567, 180, 159),
(1568, 181, 159),
(1569, 182, 159),
(1571, 184, 159),
(1572, 185, 159),
(1573, 186, 159),
(1574, 187, 159),
(1575, 190, 159),
(1576, 192, 159),
(1577, 193, 159),
(1578, 194, 159),
(1579, 195, 159),
(1581, 197, 159),
(1582, 198, 159),
(1583, 199, 159),
(1584, 200, 159),
(1585, 203, 159),
(1586, 205, 159),
(1587, 206, 159),
(1588, 207, 159),
(1589, 208, 159),
(1591, 210, 159),
(1592, 211, 159),
(1593, 212, 159),
(1594, 213, 159),
(1595, 216, 159),
(1596, 218, 159),
(1597, 219, 159),
(1598, 220, 159),
(1599, 221, 159),
(1601, 223, 159),
(1602, 224, 159),
(1603, 225, 159),
(1604, 226, 159),
(1925, 37, 169),
(1931, 50, 169),
(1937, 63, 169),
(1943, 76, 169),
(1949, 89, 169),
(1955, 102, 169),
(1961, 115, 169),
(1967, 128, 169),
(1973, 141, 169),
(1979, 154, 169),
(1985, 167, 169),
(1991, 180, 169),
(1997, 193, 169),
(2003, 206, 169),
(2009, 219, 169),
(2014, 16, 170),
(2015, 17, 170),
(2016, 18, 170),
(2017, 19, 170),
(2018, 20, 170),
(2019, 21, 170),
(2020, 22, 170),
(2021, 229, 170),
(2022, 231, 170),
(2023, 295, 170),
(2024, 296, 170),
(2025, 34, 170),
(2026, 38, 170),
(2027, 41, 170),
(2028, 42, 170),
(2029, 43, 170),
(2030, 47, 170),
(2031, 51, 170),
(2032, 54, 170),
(2033, 55, 170),
(2034, 56, 170),
(2035, 60, 170),
(2036, 64, 170),
(2037, 67, 170),
(2038, 68, 170),
(2039, 69, 170),
(2040, 73, 170),
(2041, 77, 170),
(2042, 80, 170),
(2043, 81, 170),
(2044, 82, 170),
(2045, 86, 170),
(2046, 90, 170),
(2047, 93, 170),
(2048, 94, 170),
(2049, 95, 170),
(2050, 99, 170),
(2051, 103, 170),
(2052, 106, 170),
(2053, 107, 170),
(2054, 108, 170),
(2055, 112, 170),
(2056, 116, 170),
(2057, 119, 170),
(2058, 120, 170),
(2059, 121, 170),
(2060, 125, 170),
(2061, 129, 170),
(2062, 132, 170),
(2063, 133, 170),
(2064, 134, 170),
(2065, 138, 170),
(2066, 142, 170),
(2067, 145, 170),
(2068, 146, 170),
(2069, 147, 170),
(2070, 151, 170),
(2071, 155, 170),
(2072, 158, 170),
(2073, 159, 170),
(2074, 160, 170),
(2075, 164, 170),
(2076, 168, 170),
(2077, 171, 170),
(2078, 172, 170),
(2079, 173, 170),
(2080, 177, 170),
(2081, 181, 170),
(2082, 184, 170),
(2083, 185, 170),
(2084, 186, 170),
(2085, 190, 170),
(2086, 194, 170),
(2087, 197, 170),
(2088, 198, 170),
(2089, 199, 170),
(2090, 203, 170),
(2091, 207, 170),
(2092, 210, 170),
(2093, 211, 170),
(2094, 212, 170),
(2095, 216, 170),
(2096, 220, 170),
(2097, 223, 170),
(2098, 224, 170),
(2099, 225, 170),
(2124, 34, 175),
(2125, 35, 175),
(2126, 36, 175),
(2127, 37, 175),
(2128, 38, 175),
(2129, 39, 175),
(2130, 40, 175),
(2131, 41, 175),
(2132, 42, 175),
(2133, 43, 175),
(2135, 45, 175),
(2136, 46, 175),
(2137, 47, 175),
(2138, 48, 175),
(2139, 49, 175),
(2140, 50, 175),
(2141, 51, 175),
(2142, 52, 175),
(2143, 53, 175),
(2144, 54, 175),
(2145, 55, 175),
(2146, 56, 175),
(2148, 58, 175),
(2149, 59, 175),
(2150, 60, 175),
(2151, 61, 175),
(2152, 62, 175),
(2153, 63, 175),
(2154, 64, 175),
(2155, 65, 175),
(2156, 66, 175),
(2157, 67, 175),
(2158, 68, 175),
(2159, 69, 175),
(2161, 71, 175),
(2162, 72, 175),
(2163, 73, 175),
(2164, 74, 175),
(2165, 75, 175),
(2166, 76, 175),
(2167, 77, 175),
(2168, 78, 175),
(2169, 79, 175),
(2170, 80, 175),
(2171, 81, 175),
(2172, 82, 175),
(2174, 84, 175),
(2175, 85, 175),
(2176, 86, 175),
(2177, 87, 175),
(2178, 88, 175),
(2179, 89, 175),
(2180, 90, 175),
(2181, 91, 175),
(2182, 92, 175),
(2183, 93, 175),
(2184, 94, 175),
(2185, 95, 175),
(2187, 97, 175),
(2188, 98, 175),
(2189, 99, 175),
(2190, 100, 175),
(2191, 101, 175),
(2192, 102, 175),
(2193, 103, 175),
(2194, 104, 175),
(2195, 105, 175),
(2196, 106, 175),
(2197, 107, 175),
(2198, 108, 175),
(2200, 110, 175),
(2201, 111, 175),
(2202, 112, 175),
(2203, 113, 175),
(2204, 114, 175),
(2205, 115, 175),
(2206, 116, 175),
(2207, 117, 175),
(2208, 118, 175),
(2209, 119, 175),
(2210, 120, 175),
(2211, 121, 175),
(2213, 123, 175),
(2214, 124, 175),
(2215, 125, 175),
(2216, 126, 175),
(2217, 127, 175),
(2218, 128, 175),
(2219, 129, 175),
(2220, 130, 175),
(2221, 131, 175),
(2222, 132, 175),
(2223, 133, 175),
(2224, 134, 175),
(2226, 136, 175),
(2227, 137, 175),
(2228, 138, 175),
(2229, 139, 175),
(2230, 140, 175),
(2231, 141, 175),
(2232, 142, 175),
(2233, 143, 175),
(2234, 144, 175),
(2235, 145, 175),
(2236, 146, 175),
(2237, 147, 175),
(2239, 149, 175),
(2240, 150, 175),
(2241, 151, 175),
(2242, 152, 175),
(2243, 153, 175),
(2244, 154, 175),
(2245, 155, 175),
(2246, 156, 175),
(2247, 157, 175),
(2248, 158, 175),
(2249, 159, 175),
(2250, 160, 175),
(2252, 162, 175),
(2253, 163, 175),
(2254, 164, 175),
(2255, 165, 175),
(2256, 166, 175),
(2257, 167, 175),
(2258, 168, 175),
(2259, 169, 175),
(2260, 170, 175),
(2261, 171, 175),
(2262, 172, 175),
(2263, 173, 175),
(2265, 175, 175),
(2266, 176, 175),
(2267, 177, 175),
(2268, 178, 175),
(2269, 179, 175),
(2270, 180, 175),
(2271, 181, 175),
(2272, 182, 175),
(2273, 183, 175),
(2274, 184, 175),
(2275, 185, 175),
(2276, 186, 175),
(2278, 188, 175),
(2279, 189, 175),
(2280, 190, 175),
(2281, 191, 175),
(2282, 192, 175),
(2283, 193, 175),
(2284, 194, 175),
(2285, 195, 175),
(2286, 196, 175),
(2287, 197, 175),
(2288, 198, 175),
(2289, 199, 175),
(2291, 201, 175),
(2292, 202, 175),
(2293, 203, 175),
(2294, 204, 175),
(2295, 205, 175),
(2296, 206, 175),
(2297, 207, 175),
(2298, 208, 175),
(2299, 209, 175),
(2300, 210, 175),
(2301, 211, 175),
(2302, 212, 175),
(2304, 214, 175),
(2305, 215, 175),
(2306, 216, 175),
(2307, 217, 175),
(2308, 218, 175),
(2309, 219, 175),
(2310, 220, 175),
(2311, 221, 175),
(2312, 222, 175),
(2313, 223, 175),
(2314, 224, 175),
(2315, 225, 175),
(2317, 227, 175),
(2318, 228, 175),
(2319, 229, 175),
(2320, 230, 175),
(2322, 295, 175);

-- --------------------------------------------------------

--
-- Table structure for table `receive_dg`
--

CREATE TABLE IF NOT EXISTS `receive_dg` (
  `receiveDGID` int(11) NOT NULL AUTO_INCREMENT,
  `distributionGroup` int(11) NOT NULL,
  `position` int(11) NOT NULL,
  PRIMARY KEY (`receiveDGID`),
  UNIQUE KEY `distributionGroup` (`distributionGroup`,`position`),
  KEY `position` (`position`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=623 ;

--
-- Dumping data for table `receive_dg`
--

INSERT INTO `receive_dg` (`receiveDGID`, `distributionGroup`, `position`) VALUES
(1, 1, 1),
(2, 1, 2),
(3, 1, 3),
(4, 1, 4),
(5, 1, 5),
(6, 1, 6),
(7, 1, 7),
(8, 1, 8),
(9, 1, 9),
(10, 1, 10),
(11, 1, 11),
(12, 1, 12),
(13, 1, 13),
(14, 1, 14),
(15, 1, 15),
(16, 1, 16),
(17, 1, 17),
(18, 1, 18),
(19, 1, 19),
(20, 1, 20),
(21, 1, 21),
(22, 1, 22),
(23, 1, 23),
(24, 1, 24),
(25, 1, 25),
(26, 1, 26),
(27, 1, 27),
(28, 1, 28),
(29, 1, 29),
(30, 1, 30),
(31, 1, 31),
(32, 1, 32),
(33, 1, 33),
(34, 2, 34),
(35, 2, 47),
(36, 2, 60),
(37, 2, 73),
(38, 2, 86),
(39, 2, 99),
(40, 2, 112),
(41, 2, 125),
(42, 2, 138),
(43, 2, 151),
(44, 2, 164),
(45, 2, 177),
(46, 2, 190),
(47, 2, 203),
(48, 2, 216),
(49, 3, 37),
(50, 3, 50),
(51, 3, 63),
(52, 3, 76),
(53, 3, 89),
(54, 3, 102),
(55, 3, 115),
(56, 3, 128),
(57, 3, 141),
(58, 3, 154),
(59, 3, 167),
(60, 3, 180),
(61, 3, 193),
(62, 3, 206),
(63, 3, 219),
(64, 4, 38),
(65, 4, 51),
(66, 4, 64),
(67, 4, 77),
(68, 4, 90),
(69, 4, 103),
(70, 4, 116),
(71, 4, 129),
(72, 4, 142),
(73, 4, 155),
(74, 4, 168),
(75, 4, 181),
(76, 4, 194),
(77, 4, 207),
(78, 4, 220),
(79, 5, 41),
(80, 5, 54),
(81, 5, 67),
(82, 5, 80),
(83, 5, 93),
(84, 5, 106),
(85, 5, 119),
(86, 5, 132),
(87, 5, 145),
(88, 5, 158),
(89, 5, 171),
(90, 5, 184),
(91, 5, 197),
(92, 5, 210),
(93, 5, 223),
(94, 6, 42),
(95, 6, 55),
(96, 6, 68),
(97, 6, 81),
(98, 6, 94),
(99, 6, 107),
(100, 6, 120),
(101, 6, 133),
(102, 6, 146),
(103, 6, 159),
(104, 6, 172),
(105, 6, 185),
(106, 6, 198),
(107, 6, 211),
(108, 6, 224),
(109, 7, 43),
(110, 7, 56),
(111, 7, 69),
(112, 7, 82),
(113, 7, 95),
(114, 7, 108),
(115, 7, 121),
(116, 7, 134),
(117, 7, 147),
(118, 7, 160),
(119, 7, 173),
(120, 7, 186),
(121, 7, 199),
(122, 7, 212),
(123, 7, 225),
(124, 8, 36),
(125, 8, 49),
(126, 8, 62),
(127, 8, 75),
(128, 8, 88),
(129, 8, 101),
(130, 8, 114),
(131, 8, 127),
(132, 8, 140),
(133, 8, 153),
(134, 8, 166),
(135, 8, 179),
(136, 8, 192),
(137, 8, 205),
(138, 8, 218),
(139, 8, 230),
(140, 9, 229),
(141, 9, 230),
(142, 9, 231),
(143, 9, 232),
(144, 9, 295),
(145, 9, 296),
(146, 10, 34),
(147, 10, 35),
(148, 10, 36),
(149, 10, 37),
(150, 10, 38),
(151, 10, 39),
(152, 10, 40),
(153, 10, 41),
(154, 10, 42),
(155, 10, 43),
(156, 10, 44),
(157, 10, 45),
(158, 10, 46),
(159, 10, 47),
(160, 10, 48),
(161, 10, 49),
(162, 10, 50),
(163, 10, 51),
(164, 10, 52),
(165, 10, 53),
(166, 10, 54),
(167, 10, 55),
(168, 10, 56),
(169, 10, 57),
(170, 10, 58),
(171, 10, 59),
(172, 10, 60),
(173, 10, 61),
(174, 10, 62),
(175, 10, 63),
(176, 10, 64),
(177, 10, 65),
(178, 10, 66),
(179, 10, 67),
(180, 10, 68),
(181, 10, 69),
(182, 10, 70),
(183, 10, 71),
(184, 10, 72),
(185, 10, 73),
(186, 10, 74),
(187, 10, 75),
(188, 10, 76),
(189, 10, 77),
(190, 10, 78),
(191, 10, 79),
(192, 10, 80),
(193, 10, 81),
(194, 10, 82),
(195, 10, 83),
(196, 10, 84),
(197, 10, 85),
(198, 10, 86),
(199, 10, 87),
(200, 10, 88),
(201, 10, 89),
(202, 10, 90),
(203, 10, 91),
(204, 10, 92),
(205, 10, 93),
(206, 10, 94),
(207, 10, 95),
(208, 10, 96),
(209, 10, 97),
(210, 10, 98),
(211, 10, 99),
(212, 10, 100),
(213, 10, 101),
(214, 10, 102),
(215, 10, 103),
(216, 10, 104),
(217, 10, 105),
(218, 10, 106),
(219, 10, 107),
(220, 10, 108),
(221, 10, 109),
(222, 10, 110),
(223, 10, 111),
(224, 10, 112),
(225, 10, 113),
(226, 10, 114),
(227, 10, 115),
(228, 10, 116),
(229, 10, 117),
(230, 10, 118),
(231, 10, 119),
(232, 10, 120),
(233, 10, 121),
(234, 10, 122),
(235, 10, 123),
(236, 10, 124),
(237, 10, 125),
(238, 10, 126),
(239, 10, 127),
(240, 10, 128),
(241, 10, 129),
(242, 10, 130),
(243, 10, 131),
(244, 10, 132),
(245, 10, 133),
(246, 10, 134),
(247, 10, 135),
(248, 10, 136),
(249, 10, 137),
(250, 10, 138),
(251, 10, 139),
(252, 10, 140),
(253, 10, 141),
(254, 10, 142),
(255, 10, 143),
(256, 10, 144),
(257, 10, 145),
(258, 10, 146),
(259, 10, 147),
(260, 10, 148),
(261, 10, 149),
(262, 10, 150),
(263, 10, 151),
(264, 10, 152),
(265, 10, 153),
(266, 10, 154),
(267, 10, 155),
(268, 10, 156),
(269, 10, 157),
(270, 10, 158),
(271, 10, 159),
(272, 10, 160),
(273, 10, 161),
(274, 10, 162),
(275, 10, 163),
(276, 10, 164),
(277, 10, 165),
(278, 10, 166),
(279, 10, 167),
(280, 10, 168),
(281, 10, 169),
(282, 10, 170),
(283, 10, 171),
(284, 10, 172),
(285, 10, 173),
(286, 10, 174),
(287, 10, 175),
(288, 10, 176),
(289, 10, 177),
(290, 10, 178),
(291, 10, 179),
(292, 10, 180),
(293, 10, 181),
(294, 10, 182),
(295, 10, 183),
(296, 10, 184),
(297, 10, 185),
(298, 10, 186),
(299, 10, 187),
(300, 10, 188),
(301, 10, 189),
(302, 10, 190),
(303, 10, 191),
(304, 10, 192),
(305, 10, 193),
(306, 10, 194),
(307, 10, 195),
(308, 10, 196),
(309, 10, 197),
(310, 10, 198),
(311, 10, 199),
(312, 10, 200),
(313, 10, 201),
(314, 10, 202),
(315, 10, 203),
(316, 10, 204),
(317, 10, 205),
(318, 10, 206),
(319, 10, 207),
(320, 10, 208),
(321, 10, 209),
(322, 10, 210),
(323, 10, 211),
(324, 10, 212),
(325, 10, 213),
(326, 10, 214),
(327, 10, 215),
(328, 10, 216),
(329, 10, 217),
(330, 10, 218),
(331, 10, 219),
(332, 10, 220),
(333, 10, 221),
(334, 10, 222),
(335, 10, 223),
(336, 10, 224),
(337, 10, 225),
(338, 10, 226),
(339, 10, 227),
(340, 10, 228),
(341, 10, 229),
(342, 10, 230),
(343, 10, 231),
(344, 10, 232),
(345, 10, 233),
(346, 10, 234),
(347, 10, 235),
(348, 10, 236),
(349, 10, 237),
(350, 10, 238),
(351, 10, 239),
(352, 10, 240),
(353, 10, 241),
(354, 10, 242),
(355, 10, 243),
(356, 10, 244),
(357, 10, 245),
(358, 10, 246),
(359, 10, 247),
(360, 10, 248),
(361, 10, 249),
(362, 10, 250),
(363, 10, 251),
(364, 10, 252),
(365, 10, 253),
(366, 10, 254),
(367, 10, 255),
(368, 10, 256),
(369, 10, 257),
(370, 10, 258),
(371, 10, 259),
(372, 10, 260),
(373, 10, 261),
(374, 10, 262),
(375, 10, 263),
(376, 10, 264),
(377, 10, 265),
(378, 10, 266),
(379, 10, 267),
(380, 10, 268),
(381, 10, 269),
(382, 10, 270),
(383, 10, 271),
(384, 10, 272),
(385, 10, 273),
(386, 10, 274),
(387, 10, 275),
(388, 10, 276),
(389, 10, 277),
(390, 10, 278),
(391, 10, 279),
(392, 10, 280),
(393, 10, 281),
(394, 10, 282),
(395, 10, 283),
(396, 10, 284),
(397, 10, 285),
(398, 10, 286),
(399, 10, 287),
(400, 10, 288),
(401, 10, 289),
(402, 10, 290),
(403, 10, 291),
(404, 10, 292),
(405, 10, 293),
(406, 10, 294),
(407, 10, 295),
(408, 10, 296),
(409, 11, 34),
(410, 11, 35),
(411, 11, 36),
(412, 11, 37),
(413, 11, 38),
(414, 11, 39),
(415, 11, 40),
(416, 11, 41),
(417, 11, 42),
(418, 11, 43),
(419, 11, 44),
(420, 11, 45),
(421, 11, 46),
(422, 12, 47),
(423, 12, 48),
(424, 12, 49),
(425, 12, 50),
(426, 12, 51),
(427, 12, 52),
(428, 12, 53),
(429, 12, 54),
(430, 12, 55),
(431, 12, 56),
(432, 12, 57),
(433, 12, 58),
(434, 12, 59),
(435, 13, 60),
(436, 13, 61),
(437, 13, 62),
(438, 13, 63),
(439, 13, 64),
(440, 13, 65),
(441, 13, 66),
(442, 13, 67),
(443, 13, 68),
(444, 13, 69),
(445, 13, 70),
(446, 13, 71),
(447, 13, 72),
(448, 14, 203),
(449, 14, 204),
(450, 14, 205),
(451, 14, 206),
(452, 14, 207),
(453, 14, 208),
(454, 14, 209),
(455, 14, 210),
(456, 14, 211),
(457, 14, 212),
(458, 14, 213),
(459, 14, 214),
(460, 14, 215),
(461, 15, 190),
(462, 15, 191),
(463, 15, 192),
(464, 15, 193),
(465, 15, 194),
(466, 15, 195),
(467, 15, 196),
(468, 15, 197),
(469, 15, 198),
(470, 15, 199),
(471, 15, 200),
(472, 15, 201),
(473, 15, 202),
(474, 16, 73),
(475, 16, 74),
(476, 16, 75),
(477, 16, 76),
(478, 16, 77),
(479, 16, 78),
(480, 16, 79),
(481, 16, 80),
(482, 16, 81),
(483, 16, 82),
(484, 16, 83),
(485, 16, 84),
(486, 16, 85),
(487, 17, 86),
(488, 17, 87),
(489, 17, 88),
(490, 17, 89),
(491, 17, 90),
(492, 17, 91),
(493, 17, 92),
(494, 17, 93),
(495, 17, 94),
(496, 17, 95),
(497, 17, 96),
(498, 17, 97),
(499, 17, 98),
(500, 18, 138),
(501, 18, 139),
(502, 18, 140),
(503, 18, 141),
(504, 18, 142),
(505, 18, 143),
(506, 18, 144),
(507, 18, 145),
(508, 18, 146),
(509, 18, 147),
(510, 18, 148),
(511, 18, 149),
(512, 18, 150),
(513, 19, 99),
(514, 19, 100),
(515, 19, 101),
(516, 19, 102),
(517, 19, 103),
(518, 19, 104),
(519, 19, 105),
(520, 19, 106),
(521, 19, 107),
(522, 19, 108),
(523, 19, 109),
(524, 19, 110),
(525, 19, 111),
(526, 20, 112),
(527, 20, 113),
(528, 20, 114),
(529, 20, 115),
(530, 20, 116),
(531, 20, 117),
(532, 20, 118),
(533, 20, 119),
(534, 20, 120),
(535, 20, 121),
(536, 20, 122),
(537, 20, 123),
(538, 20, 124),
(539, 21, 151),
(540, 21, 152),
(541, 21, 153),
(542, 21, 154),
(543, 21, 155),
(544, 21, 156),
(545, 21, 157),
(546, 21, 158),
(547, 21, 159),
(548, 21, 160),
(549, 21, 161),
(550, 21, 162),
(551, 21, 163),
(552, 22, 125),
(553, 22, 126),
(554, 22, 127),
(555, 22, 128),
(556, 22, 129),
(557, 22, 130),
(558, 22, 131),
(559, 22, 132),
(560, 22, 133),
(561, 22, 134),
(562, 22, 135),
(563, 22, 136),
(564, 22, 137),
(565, 23, 177),
(566, 23, 178),
(567, 23, 179),
(568, 23, 180),
(569, 23, 181),
(570, 23, 182),
(571, 23, 183),
(572, 23, 184),
(573, 23, 185),
(574, 23, 186),
(575, 23, 187),
(576, 23, 188),
(577, 23, 189),
(578, 24, 164),
(579, 24, 165),
(580, 24, 166),
(581, 24, 167),
(582, 24, 168),
(583, 24, 169),
(584, 24, 170),
(585, 24, 171),
(586, 24, 172),
(587, 24, 173),
(588, 24, 174),
(589, 24, 175),
(590, 24, 176),
(591, 25, 233),
(592, 25, 234),
(593, 25, 235),
(594, 25, 236),
(595, 25, 237),
(596, 25, 238),
(597, 25, 239),
(598, 25, 240),
(599, 25, 241),
(600, 25, 242),
(601, 25, 243),
(602, 25, 244),
(603, 25, 245),
(604, 25, 246),
(605, 25, 247),
(606, 25, 248),
(607, 25, 249),
(608, 25, 250),
(609, 25, 251),
(610, 36, 239),
(611, 36, 240),
(612, 36, 241),
(613, 36, 242),
(614, 36, 243),
(615, 37, 244),
(616, 37, 245),
(617, 37, 246),
(618, 37, 247),
(619, 37, 248),
(620, 37, 249),
(621, 38, 247),
(622, 38, 249);

-- --------------------------------------------------------

--
-- Table structure for table `schools_departments`
--

CREATE TABLE IF NOT EXISTS `schools_departments` (
  `schoolDepartmentID` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) NOT NULL,
  `abbreviation` varchar(3) DEFAULT NULL,
  `division` int(11) NOT NULL,
  `emailDomain` varchar(64) NOT NULL,
  `phoneNumber` varchar(15) DEFAULT NULL,
  PRIMARY KEY (`schoolDepartmentID`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `abbreviation` (`abbreviation`),
  KEY `division` (`division`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=45 ;

--
-- Dumping data for table `schools_departments`
--

INSERT INTO `schools_departments` (`schoolDepartmentID`, `name`, `abbreviation`, `division`, `emailDomain`, `phoneNumber`) VALUES
(1, 'Administration', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(2, 'Coaching and Learning', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(3, 'Human Resources', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(4, 'Information Technology', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(5, 'Finance', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(6, 'Marketing', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(7, 'New Business Development', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(8, 'Procurement', NULL, 1, 'americanedgroup.com', '616-301-1221'),
(9, 'Fusion Huntington Beach', 'HB', 2, 'fusionacademy.com', '657-200-2300'),
(10, 'Fusion Los Angeles', 'LA', 2, 'fusionacademy.com', '310-445-2516'),
(11, 'Fusion Los Gatos', 'LG', 2, 'fusionacademy.com', '408-354-0802'),
(12, 'Fusion Mission Viejo', 'MV', 2, 'fusionacademy.com', '949-716-7384'),
(13, 'Fusion Pasadena', 'PA', 2, 'fusionacademy.com', '323-258-2012'),
(14, 'Fusion San Diego', 'SD', 2, 'fusionacademy.com', '866-670-9296'),
(15, 'Fusion San Francisco', 'SF', 2, 'fusionacademy.com', '415-765-9078'),
(16, 'Fusion San Mateo', 'SM', 2, 'fusionacademy.com', '650-312-8305'),
(17, 'Fusion South Bay', 'SB', 2, 'fusionacademy.com', '310-376-5139'),
(18, 'Fusion Solana Beach', 'SLB', 2, 'fusionacademy.com', '858-792-2300'),
(19, 'Fusion Walnut Creek', 'WCR', 2, 'fusionacademy.com', '925-296-0053'),
(20, 'Fusion Warner Center', 'WC', 2, 'fusionacademy.com', '818-712-9521'),
(21, 'Fusion Manhattan', 'MN', 2, 'fusionacademy.com', '646-290-5203'),
(22, 'Fusion Long Island', 'LI', 2, 'fusionacademy.com', '631-390-8366'),
(23, 'Fusion Westchester', 'WE', 2, 'fusionacademy.com', '866-622-7853'),
(24, 'Fusion Regional', 'REG', 2, 'fusionacademy.com', '626-616-2060'),
(25, 'Barnstable Academy', NULL, 3, 'barnstableacademy.com', '201-651-0200'),
(26, 'Shreiner Academy', NULL, 3, 'shreineracademy.com', '770-953-1340'),
(27, 'Tampa Day School', NULL, 3, 'tampadayschool.com', '813-269-2100'),
(28, 'Amesbury', NULL, 4, 'littlesprouts.com', '978-388-1299'),
(29, 'Andover', NULL, 4, 'littlesprouts.com', '978-691-1178'),
(30, 'Andover Industrial', NULL, 4, 'littlesprouts.com', '978-688-4270'),
(31, 'Brighton', NULL, 4, 'littlesprouts.com', '617-254-1283'),
(32, 'Dedham', NULL, 4, 'littlesprouts.com', '781-329-8603'),
(33, 'Haverhill', NULL, 4, 'littlesprouts.com', '978-269-0044'),
(34, 'Haverhill NECC', NULL, 4, 'littlesprouts.com', '978-374-7260'),
(35, 'Lawrence', NULL, 4, 'littlesprouts.com', '978-291-0342'),
(36, 'Lowell', NULL, 4, 'littlesprouts.com', '978-453-6614'),
(37, 'Methuen', NULL, 4, 'littlesprouts.com', '978-683-1567'),
(38, 'North Andover', NULL, 4, 'littlesprouts.com', '978-208-4796'),
(39, 'Roxbury RCC', NULL, 4, 'littlesprouts.com', '617-933-7492'),
(40, 'Wilmington', NULL, 4, 'littlesprouts.com', '978-658-2680'),
(41, 'Woburn', NULL, 4, 'littlesprouts.com', '782-569-1410'),
(42, 'Boston', NULL, 4, 'littlesprouts.com', '877-977-7688'),
(43, 'Nashua', NULL, 4, 'littlesprouts.com', '877-977-7688'),
(44, 'Little Sprouts Corporate', NULL, 4, 'littlesprouts.com', '978-291-0256');

-- --------------------------------------------------------

--
-- Table structure for table `send_to_dg`
--

CREATE TABLE IF NOT EXISTS `send_to_dg` (
  `sendToDGID` int(11) NOT NULL AUTO_INCREMENT,
  `distributionGroup` int(11) NOT NULL,
  `position` int(11) NOT NULL,
  PRIMARY KEY (`sendToDGID`),
  UNIQUE KEY `distributionGroup` (`distributionGroup`,`position`),
  KEY `position` (`position`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=377 ;

--
-- Dumping data for table `send_to_dg`
--

INSERT INTO `send_to_dg` (`sendToDGID`, `distributionGroup`, `position`) VALUES
(1, 1, 1),
(2, 1, 2),
(3, 1, 3),
(4, 1, 4),
(5, 1, 5),
(6, 1, 6),
(7, 1, 7),
(8, 1, 8),
(9, 1, 9),
(10, 1, 10),
(11, 1, 11),
(12, 1, 12),
(13, 1, 13),
(14, 1, 14),
(15, 1, 15),
(16, 1, 16),
(17, 1, 17),
(18, 1, 18),
(19, 1, 19),
(20, 1, 20),
(21, 1, 21),
(22, 1, 22),
(23, 1, 23),
(24, 1, 24),
(25, 1, 25),
(26, 1, 26),
(27, 1, 27),
(28, 1, 28),
(29, 1, 29),
(30, 1, 30),
(31, 1, 31),
(32, 1, 32),
(33, 1, 33),
(34, 2, 34),
(35, 2, 47),
(36, 2, 60),
(37, 2, 73),
(38, 2, 86),
(39, 2, 99),
(40, 2, 112),
(41, 2, 125),
(42, 2, 138),
(43, 2, 151),
(44, 2, 164),
(45, 2, 177),
(46, 2, 190),
(47, 2, 203),
(48, 2, 216),
(49, 2, 296),
(50, 3, 37),
(51, 3, 50),
(52, 3, 63),
(53, 3, 76),
(54, 3, 89),
(55, 3, 102),
(56, 3, 115),
(57, 3, 128),
(58, 3, 141),
(59, 3, 154),
(60, 3, 167),
(61, 3, 180),
(62, 3, 193),
(63, 3, 206),
(64, 3, 219),
(65, 3, 296),
(66, 4, 38),
(67, 4, 51),
(68, 4, 64),
(69, 4, 77),
(70, 4, 90),
(71, 4, 103),
(72, 4, 116),
(73, 4, 129),
(74, 4, 142),
(75, 4, 155),
(76, 4, 168),
(77, 4, 181),
(78, 4, 194),
(79, 4, 207),
(80, 4, 220),
(81, 4, 296),
(82, 5, 231),
(83, 5, 296),
(84, 5, 41),
(85, 5, 54),
(86, 5, 67),
(87, 5, 80),
(88, 5, 93),
(89, 5, 106),
(90, 5, 119),
(91, 5, 132),
(92, 5, 145),
(93, 5, 158),
(94, 5, 171),
(95, 5, 184),
(96, 5, 197),
(97, 5, 210),
(98, 5, 223),
(99, 5, 40),
(100, 5, 53),
(101, 5, 66),
(102, 5, 79),
(103, 5, 92),
(104, 5, 105),
(105, 5, 118),
(106, 5, 131),
(107, 5, 144),
(108, 5, 157),
(109, 5, 170),
(110, 5, 183),
(111, 5, 196),
(112, 5, 209),
(113, 5, 222),
(114, 6, 42),
(115, 6, 55),
(116, 6, 68),
(117, 6, 81),
(118, 6, 94),
(119, 6, 107),
(120, 6, 120),
(121, 6, 133),
(122, 6, 146),
(123, 6, 159),
(124, 6, 172),
(125, 6, 185),
(126, 6, 198),
(127, 6, 211),
(128, 6, 224),
(129, 6, 296),
(130, 7, 43),
(131, 7, 56),
(132, 7, 69),
(133, 7, 82),
(134, 7, 95),
(135, 7, 108),
(136, 7, 121),
(137, 7, 134),
(138, 7, 147),
(139, 7, 160),
(140, 7, 173),
(141, 7, 186),
(142, 7, 199),
(143, 7, 212),
(144, 7, 225),
(145, 7, 296),
(146, 8, 231),
(147, 8, 296),
(148, 8, 40),
(149, 8, 53),
(150, 8, 66),
(151, 8, 79),
(152, 8, 92),
(153, 8, 105),
(154, 8, 118),
(155, 8, 131),
(156, 8, 144),
(157, 8, 157),
(158, 8, 170),
(159, 8, 183),
(160, 8, 196),
(161, 8, 209),
(162, 8, 222),
(163, 8, 36),
(164, 8, 49),
(165, 8, 62),
(166, 8, 75),
(167, 8, 88),
(168, 8, 101),
(169, 8, 114),
(170, 8, 127),
(171, 8, 140),
(172, 8, 153),
(173, 8, 166),
(174, 8, 179),
(175, 8, 192),
(176, 8, 205),
(177, 8, 218),
(178, 8, 230),
(179, 9, 231),
(180, 9, 296),
(181, 9, 40),
(182, 9, 53),
(183, 9, 66),
(184, 9, 79),
(185, 9, 92),
(186, 9, 105),
(187, 9, 118),
(188, 9, 131),
(189, 9, 144),
(190, 9, 157),
(191, 9, 170),
(192, 9, 183),
(193, 9, 196),
(194, 9, 209),
(195, 9, 222),
(196, 10, 1),
(197, 10, 2),
(198, 10, 3),
(199, 10, 4),
(200, 10, 5),
(201, 10, 6),
(202, 10, 7),
(203, 10, 8),
(204, 10, 9),
(205, 10, 11),
(206, 10, 12),
(207, 10, 14),
(208, 10, 16),
(209, 10, 17),
(210, 10, 23),
(211, 10, 24),
(212, 10, 32),
(213, 10, 33),
(214, 10, 296),
(215, 11, 34),
(216, 11, 35),
(217, 11, 37),
(218, 11, 38),
(219, 11, 39),
(220, 11, 40),
(221, 11, 41),
(222, 11, 42),
(223, 11, 43),
(224, 11, 44),
(225, 11, 45),
(226, 11, 46),
(227, 11, 229),
(228, 11, 230),
(229, 11, 231),
(230, 11, 232),
(231, 11, 295),
(232, 11, 296),
(233, 12, 47),
(234, 12, 48),
(235, 12, 50),
(236, 12, 51),
(237, 12, 52),
(238, 12, 53),
(239, 12, 54),
(240, 12, 55),
(241, 12, 56),
(242, 12, 57),
(243, 12, 58),
(244, 12, 59),
(245, 12, 229),
(246, 12, 230),
(247, 12, 231),
(248, 12, 232),
(249, 12, 295),
(250, 12, 296),
(251, 13, 60),
(252, 13, 61),
(253, 13, 63),
(254, 13, 64),
(255, 13, 65),
(256, 13, 66),
(257, 13, 67),
(258, 13, 68),
(259, 13, 69),
(260, 13, 70),
(261, 13, 71),
(262, 13, 72),
(263, 13, 229),
(264, 13, 230),
(265, 13, 231),
(266, 13, 232),
(267, 13, 295),
(268, 13, 296),
(269, 14, 203),
(270, 14, 204),
(271, 14, 206),
(272, 14, 207),
(273, 14, 208),
(274, 14, 209),
(275, 14, 210),
(276, 14, 211),
(277, 14, 212),
(278, 14, 213),
(279, 14, 214),
(280, 14, 215),
(281, 14, 229),
(282, 14, 230),
(283, 14, 231),
(284, 14, 232),
(285, 14, 295),
(286, 14, 296),
(287, 15, 190),
(288, 15, 191),
(289, 15, 193),
(290, 15, 194),
(291, 15, 195),
(292, 15, 196),
(293, 15, 197),
(294, 15, 198),
(295, 15, 199),
(296, 15, 200),
(297, 15, 201),
(298, 15, 202),
(299, 15, 229),
(300, 15, 230),
(301, 15, 231),
(302, 15, 232),
(303, 15, 295),
(304, 15, 296),
(305, 16, 73),
(306, 16, 74),
(307, 16, 76),
(308, 16, 77),
(309, 16, 78),
(310, 16, 79),
(311, 16, 80),
(312, 16, 81),
(313, 16, 82),
(314, 16, 83),
(315, 16, 84),
(316, 16, 85),
(317, 21, 229),
(318, 21, 230),
(319, 21, 231),
(320, 21, 232),
(321, 21, 295),
(322, 21, 296),
(323, 22, 125),
(324, 22, 126),
(325, 22, 128),
(326, 22, 129),
(327, 22, 130),
(328, 22, 131),
(329, 22, 132),
(330, 22, 133),
(331, 22, 134),
(332, 22, 135),
(333, 22, 136),
(334, 22, 137),
(335, 22, 229),
(336, 22, 230),
(337, 22, 231),
(338, 22, 232),
(339, 22, 295),
(340, 22, 296),
(341, 23, 177),
(342, 23, 178),
(343, 23, 180),
(344, 23, 181),
(345, 23, 182),
(346, 23, 183),
(347, 23, 184),
(348, 23, 185),
(349, 23, 186),
(350, 23, 187),
(351, 23, 188),
(352, 23, 189),
(353, 23, 229),
(354, 23, 230),
(355, 23, 231),
(356, 23, 232),
(357, 23, 295),
(358, 23, 296),
(359, 24, 164),
(360, 24, 165),
(361, 24, 167),
(362, 24, 168),
(363, 24, 169),
(364, 24, 170),
(365, 24, 171),
(366, 24, 172),
(367, 24, 173),
(368, 24, 174),
(369, 24, 175),
(370, 24, 176),
(371, 24, 229),
(372, 24, 230),
(373, 24, 231),
(374, 24, 232),
(375, 24, 295),
(376, 24, 296);

-- --------------------------------------------------------

--
-- Table structure for table `source_directories`
--

CREATE TABLE IF NOT EXISTS `source_directories` (
  `sourceDirectoryID` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(128) NOT NULL,
  `parent` int(11) NOT NULL,
  PRIMARY KEY (`sourceDirectoryID`),
  UNIQUE KEY `name` (`name`,`parent`),
  KEY `parent` (`parent`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=204 ;

--
-- Dumping data for table `source_directories`
--

INSERT INTO `source_directories` (`sourceDirectoryID`, `name`, `parent`) VALUES
(1, 'American Education Group', 1),
(2, 'AEG', 1),
(3, 'Schools', 1),
(4, 'Team Sites', 1),
(5, 'Administration', 2),
(6, 'Information Technology', 2),
(7, 'Marketing', 2),
(8, 'Human Resources', 2),
(9, 'Finance', 2),
(10, 'Coaching and Learning', 2),
(11, 'New Business Development', 2),
(12, 'Procurement', 2),
(13, 'Fusion Division', 3),
(14, 'Lexis', 3),
(15, 'Little Sprouts', 3),
(16, 'AEG R.O.C.K.S!', 4),
(17, 'NSO', 4),
(18, 'MPOPs', 4),
(19, 'EPIC! Portal', 4),
(20, '1:1 Digital Curriculum', 4),
(21, 'Private', 5),
(22, 'Public', 5),
(23, 'Private', 6),
(24, 'Public', 6),
(25, 'IT Planning', 6),
(26, 'Corporate Email Migration', 6),
(27, 'Test Marketing', 7),
(28, 'Private', 7),
(29, 'Public', 7),
(30, 'Task List', 7),
(31, 'Project Tasks', 7),
(32, 'Private', 8),
(33, 'Public', 8),
(34, 'New Hire Paperwork', 8),
(35, 'Benefits', 8),
(36, 'Observation', 8),
(37, 'Fusionology', 8),
(38, 'HR Resources', 8),
(39, 'Private', 9),
(40, 'Public', 9),
(41, 'Administrator', 9),
(42, 'Private', 11),
(43, 'Public', 11),
(44, 'Private', 12),
(45, 'Public', 12),
(46, 'Master Task List', 12),
(47, 'Master Calendar', 12),
(48, 'Huntington Beach', 13),
(49, 'Long Island', 13),
(50, 'Los Angeles', 13),
(51, 'Los Gatos', 13),
(52, 'Manhattan', 13),
(53, 'Mission Viejo', 13),
(54, 'Pasadena', 13),
(55, 'Regional', 13),
(56, 'San Francisco', 13),
(57, 'San Mateo', 13),
(58, 'Solana Beach', 13),
(59, 'South Bay', 13),
(60, 'Walnut Creek', 13),
(61, 'Warner Center', 13),
(62, 'Fusionology', 13),
(63, 'Discussion Board', 13),
(64, 'Outreach', 13),
(65, 'Accounting', 13),
(66, 'Leadership', 13),
(67, 'Registrar', 13),
(68, 'Curriculum', 13),
(69, 'Training', 13),
(70, 'Barnstable', 14),
(71, 'Shreiner', 14),
(72, 'Tampa Day', 14),
(73, 'Talking Heads', 14),
(74, 'Curriculum', 14),
(75, 'Scholarship', 14),
(76, 'Private', 15),
(77, 'Public', 15),
(78, 'SMK', 15),
(79, 'Financials', 15),
(80, 'Data Centralization', 15),
(81, 'Corporate', 16),
(82, 'Fusion', 16),
(83, 'Little Sprouts', 16),
(84, 'Private', 17),
(85, 'Public', 17),
(86, 'New Business Development', 17),
(87, 'Construction Folder', 17),
(88, 'Real Estate Folder', 17),
(89, 'Project Tasks', 17),
(90, 'Project Calendar', 17),
(91, 'Private', 18),
(92, 'Public', 18),
(93, 'Little Sprouts', 18),
(94, 'Fusion Division', 18),
(95, 'Tampa Day School', 18),
(96, 'Barnstable Academy', 18),
(97, 'Shreiner Academy', 18),
(98, 'Private', 19),
(99, 'Public', 19),
(102, 'ROCK N CulturRoll Awareness', 19),
(103, 'Staff', 48),
(104, 'Public', 48),
(105, 'Administrators', 48),
(106, 'Head of School', 48),
(107, 'Staff', 50),
(108, 'Public', 50),
(109, 'Administrators', 50),
(110, 'Head of School', 50),
(111, 'Staff', 51),
(112, 'Public', 51),
(113, 'Administrators', 51),
(114, 'Head of School', 51),
(115, 'Staff', 53),
(116, 'Public', 53),
(117, 'Administrators', 53),
(118, 'Head of School', 53),
(119, 'Staff', 54),
(120, 'Public', 54),
(121, 'Administrators', 54),
(122, 'Head of School', 54),
(123, 'Staff', 203),
(124, 'Public', 203),
(125, 'Administrators', 203),
(126, 'Head of School', 203),
(127, 'Staff', 56),
(128, 'Public', 56),
(129, 'Administrators', 56),
(130, 'Head of School', 56),
(131, 'Staff', 57),
(132, 'Public', 57),
(133, 'Administrators', 57),
(134, 'Head of School', 57),
(135, 'Staff', 59),
(136, 'Public', 59),
(137, 'Administrators', 59),
(138, 'Head of School', 59),
(139, 'Staff', 58),
(140, 'Public', 58),
(141, 'Administrators', 58),
(142, 'Head of School', 58),
(143, 'Staff', 60),
(144, 'Public', 60),
(145, 'Administrators', 60),
(146, 'Head of School', 60),
(147, 'Staff', 61),
(148, 'Public', 61),
(149, 'Administrators', 61),
(150, 'Head of School', 61),
(151, 'Staff', 52),
(152, 'Public', 52),
(153, 'Administrators', 52),
(154, 'Head of School', 52),
(155, 'Staff', 49),
(156, 'Public', 49),
(157, 'Administrators', 49),
(158, 'Head of School', 49),
(159, 'Fusionology Content', 62),
(160, 'Private', 62),
(161, 'Public', 62),
(162, 'Collaboration', 62),
(163, 'Marketing', 63),
(164, 'Private', 64),
(165, 'Public', 64),
(166, 'Outreach Discussions', 64),
(167, 'Private', 65),
(168, 'Public', 65),
(169, 'Billing', 65),
(170, 'Budget', 65),
(171, 'Private', 66),
(172, 'Public', 66),
(173, 'Private', 67),
(174, 'Public', 67),
(175, 'Site Pages', 67),
(176, 'Transcript Requests', 67),
(177, 'POC', 67),
(178, 'Private', 68),
(179, 'Public', 68),
(180, 'EPICenter!', 68),
(181, 'Private', 69),
(182, 'Public', 69),
(183, 'Private', 70),
(184, 'Public', 70),
(185, 'Administrators', 70),
(186, 'School', 70),
(187, 'Sick or Coverage', 70),
(188, 'Private', 71),
(189, 'Public', 71),
(190, 'Administrators', 71),
(191, 'School', 71),
(192, 'Sick or Coverage', 71),
(193, 'Private', 72),
(194, 'Public', 72),
(195, 'Administrators', 72),
(196, 'School', 72),
(197, 'Sick or Coverage', 72),
(198, 'Leadership', 73),
(199, 'EPIC! Customer Service', 73),
(200, 'Private', 74),
(201, 'Public', 74),
(202, 'Private', 75),
(203, 'San Diego', 13);
--
-- Database: `information_schema`
--
CREATE DATABASE `information_schema` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
USE `information_schema`;

-- --------------------------------------------------------

--
-- Table structure for table `CHARACTER_SETS`
--

CREATE TEMPORARY TABLE `CHARACTER_SETS` (
  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',
  `DEFAULT_COLLATE_NAME` varchar(32) NOT NULL DEFAULT '',
  `DESCRIPTION` varchar(60) NOT NULL DEFAULT '',
  `MAXLEN` bigint(3) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `CHARACTER_SETS`
--

INSERT INTO `CHARACTER_SETS` (`CHARACTER_SET_NAME`, `DEFAULT_COLLATE_NAME`, `DESCRIPTION`, `MAXLEN`) VALUES
('big5', 'big5_chinese_ci', 'Big5 Traditional Chinese', 2),
('dec8', 'dec8_swedish_ci', 'DEC West European', 1),
('cp850', 'cp850_general_ci', 'DOS West European', 1),
('hp8', 'hp8_english_ci', 'HP West European', 1),
('koi8r', 'koi8r_general_ci', 'KOI8-R Relcom Russian', 1),
('latin1', 'latin1_swedish_ci', 'cp1252 West European', 1),
('latin2', 'latin2_general_ci', 'ISO 8859-2 Central European', 1),
('swe7', 'swe7_swedish_ci', '7bit Swedish', 1),
('ascii', 'ascii_general_ci', 'US ASCII', 1),
('ujis', 'ujis_japanese_ci', 'EUC-JP Japanese', 3),
('sjis', 'sjis_japanese_ci', 'Shift-JIS Japanese', 2),
('hebrew', 'hebrew_general_ci', 'ISO 8859-8 Hebrew', 1),
('tis620', 'tis620_thai_ci', 'TIS620 Thai', 1),
('euckr', 'euckr_korean_ci', 'EUC-KR Korean', 2),
('koi8u', 'koi8u_general_ci', 'KOI8-U Ukrainian', 1),
('gb2312', 'gb2312_chinese_ci', 'GB2312 Simplified Chinese', 2),
('greek', 'greek_general_ci', 'ISO 8859-7 Greek', 1),
('cp1250', 'cp1250_general_ci', 'Windows Central European', 1),
('gbk', 'gbk_chinese_ci', 'GBK Simplified Chinese', 2),
('latin5', 'latin5_turkish_ci', 'ISO 8859-9 Turkish', 1),
('armscii8', 'armscii8_general_ci', 'ARMSCII-8 Armenian', 1),
('utf8', 'utf8_general_ci', 'UTF-8 Unicode', 3),
('ucs2', 'ucs2_general_ci', 'UCS-2 Unicode', 2),
('cp866', 'cp866_general_ci', 'DOS Russian', 1),
('keybcs2', 'keybcs2_general_ci', 'DOS Kamenicky Czech-Slovak', 1),
('macce', 'macce_general_ci', 'Mac Central European', 1),
('macroman', 'macroman_general_ci', 'Mac West European', 1),
('cp852', 'cp852_general_ci', 'DOS Central European', 1),
('latin7', 'latin7_general_ci', 'ISO 8859-13 Baltic', 1),
('cp1251', 'cp1251_general_ci', 'Windows Cyrillic', 1),
('cp1256', 'cp1256_general_ci', 'Windows Arabic', 1),
('cp1257', 'cp1257_general_ci', 'Windows Baltic', 1),
('binary', 'binary', 'Binary pseudo charset', 1),
('geostd8', 'geostd8_general_ci', 'GEOSTD8 Georgian', 1),
('cp932', 'cp932_japanese_ci', 'SJIS for Windows Japanese', 2),
('eucjpms', 'eucjpms_japanese_ci', 'UJIS for Windows Japanese', 3);

-- --------------------------------------------------------

--
-- Table structure for table `CLIENT_STATISTICS`
--

CREATE TEMPORARY TABLE `CLIENT_STATISTICS` (
  `CLIENT` varchar(64) NOT NULL DEFAULT '',
  `TOTAL_CONNECTIONS` bigint(21) NOT NULL DEFAULT '0',
  `CONCURRENT_CONNECTIONS` bigint(21) NOT NULL DEFAULT '0',
  `CONNECTED_TIME` bigint(21) NOT NULL DEFAULT '0',
  `BUSY_TIME` double NOT NULL DEFAULT '0',
  `CPU_TIME` double NOT NULL DEFAULT '0',
  `BYTES_RECEIVED` bigint(21) NOT NULL DEFAULT '0',
  `BYTES_SENT` bigint(21) NOT NULL DEFAULT '0',
  `BINLOG_BYTES_WRITTEN` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_READ` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_SENT` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_DELETED` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_INSERTED` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_UPDATED` bigint(21) NOT NULL DEFAULT '0',
  `SELECT_COMMANDS` bigint(21) NOT NULL DEFAULT '0',
  `UPDATE_COMMANDS` bigint(21) NOT NULL DEFAULT '0',
  `OTHER_COMMANDS` bigint(21) NOT NULL DEFAULT '0',
  `COMMIT_TRANSACTIONS` bigint(21) NOT NULL DEFAULT '0',
  `ROLLBACK_TRANSACTIONS` bigint(21) NOT NULL DEFAULT '0',
  `DENIED_CONNECTIONS` bigint(21) NOT NULL DEFAULT '0',
  `LOST_CONNECTIONS` bigint(21) NOT NULL DEFAULT '0',
  `ACCESS_DENIED` bigint(21) NOT NULL DEFAULT '0',
  `EMPTY_QUERIES` bigint(21) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `COLLATIONS`
--

CREATE TEMPORARY TABLE `COLLATIONS` (
  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',
  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',
  `ID` bigint(11) NOT NULL DEFAULT '0',
  `IS_DEFAULT` varchar(3) NOT NULL DEFAULT '',
  `IS_COMPILED` varchar(3) NOT NULL DEFAULT '',
  `SORTLEN` bigint(3) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `COLLATIONS`
--

INSERT INTO `COLLATIONS` (`COLLATION_NAME`, `CHARACTER_SET_NAME`, `ID`, `IS_DEFAULT`, `IS_COMPILED`, `SORTLEN`) VALUES
('big5_chinese_ci', 'big5', 1, 'Yes', 'Yes', 1),
('big5_bin', 'big5', 84, '', 'Yes', 1),
('dec8_swedish_ci', 'dec8', 3, 'Yes', '', 0),
('dec8_bin', 'dec8', 69, '', '', 0),
('cp850_general_ci', 'cp850', 4, 'Yes', '', 0),
('cp850_bin', 'cp850', 80, '', '', 0),
('hp8_english_ci', 'hp8', 6, 'Yes', '', 0),
('hp8_bin', 'hp8', 72, '', '', 0),
('koi8r_general_ci', 'koi8r', 7, 'Yes', '', 0),
('koi8r_bin', 'koi8r', 74, '', '', 0),
('latin1_german1_ci', 'latin1', 5, '', 'Yes', 1),
('latin1_swedish_ci', 'latin1', 8, 'Yes', 'Yes', 1),
('latin1_danish_ci', 'latin1', 15, '', 'Yes', 1),
('latin1_german2_ci', 'latin1', 31, '', 'Yes', 2),
('latin1_bin', 'latin1', 47, '', 'Yes', 1),
('latin1_general_ci', 'latin1', 48, '', 'Yes', 1),
('latin1_general_cs', 'latin1', 49, '', 'Yes', 1),
('latin1_spanish_ci', 'latin1', 94, '', 'Yes', 1),
('latin2_czech_cs', 'latin2', 2, '', 'Yes', 4),
('latin2_general_ci', 'latin2', 9, 'Yes', 'Yes', 1),
('latin2_hungarian_ci', 'latin2', 21, '', 'Yes', 1),
('latin2_croatian_ci', 'latin2', 27, '', 'Yes', 1),
('latin2_bin', 'latin2', 77, '', 'Yes', 1),
('swe7_swedish_ci', 'swe7', 10, 'Yes', '', 0),
('swe7_bin', 'swe7', 82, '', '', 0),
('ascii_general_ci', 'ascii', 11, 'Yes', '', 0),
('ascii_bin', 'ascii', 65, '', '', 0),
('ujis_japanese_ci', 'ujis', 12, 'Yes', 'Yes', 1),
('ujis_bin', 'ujis', 91, '', 'Yes', 1),
('sjis_japanese_ci', 'sjis', 13, 'Yes', 'Yes', 1),
('sjis_bin', 'sjis', 88, '', 'Yes', 1),
('hebrew_general_ci', 'hebrew', 16, 'Yes', '', 0),
('hebrew_bin', 'hebrew', 71, '', '', 0),
('tis620_thai_ci', 'tis620', 18, 'Yes', 'Yes', 4),
('tis620_bin', 'tis620', 89, '', 'Yes', 1),
('euckr_korean_ci', 'euckr', 19, 'Yes', 'Yes', 1),
('euckr_bin', 'euckr', 85, '', 'Yes', 1),
('koi8u_general_ci', 'koi8u', 22, 'Yes', '', 0),
('koi8u_bin', 'koi8u', 75, '', '', 0),
('gb2312_chinese_ci', 'gb2312', 24, 'Yes', 'Yes', 1),
('gb2312_bin', 'gb2312', 86, '', 'Yes', 1),
('greek_general_ci', 'greek', 25, 'Yes', '', 0),
('greek_bin', 'greek', 70, '', '', 0),
('cp1250_general_ci', 'cp1250', 26, 'Yes', 'Yes', 1),
('cp1250_czech_cs', 'cp1250', 34, '', 'Yes', 2),
('cp1250_croatian_ci', 'cp1250', 44, '', 'Yes', 1),
('cp1250_bin', 'cp1250', 66, '', 'Yes', 1),
('cp1250_polish_ci', 'cp1250', 99, '', 'Yes', 1),
('gbk_chinese_ci', 'gbk', 28, 'Yes', 'Yes', 1),
('gbk_bin', 'gbk', 87, '', 'Yes', 1),
('latin5_turkish_ci', 'latin5', 30, 'Yes', '', 0),
('latin5_bin', 'latin5', 78, '', '', 0),
('armscii8_general_ci', 'armscii8', 32, 'Yes', '', 0),
('armscii8_bin', 'armscii8', 64, '', '', 0),
('utf8_general_ci', 'utf8', 33, 'Yes', 'Yes', 1),
('utf8_bin', 'utf8', 83, '', 'Yes', 1),
('utf8_unicode_ci', 'utf8', 192, '', 'Yes', 8),
('utf8_icelandic_ci', 'utf8', 193, '', 'Yes', 8),
('utf8_latvian_ci', 'utf8', 194, '', 'Yes', 8),
('utf8_romanian_ci', 'utf8', 195, '', 'Yes', 8),
('utf8_slovenian_ci', 'utf8', 196, '', 'Yes', 8),
('utf8_polish_ci', 'utf8', 197, '', 'Yes', 8),
('utf8_estonian_ci', 'utf8', 198, '', 'Yes', 8),
('utf8_spanish_ci', 'utf8', 199, '', 'Yes', 8),
('utf8_swedish_ci', 'utf8', 200, '', 'Yes', 8),
('utf8_turkish_ci', 'utf8', 201, '', 'Yes', 8),
('utf8_czech_ci', 'utf8', 202, '', 'Yes', 8),
('utf8_danish_ci', 'utf8', 203, '', 'Yes', 8),
('utf8_lithuanian_ci', 'utf8', 204, '', 'Yes', 8),
('utf8_slovak_ci', 'utf8', 205, '', 'Yes', 8),
('utf8_spanish2_ci', 'utf8', 206, '', 'Yes', 8),
('utf8_roman_ci', 'utf8', 207, '', 'Yes', 8),
('utf8_persian_ci', 'utf8', 208, '', 'Yes', 8),
('utf8_esperanto_ci', 'utf8', 209, '', 'Yes', 8),
('utf8_hungarian_ci', 'utf8', 210, '', 'Yes', 8),
('utf8_croatian_ci', 'utf8', 213, '', 'Yes', 8),
('utf8_general_mysql500_ci', 'utf8', 223, '', 'Yes', 1),
('ucs2_general_ci', 'ucs2', 35, 'Yes', 'Yes', 1),
('ucs2_bin', 'ucs2', 90, '', 'Yes', 1),
('ucs2_unicode_ci', 'ucs2', 128, '', 'Yes', 8),
('ucs2_icelandic_ci', 'ucs2', 129, '', 'Yes', 8),
('ucs2_latvian_ci', 'ucs2', 130, '', 'Yes', 8),
('ucs2_romanian_ci', 'ucs2', 131, '', 'Yes', 8),
('ucs2_slovenian_ci', 'ucs2', 132, '', 'Yes', 8),
('ucs2_polish_ci', 'ucs2', 133, '', 'Yes', 8),
('ucs2_estonian_ci', 'ucs2', 134, '', 'Yes', 8),
('ucs2_spanish_ci', 'ucs2', 135, '', 'Yes', 8),
('ucs2_swedish_ci', 'ucs2', 136, '', 'Yes', 8),
('ucs2_turkish_ci', 'ucs2', 137, '', 'Yes', 8),
('ucs2_czech_ci', 'ucs2', 138, '', 'Yes', 8),
('ucs2_danish_ci', 'ucs2', 139, '', 'Yes', 8),
('ucs2_lithuanian_ci', 'ucs2', 140, '', 'Yes', 8),
('ucs2_slovak_ci', 'ucs2', 141, '', 'Yes', 8),
('ucs2_spanish2_ci', 'ucs2', 142, '', 'Yes', 8),
('ucs2_roman_ci', 'ucs2', 143, '', 'Yes', 8),
('ucs2_persian_ci', 'ucs2', 144, '', 'Yes', 8),
('ucs2_esperanto_ci', 'ucs2', 145, '', 'Yes', 8),
('ucs2_hungarian_ci', 'ucs2', 146, '', 'Yes', 8),
('ucs2_croatian_ci', 'ucs2', 149, '', 'Yes', 8),
('ucs2_general_mysql500_ci', 'ucs2', 159, '', 'Yes', 1),
('cp866_general_ci', 'cp866', 36, 'Yes', '', 0),
('cp866_bin', 'cp866', 68, '', '', 0),
('keybcs2_general_ci', 'keybcs2', 37, 'Yes', '', 0),
('keybcs2_bin', 'keybcs2', 73, '', '', 0),
('macce_general_ci', 'macce', 38, 'Yes', '', 0),
('macce_bin', 'macce', 43, '', '', 0),
('macroman_general_ci', 'macroman', 39, 'Yes', '', 0),
('macroman_bin', 'macroman', 53, '', '', 0),
('cp852_general_ci', 'cp852', 40, 'Yes', '', 0),
('cp852_bin', 'cp852', 81, '', '', 0),
('latin7_estonian_cs', 'latin7', 20, '', '', 0),
('latin7_general_ci', 'latin7', 41, 'Yes', '', 0),
('latin7_general_cs', 'latin7', 42, '', '', 0),
('latin7_bin', 'latin7', 79, '', '', 0),
('cp1251_bulgarian_ci', 'cp1251', 14, '', '', 0),
('cp1251_ukrainian_ci', 'cp1251', 23, '', '', 0),
('cp1251_bin', 'cp1251', 50, '', '', 0),
('cp1251_general_ci', 'cp1251', 51, 'Yes', '', 0),
('cp1251_general_cs', 'cp1251', 52, '', '', 0),
('cp1256_general_ci', 'cp1256', 57, 'Yes', '', 0),
('cp1256_bin', 'cp1256', 67, '', '', 0),
('cp1257_lithuanian_ci', 'cp1257', 29, '', '', 0),
('cp1257_bin', 'cp1257', 58, '', '', 0),
('cp1257_general_ci', 'cp1257', 59, 'Yes', '', 0),
('binary', 'binary', 63, 'Yes', 'Yes', 1),
('geostd8_general_ci', 'geostd8', 92, 'Yes', '', 0),
('geostd8_bin', 'geostd8', 93, '', '', 0),
('cp932_japanese_ci', 'cp932', 95, 'Yes', 'Yes', 1),
('cp932_bin', 'cp932', 96, '', 'Yes', 1),
('eucjpms_japanese_ci', 'eucjpms', 97, 'Yes', 'Yes', 1),
('eucjpms_bin', 'eucjpms', 98, '', 'Yes', 1);

-- --------------------------------------------------------

--
-- Table structure for table `COLLATION_CHARACTER_SET_APPLICABILITY`
--

CREATE TEMPORARY TABLE `COLLATION_CHARACTER_SET_APPLICABILITY` (
  `COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',
  `CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `COLLATION_CHARACTER_SET_APPLICABILITY`
--

INSERT INTO `COLLATION_CHARACTER_SET_APPLICABILITY` (`COLLATION_NAME`, `CHARACTER_SET_NAME`) VALUES
('big5_chinese_ci', 'big5'),
('big5_bin', 'big5'),
('dec8_swedish_ci', 'dec8'),
('dec8_bin', 'dec8'),
('cp850_general_ci', 'cp850'),
('cp850_bin', 'cp850'),
('hp8_english_ci', 'hp8'),
('hp8_bin', 'hp8'),
('koi8r_general_ci', 'koi8r'),
('koi8r_bin', 'koi8r'),
('latin1_german1_ci', 'latin1'),
('latin1_swedish_ci', 'latin1'),
('latin1_danish_ci', 'latin1'),
('latin1_german2_ci', 'latin1'),
('latin1_bin', 'latin1'),
('latin1_general_ci', 'latin1'),
('latin1_general_cs', 'latin1'),
('latin1_spanish_ci', 'latin1'),
('latin2_czech_cs', 'latin2'),
('latin2_general_ci', 'latin2'),
('latin2_hungarian_ci', 'latin2'),
('latin2_croatian_ci', 'latin2'),
('latin2_bin', 'latin2'),
('swe7_swedish_ci', 'swe7'),
('swe7_bin', 'swe7'),
('ascii_general_ci', 'ascii'),
('ascii_bin', 'ascii'),
('ujis_japanese_ci', 'ujis'),
('ujis_bin', 'ujis'),
('sjis_japanese_ci', 'sjis'),
('sjis_bin', 'sjis'),
('hebrew_general_ci', 'hebrew'),
('hebrew_bin', 'hebrew'),
('filename', 'filename'),
('tis620_thai_ci', 'tis620'),
('tis620_bin', 'tis620'),
('euckr_korean_ci', 'euckr'),
('euckr_bin', 'euckr'),
('koi8u_general_ci', 'koi8u'),
('koi8u_bin', 'koi8u'),
('gb2312_chinese_ci', 'gb2312'),
('gb2312_bin', 'gb2312'),
('greek_general_ci', 'greek'),
('greek_bin', 'greek'),
('cp1250_general_ci', 'cp1250'),
('cp1250_czech_cs', 'cp1250'),
('cp1250_croatian_ci', 'cp1250'),
('cp1250_bin', 'cp1250'),
('cp1250_polish_ci', 'cp1250'),
('gbk_chinese_ci', 'gbk'),
('gbk_bin', 'gbk'),
('latin5_turkish_ci', 'latin5'),
('latin5_bin', 'latin5'),
('armscii8_general_ci', 'armscii8'),
('armscii8_bin', 'armscii8'),
('utf8_general_ci', 'utf8'),
('utf8_bin', 'utf8'),
('utf8_unicode_ci', 'utf8'),
('utf8_icelandic_ci', 'utf8'),
('utf8_latvian_ci', 'utf8'),
('utf8_romanian_ci', 'utf8'),
('utf8_slovenian_ci', 'utf8'),
('utf8_polish_ci', 'utf8'),
('utf8_estonian_ci', 'utf8'),
('utf8_spanish_ci', 'utf8'),
('utf8_swedish_ci', 'utf8'),
('utf8_turkish_ci', 'utf8'),
('utf8_czech_ci', 'utf8'),
('utf8_danish_ci', 'utf8'),
('utf8_lithuanian_ci', 'utf8'),
('utf8_slovak_ci', 'utf8'),
('utf8_spanish2_ci', 'utf8'),
('utf8_roman_ci', 'utf8'),
('utf8_persian_ci', 'utf8'),
('utf8_esperanto_ci', 'utf8'),
('utf8_hungarian_ci', 'utf8'),
('utf8_croatian_ci', 'utf8'),
('utf8_general_mysql500_ci', 'utf8'),
('ucs2_general_ci', 'ucs2'),
('ucs2_bin', 'ucs2'),
('ucs2_unicode_ci', 'ucs2'),
('ucs2_icelandic_ci', 'ucs2'),
('ucs2_latvian_ci', 'ucs2'),
('ucs2_romanian_ci', 'ucs2'),
('ucs2_slovenian_ci', 'ucs2'),
('ucs2_polish_ci', 'ucs2'),
('ucs2_estonian_ci', 'ucs2'),
('ucs2_spanish_ci', 'ucs2'),
('ucs2_swedish_ci', 'ucs2'),
('ucs2_turkish_ci', 'ucs2'),
('ucs2_czech_ci', 'ucs2'),
('ucs2_danish_ci', 'ucs2'),
('ucs2_lithuanian_ci', 'ucs2'),
('ucs2_slovak_ci', 'ucs2'),
('ucs2_spanish2_ci', 'ucs2'),
('ucs2_roman_ci', 'ucs2'),
('ucs2_persian_ci', 'ucs2'),
('ucs2_esperanto_ci', 'ucs2'),
('ucs2_hungarian_ci', 'ucs2'),
('ucs2_croatian_ci', 'ucs2'),
('ucs2_general_mysql500_ci', 'ucs2'),
('cp866_general_ci', 'cp866'),
('cp866_bin', 'cp866'),
('keybcs2_general_ci', 'keybcs2'),
('keybcs2_bin', 'keybcs2'),
('macce_general_ci', 'macce'),
('macce_bin', 'macce'),
('macroman_general_ci', 'macroman'),
('macroman_bin', 'macroman'),
('cp852_general_ci', 'cp852'),
('cp852_bin', 'cp852'),
('latin7_estonian_cs', 'latin7'),
('latin7_general_ci', 'latin7'),
('latin7_general_cs', 'latin7'),
('latin7_bin', 'latin7'),
('cp1251_bulgarian_ci', 'cp1251'),
('cp1251_ukrainian_ci', 'cp1251'),
('cp1251_bin', 'cp1251'),
('cp1251_general_ci', 'cp1251'),
('cp1251_general_cs', 'cp1251'),
('cp1256_general_ci', 'cp1256'),
('cp1256_bin', 'cp1256'),
('cp1257_lithuanian_ci', 'cp1257'),
('cp1257_bin', 'cp1257'),
('cp1257_general_ci', 'cp1257'),
('binary', 'binary'),
('geostd8_general_ci', 'geostd8'),
('geostd8_bin', 'geostd8'),
('cp932_japanese_ci', 'cp932'),
('cp932_bin', 'cp932'),
('eucjpms_japanese_ci', 'eucjpms'),
('eucjpms_bin', 'eucjpms');

-- --------------------------------------------------------

--
-- Table structure for table `COLUMNS`
--

CREATE TEMPORARY TABLE `COLUMNS` (
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `ORDINAL_POSITION` bigint(21) unsigned NOT NULL DEFAULT '0',
  `COLUMN_DEFAULT` longtext,
  `IS_NULLABLE` varchar(3) NOT NULL DEFAULT '',
  `DATA_TYPE` varchar(64) NOT NULL DEFAULT '',
  `CHARACTER_MAXIMUM_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `CHARACTER_OCTET_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `NUMERIC_PRECISION` bigint(21) unsigned DEFAULT NULL,
  `NUMERIC_SCALE` bigint(21) unsigned DEFAULT NULL,
  `DATETIME_PRECISION` bigint(21) unsigned DEFAULT NULL,
  `CHARACTER_SET_NAME` varchar(32) DEFAULT NULL,
  `COLLATION_NAME` varchar(32) DEFAULT NULL,
  `COLUMN_TYPE` longtext NOT NULL,
  `COLUMN_KEY` varchar(3) NOT NULL DEFAULT '',
  `EXTRA` varchar(27) NOT NULL DEFAULT '',
  `PRIVILEGES` varchar(80) NOT NULL DEFAULT '',
  `COLUMN_COMMENT` varchar(255) NOT NULL DEFAULT ''
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

--
-- Dumping data for table `COLUMNS`
--

INSERT INTO `COLUMNS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `COLUMN_NAME`, `ORDINAL_POSITION`, `COLUMN_DEFAULT`, `IS_NULLABLE`, `DATA_TYPE`, `CHARACTER_MAXIMUM_LENGTH`, `CHARACTER_OCTET_LENGTH`, `NUMERIC_PRECISION`, `NUMERIC_SCALE`, `DATETIME_PRECISION`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `COLUMN_TYPE`, `COLUMN_KEY`, `EXTRA`, `PRIVILEGES`, `COLUMN_COMMENT`) VALUES
(NULL, 'information_schema', 'CHARACTER_SETS', 'CHARACTER_SET_NAME', 1, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'CHARACTER_SETS', 'DEFAULT_COLLATE_NAME', 2, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'CHARACTER_SETS', 'DESCRIPTION', 3, '', 'NO', 'varchar', 60, 180, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(60)', '', '', 'select', ''),
(NULL, 'information_schema', 'CHARACTER_SETS', 'MAXLEN', 4, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'CLIENT', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'TOTAL_CONNECTIONS', 2, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'CONCURRENT_CONNECTIONS', 3, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'CONNECTED_TIME', 4, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'BUSY_TIME', 5, '0', 'NO', 'double', NULL, NULL, 21, NULL, NULL, NULL, NULL, 'double', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'CPU_TIME', 6, '0', 'NO', 'double', NULL, NULL, 21, NULL, NULL, NULL, NULL, 'double', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'BYTES_RECEIVED', 7, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'BYTES_SENT', 8, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'BINLOG_BYTES_WRITTEN', 9, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'ROWS_READ', 10, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'ROWS_SENT', 11, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'ROWS_DELETED', 12, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'ROWS_INSERTED', 13, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'ROWS_UPDATED', 14, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'SELECT_COMMANDS', 15, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'UPDATE_COMMANDS', 16, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'OTHER_COMMANDS', 17, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'COMMIT_TRANSACTIONS', 18, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'ROLLBACK_TRANSACTIONS', 19, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'DENIED_CONNECTIONS', 20, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'LOST_CONNECTIONS', 21, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'ACCESS_DENIED', 22, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'EMPTY_QUERIES', 23, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATIONS', 'COLLATION_NAME', 1, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATIONS', 'CHARACTER_SET_NAME', 2, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATIONS', 'ID', 3, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(11)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATIONS', 'IS_DEFAULT', 4, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATIONS', 'IS_COMPILED', 5, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATIONS', 'SORTLEN', 6, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'COLLATION_NAME', 1, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'CHARACTER_SET_NAME', 2, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'TABLE_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'COLUMN_NAME', 4, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'ORDINAL_POSITION', 5, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'COLUMN_DEFAULT', 6, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'IS_NULLABLE', 7, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'DATA_TYPE', 8, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'CHARACTER_MAXIMUM_LENGTH', 9, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'CHARACTER_OCTET_LENGTH', 10, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'NUMERIC_PRECISION', 11, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'NUMERIC_SCALE', 12, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'DATETIME_PRECISION', 13, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'CHARACTER_SET_NAME', 14, NULL, 'YES', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'COLLATION_NAME', 15, NULL, 'YES', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'COLUMN_TYPE', 16, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'COLUMN_KEY', 17, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'EXTRA', 18, '', 'NO', 'varchar', 27, 81, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(27)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'PRIVILEGES', 19, '', 'NO', 'varchar', 80, 240, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMNS', 'COLUMN_COMMENT', 20, '', 'NO', 'varchar', 255, 765, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(255)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 243, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'TABLE_CATALOG', 2, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'TABLE_SCHEMA', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'TABLE_NAME', 4, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'COLUMN_NAME', 5, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'PRIVILEGE_TYPE', 6, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'IS_GRANTABLE', 7, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'ENGINES', 'ENGINE', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ENGINES', 'SUPPORT', 2, '', 'NO', 'varchar', 8, 24, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', ''),
(NULL, 'information_schema', 'ENGINES', 'COMMENT', 3, '', 'NO', 'varchar', 160, 480, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(160)', '', '', 'select', ''),
(NULL, 'information_schema', 'ENGINES', 'TRANSACTIONS', 4, NULL, 'YES', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'ENGINES', 'XA', 5, NULL, 'YES', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'ENGINES', 'SAVEPOINTS', 6, NULL, 'YES', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EVENT_CATALOG', 1, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EVENT_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EVENT_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'DEFINER', 4, '', 'NO', 'varchar', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'TIME_ZONE', 5, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EVENT_BODY', 6, '', 'NO', 'varchar', 8, 24, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EVENT_DEFINITION', 7, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EVENT_TYPE', 8, '', 'NO', 'varchar', 9, 27, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(9)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EXECUTE_AT', 9, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'INTERVAL_VALUE', 10, NULL, 'YES', 'varchar', 256, 768, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(256)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'INTERVAL_FIELD', 11, NULL, 'YES', 'varchar', 18, 54, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(18)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'SQL_MODE', 12, '', 'NO', 'varchar', 8192, 24576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8192)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'STARTS', 13, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'ENDS', 14, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'STATUS', 15, '', 'NO', 'varchar', 18, 54, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(18)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'ON_COMPLETION', 16, '', 'NO', 'varchar', 12, 36, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'CREATED', 17, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'LAST_ALTERED', 18, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'LAST_EXECUTED', 19, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'EVENT_COMMENT', 20, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'ORIGINATOR', 21, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(10)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'CHARACTER_SET_CLIENT', 22, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'COLLATION_CONNECTION', 23, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'EVENTS', 'DATABASE_COLLATION', 24, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'FILE_ID', 1, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'FILE_NAME', 2, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'FILE_TYPE', 3, '', 'NO', 'varchar', 20, 60, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'TABLESPACE_NAME', 4, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'TABLE_CATALOG', 5, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'TABLE_SCHEMA', 6, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'TABLE_NAME', 7, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'LOGFILE_GROUP_NAME', 8, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'LOGFILE_GROUP_NUMBER', 9, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'ENGINE', 10, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'FULLTEXT_KEYS', 11, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'DELETED_ROWS', 12, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'UPDATE_COUNT', 13, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'FREE_EXTENTS', 14, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'TOTAL_EXTENTS', 15, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'EXTENT_SIZE', 16, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'INITIAL_SIZE', 17, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'MAXIMUM_SIZE', 18, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'AUTOEXTEND_SIZE', 19, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'CREATION_TIME', 20, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'LAST_UPDATE_TIME', 21, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'LAST_ACCESS_TIME', 22, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'RECOVER_TIME', 23, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'TRANSACTION_COUNTER', 24, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'VERSION', 25, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'ROW_FORMAT', 26, NULL, 'YES', 'varchar', 10, 30, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'TABLE_ROWS', 27, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'AVG_ROW_LENGTH', 28, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'DATA_LENGTH', 29, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'MAX_DATA_LENGTH', 30, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'INDEX_LENGTH', 31, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'DATA_FREE', 32, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'CREATE_TIME', 33, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'UPDATE_TIME', 34, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'CHECK_TIME', 35, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'CHECKSUM', 36, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'STATUS', 37, '', 'NO', 'varchar', 20, 60, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'FILES', 'EXTRA', 38, NULL, 'YES', 'varchar', 255, 765, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(255)', '', '', 'select', ''),
(NULL, 'information_schema', 'GLOBAL_STATUS', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'GLOBAL_STATUS', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 3072, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', ''),
(NULL, 'information_schema', 'GLOBAL_VARIABLES', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'GLOBAL_VARIABLES', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 3072, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', ''),
(NULL, 'information_schema', 'INDEX_STATISTICS', 'TABLE_SCHEMA', 1, '', 'NO', 'varchar', 192, 576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(192)', '', '', 'select', ''),
(NULL, 'information_schema', 'INDEX_STATISTICS', 'TABLE_NAME', 2, '', 'NO', 'varchar', 192, 576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(192)', '', '', 'select', ''),
(NULL, 'information_schema', 'INDEX_STATISTICS', 'INDEX_NAME', 3, '', 'NO', 'varchar', 192, 576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(192)', '', '', 'select', ''),
(NULL, 'information_schema', 'INDEX_STATISTICS', 'ROWS_READ', 4, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'KEY_CACHE_NAME', 1, '', 'NO', 'varchar', 192, 576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(192)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'SEGMENTS', 2, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(3) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'SEGMENT_NUMBER', 3, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(3) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'FULL_SIZE', 4, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'BLOCK_SIZE', 5, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'USED_BLOCKS', 6, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'UNUSED_BLOCKS', 7, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'DIRTY_BLOCKS', 8, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'READ_REQUESTS', 9, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'READS', 10, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'WRITE_REQUESTS', 11, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'WRITES', 12, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'CONSTRAINT_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'CONSTRAINT_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'CONSTRAINT_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'TABLE_CATALOG', 4, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'TABLE_SCHEMA', 5, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'TABLE_NAME', 6, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'COLUMN_NAME', 7, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'ORDINAL_POSITION', 8, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(10)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'POSITION_IN_UNIQUE_CONSTRAINT', 9, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(10)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'REFERENCED_TABLE_SCHEMA', 10, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'REFERENCED_TABLE_NAME', 11, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'REFERENCED_COLUMN_NAME', 12, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'TABLE_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'PARTITION_NAME', 4, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'SUBPARTITION_NAME', 5, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'PARTITION_ORDINAL_POSITION', 6, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'SUBPARTITION_ORDINAL_POSITION', 7, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'PARTITION_METHOD', 8, NULL, 'YES', 'varchar', 12, 36, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'SUBPARTITION_METHOD', 9, NULL, 'YES', 'varchar', 12, 36, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'PARTITION_EXPRESSION', 10, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'SUBPARTITION_EXPRESSION', 11, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'PARTITION_DESCRIPTION', 12, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'TABLE_ROWS', 13, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'AVG_ROW_LENGTH', 14, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'DATA_LENGTH', 15, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'MAX_DATA_LENGTH', 16, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'INDEX_LENGTH', 17, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'DATA_FREE', 18, '0', 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'CREATE_TIME', 19, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'UPDATE_TIME', 20, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'CHECK_TIME', 21, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'CHECKSUM', 22, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'PARTITION_COMMENT', 23, '', 'NO', 'varchar', 80, 240, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'NODEGROUP', 24, '', 'NO', 'varchar', 12, 36, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', ''),
(NULL, 'information_schema', 'PARTITIONS', 'TABLESPACE_NAME', 25, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_NAME', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_VERSION', 2, '', 'NO', 'varchar', 20, 60, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_STATUS', 3, '', 'NO', 'varchar', 10, 30, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_TYPE', 4, '', 'NO', 'varchar', 80, 240, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_TYPE_VERSION', 5, '', 'NO', 'varchar', 20, 60, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_LIBRARY', 6, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_LIBRARY_VERSION', 7, NULL, 'YES', 'varchar', 20, 60, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_AUTHOR', 8, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_DESCRIPTION', 9, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_LICENSE', 10, NULL, 'YES', 'varchar', 80, 240, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_MATURITY', 11, NULL, 'YES', 'varchar', 12, 36, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(12)', '', '', 'select', ''),
(NULL, 'information_schema', 'PLUGINS', 'PLUGIN_AUTH_VERSION', 12, NULL, 'YES', 'varchar', 80, 240, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'ID', 1, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'USER', 2, '', 'NO', 'varchar', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'HOST', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'DB', 4, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'COMMAND', 5, '', 'NO', 'varchar', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'TIME', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(7)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'STATE', 7, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'INFO', 8, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'TIME_MS', 9, '0.000', 'NO', 'decimal', NULL, NULL, 22, 3, NULL, NULL, NULL, 'decimal(22,3)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'STAGE', 10, '0', 'NO', 'tinyint', NULL, NULL, 3, 0, NULL, NULL, NULL, 'tinyint(2)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'MAX_STAGE', 11, '0', 'NO', 'tinyint', NULL, NULL, 3, 0, NULL, NULL, NULL, 'tinyint(2)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'PROGRESS', 12, '0.000', 'NO', 'decimal', NULL, NULL, 7, 3, NULL, NULL, NULL, 'decimal(7,3)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'QUERY_ID', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'SEQ', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'STATE', 3, '', 'NO', 'varchar', 30, 90, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'DURATION', 4, '0.000000', 'NO', 'decimal', NULL, NULL, 9, 6, NULL, NULL, NULL, 'decimal(9,6)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'CPU_USER', 5, NULL, 'YES', 'decimal', NULL, NULL, 9, 6, NULL, NULL, NULL, 'decimal(9,6)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'CPU_SYSTEM', 6, NULL, 'YES', 'decimal', NULL, NULL, 9, 6, NULL, NULL, NULL, 'decimal(9,6)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'CONTEXT_VOLUNTARY', 7, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'CONTEXT_INVOLUNTARY', 8, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'BLOCK_OPS_IN', 9, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'BLOCK_OPS_OUT', 10, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'MESSAGES_SENT', 11, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'MESSAGES_RECEIVED', 12, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'PAGE_FAULTS_MAJOR', 13, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'PAGE_FAULTS_MINOR', 14, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'SWAPS', 15, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'SOURCE_FUNCTION', 16, NULL, 'YES', 'varchar', 30, 90, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(30)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'SOURCE_FILE', 17, NULL, 'YES', 'varchar', 20, 60, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'PROFILING', 'SOURCE_LINE', 18, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(20)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'CONSTRAINT_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'CONSTRAINT_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'CONSTRAINT_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UNIQUE_CONSTRAINT_CATALOG', 4, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UNIQUE_CONSTRAINT_SCHEMA', 5, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UNIQUE_CONSTRAINT_NAME', 6, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'MATCH_OPTION', 7, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'UPDATE_RULE', 8, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'DELETE_RULE', 9, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'TABLE_NAME', 10, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'REFERENCED_TABLE_NAME', 11, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'SPECIFIC_NAME', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'ROUTINE_CATALOG', 2, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'ROUTINE_SCHEMA', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'ROUTINE_NAME', 4, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'ROUTINE_TYPE', 5, '', 'NO', 'varchar', 9, 27, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(9)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'DTD_IDENTIFIER', 6, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'ROUTINE_BODY', 7, '', 'NO', 'varchar', 8, 24, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'ROUTINE_DEFINITION', 8, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'EXTERNAL_NAME', 9, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'EXTERNAL_LANGUAGE', 10, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'PARAMETER_STYLE', 11, '', 'NO', 'varchar', 8, 24, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'IS_DETERMINISTIC', 12, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'SQL_DATA_ACCESS', 13, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'SQL_PATH', 14, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'SECURITY_TYPE', 15, '', 'NO', 'varchar', 7, 21, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(7)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'CREATED', 16, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'LAST_ALTERED', 17, '0000-00-00 00:00:00', 'NO', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'SQL_MODE', 18, '', 'NO', 'varchar', 8192, 24576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8192)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'ROUTINE_COMMENT', 19, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'DEFINER', 20, '', 'NO', 'varchar', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'CHARACTER_SET_CLIENT', 21, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'COLLATION_CONNECTION', 22, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'ROUTINES', 'DATABASE_COLLATION', 23, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMATA', 'CATALOG_NAME', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMATA', 'SCHEMA_NAME', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMATA', 'DEFAULT_CHARACTER_SET_NAME', 3, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMATA', 'DEFAULT_COLLATION_NAME', 4, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMATA', 'SQL_PATH', 5, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMA_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 243, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMA_PRIVILEGES', 'TABLE_CATALOG', 2, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMA_PRIVILEGES', 'TABLE_SCHEMA', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMA_PRIVILEGES', 'PRIVILEGE_TYPE', 4, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'SCHEMA_PRIVILEGES', 'IS_GRANTABLE', 5, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'SESSION_STATUS', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'SESSION_STATUS', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 3072, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', ''),
(NULL, 'information_schema', 'SESSION_VARIABLES', 'VARIABLE_NAME', 1, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'SESSION_VARIABLES', 'VARIABLE_VALUE', 2, NULL, 'YES', 'varchar', 1024, 3072, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1024)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'TABLE_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'NON_UNIQUE', 4, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(1)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'INDEX_SCHEMA', 5, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'INDEX_NAME', 6, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'SEQ_IN_INDEX', 7, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(2)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'COLUMN_NAME', 8, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'COLLATION', 9, NULL, 'YES', 'varchar', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(1)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'CARDINALITY', 10, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'SUB_PART', 11, NULL, 'YES', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'PACKED', 12, NULL, 'YES', 'varchar', 10, 30, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'NULLABLE', 13, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'INDEX_TYPE', 14, '', 'NO', 'varchar', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', ''),
(NULL, 'information_schema', 'STATISTICS', 'COMMENT', 15, NULL, 'YES', 'varchar', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(16)', '', '', 'select', '');
INSERT INTO `COLUMNS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `COLUMN_NAME`, `ORDINAL_POSITION`, `COLUMN_DEFAULT`, `IS_NULLABLE`, `DATA_TYPE`, `CHARACTER_MAXIMUM_LENGTH`, `CHARACTER_OCTET_LENGTH`, `NUMERIC_PRECISION`, `NUMERIC_SCALE`, `DATETIME_PRECISION`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `COLUMN_TYPE`, `COLUMN_KEY`, `EXTRA`, `PRIVILEGES`, `COLUMN_COMMENT`) VALUES
(NULL, 'information_schema', 'TABLES', 'TABLE_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'TABLE_TYPE', 4, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'ENGINE', 5, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'VERSION', 6, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'ROW_FORMAT', 7, NULL, 'YES', 'varchar', 10, 30, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(10)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'TABLE_ROWS', 8, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'AVG_ROW_LENGTH', 9, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'DATA_LENGTH', 10, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'MAX_DATA_LENGTH', 11, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'INDEX_LENGTH', 12, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'DATA_FREE', 13, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'AUTO_INCREMENT', 14, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'CREATE_TIME', 15, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'UPDATE_TIME', 16, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'CHECK_TIME', 17, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'TABLE_COLLATION', 18, NULL, 'YES', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'CHECKSUM', 19, NULL, 'YES', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(21) unsigned', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'CREATE_OPTIONS', 20, NULL, 'YES', 'varchar', 255, 765, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(255)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLES', 'TABLE_COMMENT', 21, '', 'NO', 'varchar', 80, 240, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(80)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', 'TABLE_SCHEMA', 4, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', 'TABLE_NAME', 5, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', 'CONSTRAINT_TYPE', 6, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 243, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', 'TABLE_CATALOG', 2, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', 'TABLE_SCHEMA', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', 'TABLE_NAME', 4, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', 'PRIVILEGE_TYPE', 5, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', 'IS_GRANTABLE', 6, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_STATISTICS', 'TABLE_SCHEMA', 1, '', 'NO', 'varchar', 192, 576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(192)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_STATISTICS', 'TABLE_NAME', 2, '', 'NO', 'varchar', 192, 576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(192)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_STATISTICS', 'ROWS_READ', 3, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_STATISTICS', 'ROWS_CHANGED', 4, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'TABLE_STATISTICS', 'ROWS_CHANGED_X_INDEXES', 5, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'TRIGGER_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'TRIGGER_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'TRIGGER_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'EVENT_MANIPULATION', 4, '', 'NO', 'varchar', 6, 18, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(6)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'EVENT_OBJECT_CATALOG', 5, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'EVENT_OBJECT_SCHEMA', 6, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'EVENT_OBJECT_TABLE', 7, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_ORDER', 8, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(4)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_CONDITION', 9, NULL, 'YES', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_STATEMENT', 10, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_ORIENTATION', 11, '', 'NO', 'varchar', 9, 27, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(9)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_TIMING', 12, '', 'NO', 'varchar', 6, 18, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(6)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_OLD_TABLE', 13, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_NEW_TABLE', 14, NULL, 'YES', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_OLD_ROW', 15, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'ACTION_REFERENCE_NEW_ROW', 16, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'CREATED', 17, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'SQL_MODE', 18, '', 'NO', 'varchar', 8192, 24576, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8192)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'DEFINER', 19, '', 'NO', 'varchar', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'CHARACTER_SET_CLIENT', 20, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'COLLATION_CONNECTION', 21, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'TRIGGERS', 'DATABASE_COLLATION', 22, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_PRIVILEGES', 'GRANTEE', 1, '', 'NO', 'varchar', 81, 243, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(81)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_PRIVILEGES', 'TABLE_CATALOG', 2, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_PRIVILEGES', 'PRIVILEGE_TYPE', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_PRIVILEGES', 'IS_GRANTABLE', 4, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'USER', 1, '', 'NO', 'varchar', 48, 144, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(48)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'TOTAL_CONNECTIONS', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'CONCURRENT_CONNECTIONS', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'CONNECTED_TIME', 4, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'BUSY_TIME', 5, '0', 'NO', 'double', NULL, NULL, 21, NULL, NULL, NULL, NULL, 'double', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'CPU_TIME', 6, '0', 'NO', 'double', NULL, NULL, 21, NULL, NULL, NULL, NULL, 'double', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'BYTES_RECEIVED', 7, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'BYTES_SENT', 8, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'BINLOG_BYTES_WRITTEN', 9, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'ROWS_READ', 10, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'ROWS_SENT', 11, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'ROWS_DELETED', 12, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'ROWS_INSERTED', 13, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'ROWS_UPDATED', 14, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'SELECT_COMMANDS', 15, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'UPDATE_COMMANDS', 16, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'OTHER_COMMANDS', 17, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'COMMIT_TRANSACTIONS', 18, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'ROLLBACK_TRANSACTIONS', 19, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'DENIED_CONNECTIONS', 20, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'LOST_CONNECTIONS', 21, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'ACCESS_DENIED', 22, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'EMPTY_QUERIES', 23, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(21)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'TABLE_CATALOG', 1, NULL, 'YES', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'TABLE_SCHEMA', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'TABLE_NAME', 3, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'VIEW_DEFINITION', 4, NULL, 'NO', 'longtext', 4294967295, 4294967295, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'longtext', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'CHECK_OPTION', 5, '', 'NO', 'varchar', 8, 24, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(8)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'IS_UPDATABLE', 6, '', 'NO', 'varchar', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(3)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'DEFINER', 7, '', 'NO', 'varchar', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(77)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'SECURITY_TYPE', 8, '', 'NO', 'varchar', 7, 21, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(7)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'CHARACTER_SET_CLIENT', 9, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'information_schema', 'VIEWS', 'COLLATION_CONNECTION', 10, '', 'NO', 'varchar', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(32)', '', '', 'select', ''),
(NULL, 'ecnitdb', 'directory_owner', 'directoryOwnerID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'directory_owner', 'directory', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'directory_owner', 'owner_position', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'directory_owners', 'directoryOwnerID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'directory_owners', 'directory', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'directory_owners', 'owner_position', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'distribution_groups', 'distributionGroupID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'distribution_groups', 'dgName', 2, NULL, 'NO', 'varchar', 64, 64, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(64)', 'UNI', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'divisions', 'divisionID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'divisions', 'name', 2, NULL, 'NO', 'varchar', 64, 64, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(64)', 'UNI', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'edit_permissions', 'editPermissionID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'edit_permissions', 'position', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'edit_permissions', 'directory', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'positions', 'positionID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'positions', 'title', 2, NULL, 'NO', 'varchar', 64, 64, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(64)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'positions', 'division', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'positions', 'school_department', 4, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'read_permissions', 'readPermissionID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'read_permissions', 'position', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'read_permissions', 'directory', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'receive_dg', 'receiveDGID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'receive_dg', 'distributionGroup', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'receive_dg', 'position', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'schools_departments', 'schoolDepartmentID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'schools_departments', 'name', 2, NULL, 'NO', 'varchar', 64, 64, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(64)', 'UNI', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'schools_departments', 'abbreviation', 3, NULL, 'YES', 'varchar', 3, 3, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(3)', 'UNI', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'schools_departments', 'division', 4, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'schools_departments', 'emailDomain', 5, NULL, 'NO', 'varchar', 64, 64, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'schools_departments', 'phoneNumber', 6, NULL, 'YES', 'varchar', 15, 15, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(15)', '', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'send_to_dg', 'sendToDGID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'send_to_dg', 'distributionGroup', 2, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'send_to_dg', 'position', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'source_directories', 'sourceDirectoryID', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'source_directories', 'name', 2, NULL, 'NO', 'varchar', 128, 128, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(128)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'ecnitdb', 'source_directories', 'parent', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'columns_priv', 'Host', 1, '', 'NO', 'char', 60, 180, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'columns_priv', 'Db', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'columns_priv', 'User', 3, '', 'NO', 'char', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'columns_priv', 'Table_name', 4, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'columns_priv', 'Column_name', 5, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'columns_priv', 'Timestamp', 6, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', ''),
(NULL, 'mysql', 'columns_priv', 'Column_priv', 7, '', 'NO', 'set', 31, 93, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(''Select'',''Insert'',''Update'',''References'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Host', 1, '', 'NO', 'char', 60, 180, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Db', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'User', 3, '', 'NO', 'char', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Select_priv', 4, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Insert_priv', 5, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Update_priv', 6, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Delete_priv', 7, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Create_priv', 8, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Drop_priv', 9, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Grant_priv', 10, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'References_priv', 11, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Index_priv', 12, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Alter_priv', 13, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Create_tmp_table_priv', 14, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Lock_tables_priv', 15, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Create_view_priv', 16, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Show_view_priv', 17, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Create_routine_priv', 18, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Alter_routine_priv', 19, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Execute_priv', 20, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Event_priv', 21, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'db', 'Trigger_priv', 22, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'db', 1, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'name', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'body', 3, NULL, 'NO', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'definer', 4, '', 'NO', 'char', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'execute_at', 5, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'interval_value', 6, NULL, 'YES', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'interval_field', 7, NULL, 'YES', 'enum', 18, 54, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''YEAR'',''QUARTER'',''MONTH'',''DAY'',''HOUR'',''MINUTE'',''WEEK'',''SECOND'',''MICROSECOND'',''YEAR_MONTH'',''DAY_HOUR'',''DAY_MINUTE'',''DAY_SECOND'',''HOUR_MINUTE'',''HOUR_SECOND'',''MINUTE_SECOND'',''DAY_MICROSECOND'',''HOUR_MICROSECOND'',''MINUTE_MICROSECOND'',''SECOND_MICROSECOND'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'created', 8, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'modified', 9, '0000-00-00 00:00:00', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'timestamp', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'last_executed', 10, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'starts', 11, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'ends', 12, NULL, 'YES', 'datetime', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'datetime', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'status', 13, 'ENABLED', 'NO', 'enum', 18, 54, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''ENABLED'',''DISABLED'',''SLAVESIDE_DISABLED'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'on_completion', 14, 'DROP', 'NO', 'enum', 8, 24, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''DROP'',''PRESERVE'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'sql_mode', 15, '', 'NO', 'set', 494, 1482, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(''REAL_AS_FLOAT'',''PIPES_AS_CONCAT'',''ANSI_QUOTES'',''IGNORE_SPACE'',''IGNORE_BAD_TABLE_OPTIONS'',''ONLY_FULL_GROUP_BY'',''NO_UNSIGNED_SUBTRACTION'',''NO_DIR_IN_CREATE'',''POSTGRESQL'',''ORACLE'',''MSSQL'',''DB2'',''MAXDB'',''NO_KEY_OPTIONS'',''NO_TABLE_OPTIONS'',''NO_FIELD_OPTIONS'',''MYSQL323'',''MYSQL40'',''ANSI'',''NO_AUTO_VALUE_ON_ZERO'',''NO_BACKSLASH_ESCAPES'',''STRICT_TRANS_TABLES'',''STRICT_ALL_TABLES'',''NO_ZERO_IN_DATE'',''NO_ZERO_DATE'',''INVALID_DATES'',''ERROR_FOR_DIVISION_BY_ZERO'',''TRADITIONAL'',''NO_AUTO_CREATE_USER'',''HIGH_NOT_PRECEDENCE'',''NO_ENGINE_SUBSTITUTION'',''PAD_CHAR_TO_FULL_LENGTH'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'comment', 16, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'originator', 17, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'time_zone', 18, 'SYSTEM', 'NO', 'char', 64, 64, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'character_set_client', 19, NULL, 'YES', 'char', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'collation_connection', 20, NULL, 'YES', 'char', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'db_collation', 21, NULL, 'YES', 'char', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'event', 'body_utf8', 22, NULL, 'YES', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'func', 'name', 1, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'func', 'ret', 2, '0', 'NO', 'tinyint', NULL, NULL, 3, 0, NULL, NULL, NULL, 'tinyint(1)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'func', 'dl', 3, '', 'NO', 'char', 128, 384, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(128)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'func', 'type', 4, NULL, 'NO', 'enum', 9, 27, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''function'',''aggregate'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'general_log', 'event_time', 1, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 6, NULL, NULL, 'timestamp(6)', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', ''),
(NULL, 'mysql', 'general_log', 'user_host', 2, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'general_log', 'thread_id', 3, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'general_log', 'server_id', 4, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'general_log', 'command_type', 5, NULL, 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'general_log', 'argument', 6, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_category', 'help_category_id', 1, '0', 'NO', 'smallint', NULL, NULL, 5, 0, NULL, NULL, NULL, 'smallint(5) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_category', 'name', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', 'UNI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_category', 'parent_category_id', 3, NULL, 'YES', 'smallint', NULL, NULL, 5, 0, NULL, NULL, NULL, 'smallint(5) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_category', 'url', 4, '', 'NO', 'varchar', 128, 384, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(128)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_keyword', 'help_keyword_id', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_keyword', 'name', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', 'UNI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_relation', 'help_topic_id', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_relation', 'help_keyword_id', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_topic', 'help_topic_id', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_topic', 'name', 2, '', 'NO', 'varchar', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(64)', 'UNI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_topic', 'help_category_id', 3, '0', 'NO', 'smallint', NULL, NULL, 5, 0, NULL, NULL, NULL, 'smallint(5) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_topic', 'description', 4, NULL, 'NO', 'text', 65535, 65535, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'text', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_topic', 'example', 5, NULL, 'NO', 'text', 65535, 65535, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'text', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'help_topic', 'url', 6, '', 'NO', 'varchar', 128, 384, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(128)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Host', 1, '', 'NO', 'char', 60, 180, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Db', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Select_priv', 3, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Insert_priv', 4, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Update_priv', 5, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Delete_priv', 6, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Create_priv', 7, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Drop_priv', 8, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Grant_priv', 9, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'References_priv', 10, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Index_priv', 11, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Alter_priv', 12, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Create_tmp_table_priv', 13, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Lock_tables_priv', 14, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Create_view_priv', 15, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Show_view_priv', 16, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Create_routine_priv', 17, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Alter_routine_priv', 18, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Execute_priv', 19, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'host', 'Trigger_priv', 20, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'ndb_binlog_index', 'Position', 1, NULL, 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'ndb_binlog_index', 'File', 2, NULL, 'NO', 'varchar', 255, 255, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'varchar(255)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'ndb_binlog_index', 'epoch', 3, NULL, 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(20) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'ndb_binlog_index', 'inserts', 4, NULL, 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'ndb_binlog_index', 'updates', 5, NULL, 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'ndb_binlog_index', 'deletes', 6, NULL, 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'ndb_binlog_index', 'schemaops', 7, NULL, 'NO', 'bigint', NULL, NULL, 20, 0, NULL, NULL, NULL, 'bigint(20) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'plugin', 'name', 1, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'plugin', 'dl', 2, '', 'NO', 'char', 128, 384, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(128)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'db', 1, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'name', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'type', 3, NULL, 'NO', 'enum', 9, 27, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''FUNCTION'',''PROCEDURE'')', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'specific_name', 4, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'language', 5, 'SQL', 'NO', 'enum', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''SQL'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'sql_data_access', 6, 'CONTAINS_SQL', 'NO', 'enum', 17, 51, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''CONTAINS_SQL'',''NO_SQL'',''READS_SQL_DATA'',''MODIFIES_SQL_DATA'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'is_deterministic', 7, 'NO', 'NO', 'enum', 3, 9, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''YES'',''NO'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'security_type', 8, 'DEFINER', 'NO', 'enum', 7, 21, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''INVOKER'',''DEFINER'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'param_list', 9, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'returns', 10, NULL, 'NO', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'body', 11, NULL, 'NO', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'definer', 12, '', 'NO', 'char', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'created', 13, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'modified', 14, '0000-00-00 00:00:00', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'timestamp', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'sql_mode', 15, '', 'NO', 'set', 494, 1482, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(''REAL_AS_FLOAT'',''PIPES_AS_CONCAT'',''ANSI_QUOTES'',''IGNORE_SPACE'',''IGNORE_BAD_TABLE_OPTIONS'',''ONLY_FULL_GROUP_BY'',''NO_UNSIGNED_SUBTRACTION'',''NO_DIR_IN_CREATE'',''POSTGRESQL'',''ORACLE'',''MSSQL'',''DB2'',''MAXDB'',''NO_KEY_OPTIONS'',''NO_TABLE_OPTIONS'',''NO_FIELD_OPTIONS'',''MYSQL323'',''MYSQL40'',''ANSI'',''NO_AUTO_VALUE_ON_ZERO'',''NO_BACKSLASH_ESCAPES'',''STRICT_TRANS_TABLES'',''STRICT_ALL_TABLES'',''NO_ZERO_IN_DATE'',''NO_ZERO_DATE'',''INVALID_DATES'',''ERROR_FOR_DIVISION_BY_ZERO'',''TRADITIONAL'',''NO_AUTO_CREATE_USER'',''HIGH_NOT_PRECEDENCE'',''NO_ENGINE_SUBSTITUTION'',''PAD_CHAR_TO_FULL_LENGTH'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'comment', 16, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'character_set_client', 17, NULL, 'YES', 'char', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'collation_connection', 18, NULL, 'YES', 'char', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'db_collation', 19, NULL, 'YES', 'char', 32, 96, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(32)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'proc', 'body_utf8', 20, NULL, 'YES', 'longblob', 4294967295, 4294967295, NULL, NULL, NULL, NULL, NULL, 'longblob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'Host', 1, '', 'NO', 'char', 60, 180, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'Db', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'User', 3, '', 'NO', 'char', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'Routine_name', 4, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'Routine_type', 5, NULL, 'NO', 'enum', 9, 27, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'enum(''FUNCTION'',''PROCEDURE'')', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'Grantor', 6, '', 'NO', 'char', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'Proc_priv', 7, '', 'NO', 'set', 27, 81, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(''Execute'',''Alter Routine'',''Grant'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'procs_priv', 'Timestamp', 8, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Server_name', 1, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Host', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Db', 3, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Username', 4, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Password', 5, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Port', 6, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(4)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Socket', 7, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Wrapper', 8, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'servers', 'Owner', 9, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', '', '', 'select,insert,update,references', '');
INSERT INTO `COLUMNS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `COLUMN_NAME`, `ORDINAL_POSITION`, `COLUMN_DEFAULT`, `IS_NULLABLE`, `DATA_TYPE`, `CHARACTER_MAXIMUM_LENGTH`, `CHARACTER_OCTET_LENGTH`, `NUMERIC_PRECISION`, `NUMERIC_SCALE`, `DATETIME_PRECISION`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `COLUMN_TYPE`, `COLUMN_KEY`, `EXTRA`, `PRIVILEGES`, `COLUMN_COMMENT`) VALUES
(NULL, 'mysql', 'slow_log', 'start_time', 1, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 6, NULL, NULL, 'timestamp(6)', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'user_host', 2, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'query_time', 3, NULL, 'NO', 'time', NULL, NULL, NULL, NULL, 6, NULL, NULL, 'time(6)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'lock_time', 4, NULL, 'NO', 'time', NULL, NULL, NULL, NULL, 6, NULL, NULL, 'time(6)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'rows_sent', 5, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'rows_examined', 6, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'db', 7, NULL, 'NO', 'varchar', 512, 1536, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'varchar(512)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'last_insert_id', 8, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'insert_id', 9, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'server_id', 10, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'slow_log', 'sql_text', 11, NULL, 'NO', 'mediumtext', 16777215, 16777215, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'mediumtext', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'Host', 1, '', 'NO', 'char', 60, 180, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'Db', 2, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'User', 3, '', 'NO', 'char', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'Table_name', 4, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'Grantor', 5, '', 'NO', 'char', 77, 231, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(77)', 'MUL', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'Timestamp', 6, 'CURRENT_TIMESTAMP', 'NO', 'timestamp', NULL, NULL, NULL, NULL, 0, NULL, NULL, 'timestamp', '', 'on update CURRENT_TIMESTAMP', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'Table_priv', 7, '', 'NO', 'set', 98, 294, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(''Select'',''Insert'',''Update'',''Delete'',''Create'',''Drop'',''Grant'',''References'',''Index'',''Alter'',''Create View'',''Show view'',''Trigger'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'tables_priv', 'Column_priv', 8, '', 'NO', 'set', 31, 93, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'set(''Select'',''Insert'',''Update'',''References'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone', 'Time_zone_id', 1, NULL, 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', 'auto_increment', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone', 'Use_leap_seconds', 2, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''Y'',''N'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_leap_second', 'Transition_time', 1, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(20)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_leap_second', 'Correction', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_name', 'Name', 1, '', 'NO', 'char', 64, 192, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(64)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_name', 'Time_zone_id', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition', 'Time_zone_id', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition', 'Transition_time', 2, '0', 'NO', 'bigint', NULL, NULL, 19, 0, NULL, NULL, NULL, 'bigint(20)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition', 'Transition_type_id', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition_type', 'Time_zone_id', 1, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition_type', 'Transition_type_id', 2, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(10) unsigned', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition_type', 'Offset', 3, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition_type', 'Is_DST', 4, '0', 'NO', 'tinyint', NULL, NULL, 3, 0, NULL, NULL, NULL, 'tinyint(3) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'time_zone_transition_type', 'Abbreviation', 5, '', 'NO', 'char', 8, 24, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'char(8)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Host', 1, '', 'NO', 'char', 60, 180, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(60)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'User', 2, '', 'NO', 'char', 16, 48, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'char(16)', 'PRI', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Password', 3, '', 'NO', 'char', 41, 41, NULL, NULL, NULL, 'latin1', 'latin1_bin', 'char(41)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Select_priv', 4, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Insert_priv', 5, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Update_priv', 6, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Delete_priv', 7, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Create_priv', 8, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Drop_priv', 9, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Reload_priv', 10, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Shutdown_priv', 11, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Process_priv', 12, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'File_priv', 13, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Grant_priv', 14, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'References_priv', 15, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Index_priv', 16, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Alter_priv', 17, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Show_db_priv', 18, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Super_priv', 19, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Create_tmp_table_priv', 20, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Lock_tables_priv', 21, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Execute_priv', 22, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Repl_slave_priv', 23, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Repl_client_priv', 24, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Create_view_priv', 25, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Show_view_priv', 26, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Create_routine_priv', 27, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Alter_routine_priv', 28, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Create_user_priv', 29, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Event_priv', 30, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'Trigger_priv', 31, 'N', 'NO', 'enum', 1, 3, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum(''N'',''Y'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'ssl_type', 32, '', 'NO', 'enum', 9, 27, NULL, NULL, NULL, 'utf8', 'utf8_general_ci', 'enum('''',''ANY'',''X509'',''SPECIFIED'')', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'ssl_cipher', 33, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'x509_issuer', 34, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'x509_subject', 35, NULL, 'NO', 'blob', 65535, 65535, NULL, NULL, NULL, NULL, NULL, 'blob', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'max_questions', 36, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'max_updates', 37, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'max_connections', 38, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11) unsigned', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'max_user_connections', 39, '0', 'NO', 'int', NULL, NULL, 10, 0, NULL, NULL, NULL, 'int(11)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'plugin', 40, '', 'NO', 'char', 60, 60, NULL, NULL, NULL, 'latin1', 'latin1_swedish_ci', 'char(60)', '', '', 'select,insert,update,references', ''),
(NULL, 'mysql', 'user', 'auth_string', 41, NULL, 'NO', 'text', 65535, 65535, NULL, NULL, NULL, 'utf8', 'utf8_bin', 'text', '', '', 'select,insert,update,references', '');

-- --------------------------------------------------------

--
-- Table structure for table `COLUMN_PRIVILEGES`
--

CREATE TEMPORARY TABLE `COLUMN_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `ENGINES`
--

CREATE TEMPORARY TABLE `ENGINES` (
  `ENGINE` varchar(64) NOT NULL DEFAULT '',
  `SUPPORT` varchar(8) NOT NULL DEFAULT '',
  `COMMENT` varchar(160) NOT NULL DEFAULT '',
  `TRANSACTIONS` varchar(3) DEFAULT NULL,
  `XA` varchar(3) DEFAULT NULL,
  `SAVEPOINTS` varchar(3) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `ENGINES`
--

INSERT INTO `ENGINES` (`ENGINE`, `SUPPORT`, `COMMENT`, `TRANSACTIONS`, `XA`, `SAVEPOINTS`) VALUES
('MyISAM', 'DEFAULT', 'Default engine as of MySQL 3.23 with great performance', 'NO', 'NO', 'NO'),
('MRG_MYISAM', 'YES', 'Collection of identical MyISAM tables', 'NO', 'NO', 'NO'),
('CSV', 'YES', 'CSV storage engine', 'NO', 'NO', 'NO'),
('MEMORY', 'YES', 'Hash based, stored in memory, useful for temporary tables', 'NO', 'NO', 'NO'),
('Aria', 'YES', 'Crash-safe tables with MyISAM heritage', 'NO', 'NO', 'NO');

-- --------------------------------------------------------

--
-- Table structure for table `EVENTS`
--

CREATE TEMPORARY TABLE `EVENTS` (
  `EVENT_CATALOG` varchar(64) DEFAULT NULL,
  `EVENT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `EVENT_NAME` varchar(64) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `TIME_ZONE` varchar(64) NOT NULL DEFAULT '',
  `EVENT_BODY` varchar(8) NOT NULL DEFAULT '',
  `EVENT_DEFINITION` longtext NOT NULL,
  `EVENT_TYPE` varchar(9) NOT NULL DEFAULT '',
  `EXECUTE_AT` datetime DEFAULT NULL,
  `INTERVAL_VALUE` varchar(256) DEFAULT NULL,
  `INTERVAL_FIELD` varchar(18) DEFAULT NULL,
  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',
  `STARTS` datetime DEFAULT NULL,
  `ENDS` datetime DEFAULT NULL,
  `STATUS` varchar(18) NOT NULL DEFAULT '',
  `ON_COMPLETION` varchar(12) NOT NULL DEFAULT '',
  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `LAST_EXECUTED` datetime DEFAULT NULL,
  `EVENT_COMMENT` varchar(64) NOT NULL DEFAULT '',
  `ORIGINATOR` bigint(10) NOT NULL DEFAULT '0',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',
  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- --------------------------------------------------------

--
-- Table structure for table `FILES`
--

CREATE TEMPORARY TABLE `FILES` (
  `FILE_ID` bigint(4) NOT NULL DEFAULT '0',
  `FILE_NAME` varchar(64) DEFAULT NULL,
  `FILE_TYPE` varchar(20) NOT NULL DEFAULT '',
  `TABLESPACE_NAME` varchar(64) DEFAULT NULL,
  `TABLE_CATALOG` varchar(64) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) DEFAULT NULL,
  `TABLE_NAME` varchar(64) DEFAULT NULL,
  `LOGFILE_GROUP_NAME` varchar(64) DEFAULT NULL,
  `LOGFILE_GROUP_NUMBER` bigint(4) DEFAULT NULL,
  `ENGINE` varchar(64) NOT NULL DEFAULT '',
  `FULLTEXT_KEYS` varchar(64) DEFAULT NULL,
  `DELETED_ROWS` bigint(4) DEFAULT NULL,
  `UPDATE_COUNT` bigint(4) DEFAULT NULL,
  `FREE_EXTENTS` bigint(4) DEFAULT NULL,
  `TOTAL_EXTENTS` bigint(4) DEFAULT NULL,
  `EXTENT_SIZE` bigint(4) NOT NULL DEFAULT '0',
  `INITIAL_SIZE` bigint(21) unsigned DEFAULT NULL,
  `MAXIMUM_SIZE` bigint(21) unsigned DEFAULT NULL,
  `AUTOEXTEND_SIZE` bigint(21) unsigned DEFAULT NULL,
  `CREATION_TIME` datetime DEFAULT NULL,
  `LAST_UPDATE_TIME` datetime DEFAULT NULL,
  `LAST_ACCESS_TIME` datetime DEFAULT NULL,
  `RECOVER_TIME` bigint(4) DEFAULT NULL,
  `TRANSACTION_COUNTER` bigint(4) DEFAULT NULL,
  `VERSION` bigint(21) unsigned DEFAULT NULL,
  `ROW_FORMAT` varchar(10) DEFAULT NULL,
  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,
  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,
  `CREATE_TIME` datetime DEFAULT NULL,
  `UPDATE_TIME` datetime DEFAULT NULL,
  `CHECK_TIME` datetime DEFAULT NULL,
  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,
  `STATUS` varchar(20) NOT NULL DEFAULT '',
  `EXTRA` varchar(255) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `GLOBAL_STATUS`
--

CREATE TEMPORARY TABLE `GLOBAL_STATUS` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `GLOBAL_STATUS`
--

INSERT INTO `GLOBAL_STATUS` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
('ABORTED_CLIENTS', '0'),
('ABORTED_CONNECTS', '311'),
('ACCESS_DENIED_ERRORS', '26'),
('ARIA_PAGECACHE_BLOCKS_NOT_FLUSHED', '0'),
('ARIA_PAGECACHE_BLOCKS_UNUSED', '999'),
('ARIA_PAGECACHE_BLOCKS_USED', '13'),
('ARIA_PAGECACHE_READ_REQUESTS', '8700'),
('ARIA_PAGECACHE_READS', '1061'),
('ARIA_PAGECACHE_WRITE_REQUESTS', '1799'),
('ARIA_PAGECACHE_WRITES', '0'),
('ARIA_TRANSACTION_LOG_SYNCS', '0'),
('BINLOG_BYTES_WRITTEN', '0'),
('BINLOG_CACHE_DISK_USE', '0'),
('BINLOG_CACHE_USE', '0'),
('BUSY_TIME', '0.000000'),
('BYTES_RECEIVED', '513438394'),
('BYTES_SENT', '858196810'),
('COM_ADMIN_COMMANDS', '0'),
('COM_ASSIGN_TO_KEYCACHE', '0'),
('COM_ALTER_DB', '0'),
('COM_ALTER_DB_UPGRADE', '0'),
('COM_ALTER_EVENT', '0'),
('COM_ALTER_FUNCTION', '0'),
('COM_ALTER_PROCEDURE', '0'),
('COM_ALTER_SERVER', '0'),
('COM_ALTER_TABLE', '0'),
('COM_ALTER_TABLESPACE', '0'),
('COM_ANALYZE', '0'),
('COM_BACKUP_TABLE', '0'),
('COM_BEGIN', '0'),
('COM_BINLOG', '0'),
('COM_CALL_PROCEDURE', '0'),
('COM_CHANGE_DB', '811'),
('COM_CHANGE_MASTER', '0'),
('COM_CHECK', '0'),
('COM_CHECKSUM', '0'),
('COM_COMMIT', '0'),
('COM_CREATE_DB', '5'),
('COM_CREATE_EVENT', '0'),
('COM_CREATE_FUNCTION', '0'),
('COM_CREATE_INDEX', '0'),
('COM_CREATE_PROCEDURE', '0'),
('COM_CREATE_SERVER', '0'),
('COM_CREATE_TABLE', '400'),
('COM_CREATE_TRIGGER', '0'),
('COM_CREATE_UDF', '0'),
('COM_CREATE_USER', '0'),
('COM_CREATE_VIEW', '0'),
('COM_DEALLOC_SQL', '0'),
('COM_DELETE', '5'),
('COM_DELETE_MULTI', '1'),
('COM_DO', '0'),
('COM_DROP_DB', '4'),
('COM_DROP_EVENT', '0'),
('COM_DROP_FUNCTION', '0'),
('COM_DROP_INDEX', '0'),
('COM_DROP_PROCEDURE', '0'),
('COM_DROP_SERVER', '0'),
('COM_DROP_TABLE', '448'),
('COM_DROP_TRIGGER', '0'),
('COM_DROP_USER', '0'),
('COM_DROP_VIEW', '0'),
('COM_EMPTY_QUERY', '19'),
('COM_EXECUTE_SQL', '0'),
('COM_FLUSH', '2'),
('COM_GRANT', '1'),
('COM_HA_CLOSE', '0'),
('COM_HA_OPEN', '0'),
('COM_HA_READ', '0'),
('COM_HELP', '0'),
('COM_INSERT', '253183'),
('COM_INSERT_SELECT', '0'),
('COM_INSTALL_PLUGIN', '0'),
('COM_KILL', '0'),
('COM_LOAD', '0'),
('COM_LOAD_MASTER_DATA', '0'),
('COM_LOAD_MASTER_TABLE', '0'),
('COM_LOCK_TABLES', '0'),
('COM_OPTIMIZE', '0'),
('COM_PRELOAD_KEYS', '0'),
('COM_PREPARE_SQL', '0'),
('COM_PURGE', '0'),
('COM_PURGE_BEFORE_DATE', '0'),
('COM_RELEASE_SAVEPOINT', '0'),
('COM_RENAME_TABLE', '21'),
('COM_RENAME_USER', '0'),
('COM_REPAIR', '0'),
('COM_REPLACE', '0'),
('COM_REPLACE_SELECT', '0'),
('COM_RESET', '0'),
('COM_RESTORE_TABLE', '0'),
('COM_REVOKE', '0'),
('COM_REVOKE_ALL', '0'),
('COM_ROLLBACK', '0'),
('COM_ROLLBACK_TO_SAVEPOINT', '0'),
('COM_SAVEPOINT', '0'),
('COM_SELECT', '4693358'),
('COM_SET_OPTION', '1453'),
('COM_SHOW_AUTHORS', '0'),
('COM_SHOW_BINLOG_EVENTS', '0'),
('COM_SHOW_BINLOGS', '60'),
('COM_SHOW_CHARSETS', '0'),
('COM_SHOW_CLIENT_STATISTICS', '0'),
('COM_SHOW_COLLATIONS', '0'),
('COM_SHOW_COLUMN_TYPES', '0'),
('COM_SHOW_CONTRIBUTORS', '0'),
('COM_SHOW_CREATE_DB', '0'),
('COM_SHOW_CREATE_EVENT', '0'),
('COM_SHOW_CREATE_FUNC', '0'),
('COM_SHOW_CREATE_PROC', '0'),
('COM_SHOW_CREATE_TABLE', '209'),
('COM_SHOW_CREATE_TRIGGER', '0'),
('COM_SHOW_DATABASES', '174'),
('COM_SHOW_ENGINE_LOGS', '0'),
('COM_SHOW_ENGINE_MUTEX', '0'),
('COM_SHOW_ENGINE_STATUS', '0'),
('COM_SHOW_EVENTS', '0'),
('COM_SHOW_ERRORS', '0'),
('COM_SHOW_FIELDS', '225'),
('COM_SHOW_FUNCTION_STATUS', '5'),
('COM_SHOW_GRANTS', '22'),
('COM_SHOW_KEYS', '140'),
('COM_SHOW_INDEX_STATISTICS', '0'),
('COM_SHOW_MASTER_STATUS', '61'),
('COM_SHOW_NEW_MASTER', '0'),
('COM_SHOW_OPEN_TABLES', '0'),
('COM_SHOW_PLUGINS', '669'),
('COM_SHOW_PRIVILEGES', '0'),
('COM_SHOW_PROCEDURE_STATUS', '5'),
('COM_SHOW_PROCESSLIST', '0'),
('COM_SHOW_PROFILE', '0'),
('COM_SHOW_PROFILES', '0'),
('COM_SHOW_SLAVE_HOSTS', '0'),
('COM_SHOW_SLAVE_STATUS', '61'),
('COM_SHOW_STATUS', '0'),
('COM_SHOW_STORAGE_ENGINES', '0'),
('COM_SHOW_TABLE_STATISTICS', '0'),
('COM_SHOW_TABLE_STATUS', '599'),
('COM_SHOW_TABLES', '284'),
('COM_SHOW_TRIGGERS', '66'),
('COM_SHOW_USER_STATISTICS', '0'),
('COM_SHOW_VARIABLES', '5688'),
('COM_SHOW_WARNINGS', '0'),
('COM_SLAVE_START', '0'),
('COM_SLAVE_STOP', '0'),
('COM_STMT_CLOSE', '0'),
('COM_STMT_EXECUTE', '0'),
('COM_STMT_FETCH', '0'),
('COM_STMT_PREPARE', '0'),
('COM_STMT_REPREPARE', '0'),
('COM_STMT_RESET', '0'),
('COM_STMT_SEND_LONG_DATA', '0'),
('COM_TRUNCATE', '0'),
('COM_UNINSTALL_PLUGIN', '0'),
('COM_UNLOCK_TABLES', '0'),
('COM_UPDATE', '3'),
('COM_UPDATE_MULTI', '0'),
('COM_XA_COMMIT', '0'),
('COM_XA_END', '0'),
('COM_XA_PREPARE', '0'),
('COM_XA_RECOVER', '0'),
('COM_XA_ROLLBACK', '0'),
('COM_XA_START', '0'),
('COMPRESSION', 'OFF'),
('CONNECTIONS', '2215'),
('CPU_TIME', '0.000000'),
('CREATED_TMP_DISK_TABLES', '1078'),
('CREATED_TMP_FILES', '0'),
('CREATED_TMP_TABLES', '8059'),
('DELAYED_ERRORS', '0'),
('DELAYED_INSERT_THREADS', '0'),
('DELAYED_WRITES', '0'),
('EMPTY_QUERIES', '4685362'),
('FLUSH_COMMANDS', '1'),
('HANDLER_COMMIT', '0'),
('HANDLER_DELETE', '1599'),
('HANDLER_DISCOVER', '0'),
('HANDLER_ICP_ATTEMPTS ', '0'),
('HANDLER_ICP_MATCH', '0'),
('HANDLER_MRR_INIT', '0'),
('HANDLER_MRR_KEY_REFILLS', '0'),
('HANDLER_MRR_ROWID_REFILLS', '0'),
('HANDLER_PREPARE', '0'),
('HANDLER_READ_FIRST', '62'),
('HANDLER_READ_KEY', '4696298'),
('HANDLER_READ_NEXT', '8768'),
('HANDLER_READ_PREV', '0'),
('HANDLER_READ_RND', '1596'),
('HANDLER_READ_RND_DELETED', '3194'),
('HANDLER_READ_RND_NEXT', '96762'),
('HANDLER_ROLLBACK', '0'),
('HANDLER_SAVEPOINT', '0'),
('HANDLER_SAVEPOINT_ROLLBACK', '0'),
('HANDLER_TMP_UPDATE', '0'),
('HANDLER_TMP_WRITE', '21135'),
('HANDLER_UPDATE', '4'),
('HANDLER_WRITE', '252955'),
('KEY_BLOCKS_NOT_FLUSHED', '0'),
('KEY_BLOCKS_UNUSED', '14197'),
('KEY_BLOCKS_USED', '726'),
('KEY_BLOCKS_WARM', '3'),
('KEY_READ_REQUESTS', '10884368'),
('KEY_READS', '73'),
('KEY_WRITE_REQUESTS', '821969'),
('KEY_WRITES', '815668'),
('LAST_QUERY_COST', '0.000000'),
('MAX_USED_CONNECTIONS', '4'),
('NOT_FLUSHED_DELAYED_ROWS', '0'),
('OPEN_FILES', '44'),
('OPEN_STREAMS', '0'),
('OPEN_TABLE_DEFINITIONS', '34'),
('OPEN_TABLES', '21'),
('OPENED_FILES', '7633'),
('OPENED_TABLE_DEFINITIONS', '834'),
('OPENED_TABLES', '872'),
('PREPARED_STMT_COUNT', '0'),
('QCACHE_FREE_BLOCKS', '0'),
('QCACHE_FREE_MEMORY', '0'),
('QCACHE_HITS', '0'),
('QCACHE_INSERTS', '0'),
('QCACHE_LOWMEM_PRUNES', '0'),
('QCACHE_NOT_CACHED', '0'),
('QCACHE_QUERIES_IN_CACHE', '0'),
('QCACHE_TOTAL_BLOCKS', '0'),
('QUERIES', '4963841'),
('QUESTIONS', '4963841'),
('ROWS_READ', '86427'),
('ROWS_SENT', '93125'),
('ROWS_TMP_READ', '21137'),
('RPL_STATUS', 'NULL'),
('SELECT_FULL_JOIN', '0'),
('SELECT_FULL_RANGE_JOIN', '0'),
('SELECT_RANGE', '0'),
('SELECT_RANGE_CHECK', '0'),
('SELECT_SCAN', '9014'),
('SLAVE_OPEN_TEMP_TABLES', '0'),
('SLAVE_RETRIED_TRANSACTIONS', '0'),
('SLAVE_RUNNING', 'OFF'),
('SLOW_LAUNCH_THREADS', '0'),
('SLOW_QUERIES', '0'),
('SORT_MERGE_PASSES', '0'),
('SORT_RANGE', '0'),
('SORT_ROWS', '1757'),
('SORT_SCAN', '13'),
('SUBQUERY_CACHE_HIT', '0'),
('SUBQUERY_CACHE_MISS', '0'),
('SYNCS', '403'),
('TABLE_LOCKS_IMMEDIATE', '4946439'),
('TABLE_LOCKS_WAITED', '0'),
('TC_LOG_MAX_PAGES_USED', '0'),
('TC_LOG_PAGE_SIZE', '0'),
('TC_LOG_PAGE_WAITS', '0'),
('THREADS_CACHED', '0'),
('THREADS_CONNECTED', '1'),
('THREADS_CREATED', '2214'),
('THREADS_RUNNING', '1'),
('UPTIME', '1027549'),
('UPTIME_SINCE_FLUSH_STATUS', '1027549'),
('BINLOG_COMMITS', '0'),
('BINLOG_GROUP_COMMITS', '0'),
('BINLOG_SNAPSHOT_FILE', ''),
('BINLOG_SNAPSHOT_POSITION', '0');

-- --------------------------------------------------------

--
-- Table structure for table `GLOBAL_VARIABLES`
--

CREATE TEMPORARY TABLE `GLOBAL_VARIABLES` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `GLOBAL_VARIABLES`
--

INSERT INTO `GLOBAL_VARIABLES` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
('MAX_PREPARED_STMT_COUNT', '16382'),
('COMPLETION_TYPE', '0'),
('HAVE_CRYPT', 'YES'),
('AUTO_INCREMENT_OFFSET', '1'),
('MYISAM_REPAIR_THREADS', '1'),
('AUTOMATIC_SP_PRIVILEGES', 'ON'),
('LARGE_PAGES', 'OFF'),
('BINLOG_ANNOTATE_ROW_EVENTS', 'OFF'),
('COLLATION_DATABASE', 'latin1_swedish_ci'),
('BINLOG_CACHE_SIZE', '32768'),
('IN_TRANSACTION', 'OFF'),
('TABLE_OPEN_CACHE', '64'),
('DELAYED_INSERT_TIMEOUT', '300'),
('BACK_LOG', '50'),
('LOG_BIN_TRUST_ROUTINE_CREATORS', 'OFF'),
('JOIN_CACHE_LEVEL', '2'),
('OLD_PASSWORDS', 'OFF'),
('AUTO_INCREMENT_INCREMENT', '1'),
('BASEDIR', '/'),
('CHARACTER_SETS_DIR', '/usr/local/share/mysql/charsets/'),
('UPDATABLE_VIEWS_WITH_LIMIT', 'YES'),
('BINLOG_DIRECT_NON_TRANSACTIONAL_UPDATES', 'OFF'),
('SLOW_LAUNCH_TIME', '2'),
('CHARACTER_SET_RESULTS', 'latin1'),
('MAX_SEEKS_FOR_KEY', '4294967295'),
('OPEN_FILES_LIMIT', '11095'),
('RELAY_LOG_INDEX', ''),
('JOIN_BUFFER_SIZE', '131072'),
('SQL_QUOTE_SHOW_CREATE', 'ON'),
('CHARACTER_SET_CONNECTION', 'latin1'),
('SQL_LOG_UPDATE', 'ON'),
('EVENT_SCHEDULER', 'OFF'),
('WAIT_TIMEOUT', '28800'),
('LANGUAGE', '/usr/local/share/mysql/english/'),
('LOCKED_IN_MEMORY', 'OFF'),
('DEADLOCK_TIMEOUT_LONG', '50000000'),
('SKIP_NAME_RESOLVE', 'OFF'),
('CONCURRENT_INSERT', '1'),
('REPORT_HOST', ''),
('DELAYED_QUEUE_SIZE', '1000'),
('SSL_KEY', ''),
('FT_MAX_WORD_LEN', '84'),
('PID_FILE', '/mysqld.pid'),
('DEADLOCK_SEARCH_DEPTH_SHORT', '4'),
('SLAVE_SKIP_ERRORS', 'OFF'),
('DIV_PRECISION_INCREMENT', '4'),
('INSERT_ID', '0'),
('VERSION_COMPILE_MACHINE', 'i386'),
('RELAY_LOG_PURGE', 'ON'),
('INTERACTIVE_TIMEOUT', '28800'),
('SKIP_SHOW_DATABASE', 'OFF'),
('FT_QUERY_EXPANSION_LIMIT', '20'),
('GROUP_CONCAT_MAX_LEN', '1024'),
('NET_BUFFER_LENGTH', '8192'),
('RANGE_ALLOC_BLOCK_SIZE', '4096'),
('MAX_WRITE_LOCK_COUNT', '4294967295'),
('SYSTEM_TIME_ZONE', 'UTC'),
('FT_MIN_WORD_LEN', '4'),
('LOG_SLOW_QUERIES', 'OFF'),
('DELAYED_INSERT_LIMIT', '100'),
('TRANSACTION_PREALLOC_SIZE', '4096'),
('FLUSH', 'OFF'),
('VERSION_COMPILE_OS', 'portbld-freebsd8.2'),
('PSEUDO_THREAD_ID', '0'),
('SQL_NOTES', 'ON'),
('CHARACTER_SET_FILESYSTEM', 'binary'),
('LOW_PRIORITY_UPDATES', 'OFF'),
('LOG_BIN', 'OFF'),
('REPORT_PASSWORD', ''),
('RELAY_LOG', ''),
('MAX_INSERT_DELAYED_THREADS', '20'),
('CONNECT_TIMEOUT', '10'),
('HAVE_COMPRESS', 'YES'),
('SQL_LOW_PRIORITY_UPDATES', 'OFF'),
('TRANSACTION_ALLOC_BLOCK_SIZE', '8192'),
('INIT_FILE', ''),
('THREAD_CACHE_SIZE', '0'),
('LARGE_PAGE_SIZE', '0'),
('ARIA_PAGECACHE_AGE_THRESHOLD', '300'),
('INIT_SLAVE', ''),
('MAX_CONNECT_ERRORS', '1000'),
('MAX_BINLOG_SIZE', '1073741824'),
('ARIA_PAGE_CHECKSUM', 'ON'),
('MAX_ERROR_COUNT', '64'),
('LOG_OUTPUT', 'FILE'),
('KEY_CACHE_BLOCK_SIZE', '1024'),
('MIN_EXAMINED_ROW_LIMIT', '0'),
('LOG_WARNINGS', '2'),
('PROTOCOL_VERSION', '10'),
('MAX_HEAP_TABLE_SIZE', '16777216'),
('HAVE_SYMLINK', 'YES'),
('MAX_LONG_DATA_SIZE', '4194304'),
('TIME_ZONE', 'SYSTEM'),
('PRELOAD_BUFFER_SIZE', '32768'),
('ARIA_PAGECACHE_DIVISION_LIMIT', '100'),
('LOWER_CASE_TABLE_NAMES', '0'),
('LC_TIME_NAMES', 'en_US'),
('SSL_CIPHER', ''),
('MYISAM_DATA_POINTER_SIZE', '6'),
('COLLATION_SERVER', 'latin1_swedish_ci'),
('DEADLOCK_TIMEOUT_SHORT', '10000'),
('CHARACTER_SET_SERVER', 'latin1'),
('SQL_AUTO_IS_NULL', 'ON'),
('MAX_LENGTH_FOR_SORT_DATA', '1024'),
('ARIA_USED_FOR_TEMP_TABLES', 'ON'),
('SQL_MAX_JOIN_SIZE', '18446744073709551615'),
('LARGE_FILES_SUPPORT', 'ON'),
('LOG_QUERIES_NOT_USING_INDEXES', 'OFF'),
('GENERAL_LOG', 'OFF'),
('NET_RETRY_COUNT', '1000000'),
('ARIA_SYNC_LOG_DIR', 'NEWFILE'),
('FT_STOPWORD_FILE', '(built-in)'),
('QUERY_CACHE_MIN_RES_UNIT', '4096'),
('DELAY_KEY_WRITE', 'ON'),
('SORT_BUFFER_SIZE', '524288'),
('NET_WRITE_TIMEOUT', '60'),
('ARIA_GROUP_COMMIT_INTERVAL', '0'),
('LONG_QUERY_TIME', '10.000000'),
('PROFILING_HISTORY_SIZE', '15'),
('LOWER_CASE_FILE_SYSTEM', 'OFF'),
('ARIA_REPAIR_THREADS', '1'),
('HAVE_GEOMETRY', 'YES'),
('READ_RND_BUFFER_SIZE', '262144'),
('SSL_CA', ''),
('BINLOG_OPTIMIZE_THREAD_SCHEDULING', 'ON'),
('IGNORE_BUILTIN_INNODB', 'OFF'),
('ARIA_LOG_FILE_SIZE', '20971520'),
('JOIN_BUFFER_SPACE_LIMIT', '2097152'),
('SQL_SELECT_LIMIT', '18446744073709551615'),
('BULK_INSERT_BUFFER_SIZE', '8388608'),
('ARIA_STATS_METHOD', 'nulls_unequal'),
('MYISAM_STATS_METHOD', 'nulls_unequal'),
('READ_ONLY', 'OFF'),
('OPTIMIZER_SWITCH', 'index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=off,table_elimination=on'),
('RAND_SEED1', ''),
('MAX_BINLOG_CACHE_SIZE', '4294963200'),
('PLUGIN_MATURITY', 'unknown'),
('READ_BUFFER_SIZE', '131072'),
('KEY_CACHE_AGE_THRESHOLD', '300'),
('MAX_SORT_LENGTH', '1024'),
('PROFILING', 'OFF'),
('MRR_BUFFER_SIZE', '262144'),
('ARIA_PAGECACHE_BUFFER_SIZE', '8388608'),
('MYISAM_MAX_SORT_FILE_SIZE', '2146435072'),
('KEY_CACHE_DIVISION_LIMIT', '100'),
('FLUSH_TIME', '0'),
('GENERAL_LOG_FILE', '/mysqld.log'),
('QUERY_PREALLOC_SIZE', '8192'),
('SECURE_AUTH', 'OFF'),
('ERROR_COUNT', '0'),
('LOG_SLOW_VERBOSITY', ''),
('MYISAM_USE_MMAP', 'OFF'),
('TMPDIR', '/tmp'),
('QUERY_CACHE_LIMIT', '1048576'),
('EXPIRE_LOGS_DAYS', '0'),
('SQL_WARNINGS', 'OFF'),
('ARIA_RECOVER', 'NORMAL'),
('QUERY_CACHE_SIZE', '0'),
('FOREIGN_KEY_CHECKS', 'ON'),
('SQL_BIG_SELECTS', 'ON'),
('ARIA_LOG_PURGE_TYPE', 'immediate'),
('KEY_CACHE_SEGMENTS', '0'),
('SLAVE_LOAD_TMPDIR', '/tmp'),
('MYISAM_SORT_BUFFER_SIZE', '8388608'),
('ROWID_MERGE_BUFF_SIZE', '8388608'),
('SSL_CERT', ''),
('MAX_TMP_TABLES', '32'),
('BIG_TABLES', 'OFF'),
('UNIQUE_CHECKS', 'ON'),
('QUERY_ALLOC_BLOCK_SIZE', '8192'),
('VERSION', '5.3.7-MariaDB'),
('QUERY_CACHE_TYPE', 'ON'),
('SOCKET', '/mysql.sock'),
('SQL_BUFFER_RESULT', 'OFF'),
('LOG_SLOW_FILTER', ''),
('REPORT_PORT', '3306'),
('COLLATION_CONNECTION', 'latin1_swedish_ci'),
('SSL_CAPATH', ''),
('HAVE_QUERY_CACHE', 'YES'),
('VERSION_COMMENT', 'Source distribution'),
('SLAVE_SQL_VERIFY_CHECKSUM', 'ON'),
('USERSTAT', 'OFF'),
('EXTRA_PORT', '0'),
('OPTIMIZER_PRUNE_LEVEL', '1'),
('ARIA_BLOCK_SIZE', '8192'),
('QUERY_CACHE_WLOCK_INVALIDATE', 'OFF'),
('DATADIR', '/var/'),
('QUERY_CACHE_STRIP_COMMENTS', 'OFF'),
('SQL_LOG_OFF', 'OFF'),
('TIMED_MUTEXES', 'OFF'),
('DATE_FORMAT', '%Y-%m-%d'),
('PROGRESS_REPORT_TIME', '5'),
('SQL_SLAVE_SKIP_COUNTER', ''),
('THREAD_POOL_SIZE', '20'),
('TIME_FORMAT', '%H:%i:%s'),
('SERVER_ID', '0'),
('MAX_ALLOWED_PACKET', '4194304'),
('SKIP_NETWORKING', 'OFF'),
('STORAGE_ENGINE', 'MyISAM'),
('CHARACTER_SET_SYSTEM', 'utf8'),
('REPLICATE_ANNOTATE_ROW_EVENTS', 'OFF'),
('INIT_CONNECT', ''),
('HAVE_DYNAMIC_LOADING', 'YES'),
('OPTIMIZER_SEARCH_DEPTH', '62'),
('SYNC_BINLOG', '0'),
('AUTOCOMMIT', 'ON'),
('RELAY_LOG_SPACE_LIMIT', '0'),
('MAX_SP_RECURSION_DEPTH', '0'),
('LOG_SLAVE_UPDATES', 'OFF'),
('THREAD_HANDLING', 'one-thread-per-connection'),
('OLD', 'OFF'),
('TMP_TABLE_SIZE', '16777216'),
('HAVE_SSL', 'NO'),
('TABLE_LOCK_WAIT_TIMEOUT', '50'),
('LAST_INSERT_ID', '0'),
('FT_BOOLEAN_SYNTAX', '+ -><()~*:""&|'),
('KEY_BUFFER_SIZE', '16777216'),
('CHARACTER_SET_CLIENT', 'latin1'),
('HAVE_NDBCLUSTER', 'NO'),
('SQL_BIG_TABLES', 'OFF'),
('LOG_ERROR', ''),
('HOSTNAME', 'm9'),
('SLOW_QUERY_LOG', 'OFF'),
('CHARACTER_SET_DATABASE', 'latin1'),
('SLOW_QUERY_LOG_FILE', '/mysqld-slow.log'),
('DEADLOCK_SEARCH_DEPTH_LONG', '15'),
('LOG_SLOW_RATE_LIMIT', '1'),
('SQL_MODE', ''),
('ARIA_SORT_BUFFER_SIZE', '8388608'),
('MAX_USER_CONNECTIONS', '0'),
('ARIA_GROUP_COMMIT', 'none'),
('SLAVE_EXEC_MODE', 'STRICT'),
('PLUGIN_DIR', '/usr/lib/'),
('MYISAM_BLOCK_SIZE', '1024'),
('LOCAL_INFILE', 'ON'),
('NEW', 'OFF'),
('HAVE_RTREE_KEYS', 'YES'),
('SECURE_FILE_PRIV', ''),
('BINLOG_FORMAT', 'STATEMENT'),
('KEEP_FILES_ON_CREATE', 'OFF'),
('BINLOG_CHECKSUM', 'NONE'),
('HAVE_COMMUNITY_FEATURES', 'YES'),
('MYISAM_MMAP_SIZE', '4294967295'),
('ENGINE_CONDITION_PUSHDOWN', 'ON'),
('EXTRA_MAX_CONNECTIONS', '1'),
('SQL_LOG_BIN', 'ON'),
('TIMESTAMP', '1345485710.740608'),
('MAX_CONNECTIONS', '48'),
('MAX_DELAYED_THREADS', '20'),
('NET_READ_TIMEOUT', '30'),
('ARIA_CHECKPOINT_LOG_ACTIVITY', '1048576'),
('HAVE_CSV', 'YES'),
('WARNING_COUNT', '0'),
('HAVE_INNODB', 'NO'),
('MAX_RELAY_LOG_SIZE', '0'),
('THREAD_STACK', '294912'),
('ARIA_CHECKPOINT_INTERVAL', '30'),
('LOG_BASENAME', ''),
('SLAVE_COMPRESSED_PROTOCOL', 'OFF'),
('REPORT_USER', ''),
('PORT', '22831'),
('LOG', 'OFF'),
('LOG_SLOW_TIME', '10.000000'),
('TX_ISOLATION', 'REPEATABLE-READ'),
('LOG_BIN_TRUST_FUNCTION_CREATORS', 'OFF'),
('MYISAM_RECOVER_OPTIONS', 'DEFAULT'),
('ARIA_FORCE_START_AFTER_RECOVERY_FAILURES', '0'),
('OLD_ALTER_TABLE', 'OFF'),
('HAVE_OPENSSL', 'NO'),
('LICENSE', 'GPL'),
('DATETIME_FORMAT', '%Y-%m-%d %H:%i:%s'),
('MASTER_VERIFY_CHECKSUM', 'OFF'),
('SLAVE_NET_TIMEOUT', '3600'),
('MAX_JOIN_SIZE', '18446744073709551615'),
('IDENTITY', '0'),
('RELAY_LOG_INFO_FILE', 'relay-log.info'),
('SLAVE_TRANSACTION_RETRIES', '10'),
('DEFAULT_WEEK_FORMAT', '0'),
('SYNC_FRM', 'ON'),
('TABLE_DEFINITION_CACHE', '256'),
('RAND_SEED2', ''),
('HAVE_PARTITIONING', 'NO'),
('SQL_SAFE_UPDATES', 'OFF'),
('SKIP_EXTERNAL_LOCKING', 'ON'),
('RPL_RECOVERY_RANK', '0'),
('TABLE_TYPE', 'MyISAM'),
('ARIA_MAX_SORT_FILE_SIZE', '9223372036853727232');

-- --------------------------------------------------------

--
-- Table structure for table `INDEX_STATISTICS`
--

CREATE TEMPORARY TABLE `INDEX_STATISTICS` (
  `TABLE_SCHEMA` varchar(192) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(192) NOT NULL DEFAULT '',
  `INDEX_NAME` varchar(192) NOT NULL DEFAULT '',
  `ROWS_READ` bigint(21) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `KEY_CACHES`
--

CREATE TEMPORARY TABLE `KEY_CACHES` (
  `KEY_CACHE_NAME` varchar(192) NOT NULL DEFAULT '',
  `SEGMENTS` int(3) unsigned DEFAULT NULL,
  `SEGMENT_NUMBER` int(3) unsigned DEFAULT NULL,
  `FULL_SIZE` bigint(21) unsigned NOT NULL DEFAULT '0',
  `BLOCK_SIZE` bigint(21) unsigned NOT NULL DEFAULT '0',
  `USED_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `UNUSED_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `DIRTY_BLOCKS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `READ_REQUESTS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `READS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `WRITE_REQUESTS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `WRITES` bigint(21) unsigned NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `KEY_CACHES`
--

INSERT INTO `KEY_CACHES` (`KEY_CACHE_NAME`, `SEGMENTS`, `SEGMENT_NUMBER`, `FULL_SIZE`, `BLOCK_SIZE`, `USED_BLOCKS`, `UNUSED_BLOCKS`, `DIRTY_BLOCKS`, `READ_REQUESTS`, `READS`, `WRITE_REQUESTS`, `WRITES`) VALUES
('default', NULL, NULL, 16777216, 1024, 726, 14197, 0, 10884368, 73, 821969, 815668);

-- --------------------------------------------------------

--
-- Table structure for table `KEY_COLUMN_USAGE`
--

CREATE TEMPORARY TABLE `KEY_COLUMN_USAGE` (
  `CONSTRAINT_CATALOG` varchar(512) DEFAULT NULL,
  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `ORDINAL_POSITION` bigint(10) NOT NULL DEFAULT '0',
  `POSITION_IN_UNIQUE_CONSTRAINT` bigint(10) DEFAULT NULL,
  `REFERENCED_TABLE_SCHEMA` varchar(64) DEFAULT NULL,
  `REFERENCED_TABLE_NAME` varchar(64) DEFAULT NULL,
  `REFERENCED_COLUMN_NAME` varchar(64) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `KEY_COLUMN_USAGE`
--

INSERT INTO `KEY_COLUMN_USAGE` (`CONSTRAINT_CATALOG`, `CONSTRAINT_SCHEMA`, `CONSTRAINT_NAME`, `TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `COLUMN_NAME`, `ORDINAL_POSITION`, `POSITION_IN_UNIQUE_CONSTRAINT`, `REFERENCED_TABLE_SCHEMA`, `REFERENCED_TABLE_NAME`, `REFERENCED_COLUMN_NAME`) VALUES
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'directory_owner', 'directoryOwnerID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'directory', NULL, 'ecnitdb', 'directory_owner', 'directory', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'directory', NULL, 'ecnitdb', 'directory_owner', 'owner_position', 2, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'directory_owners', 'directoryOwnerID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'directory', NULL, 'ecnitdb', 'directory_owners', 'directory', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'directory', NULL, 'ecnitdb', 'directory_owners', 'owner_position', 2, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'distribution_groups', 'distributionGroupID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'dgName', NULL, 'ecnitdb', 'distribution_groups', 'dgName', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'divisions', 'divisionID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'name', NULL, 'ecnitdb', 'divisions', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'edit_permissions', 'editPermissionID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'position', NULL, 'ecnitdb', 'edit_permissions', 'position', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'position', NULL, 'ecnitdb', 'edit_permissions', 'directory', 2, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'positions', 'positionID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'title', NULL, 'ecnitdb', 'positions', 'title', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'title', NULL, 'ecnitdb', 'positions', 'division', 2, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'title', NULL, 'ecnitdb', 'positions', 'school_department', 3, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'read_permissions', 'readPermissionID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'position', NULL, 'ecnitdb', 'read_permissions', 'position', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'position', NULL, 'ecnitdb', 'read_permissions', 'directory', 2, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'receive_dg', 'receiveDGID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'distributionGroup', NULL, 'ecnitdb', 'receive_dg', 'distributionGroup', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'distributionGroup', NULL, 'ecnitdb', 'receive_dg', 'position', 2, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'schools_departments', 'schoolDepartmentID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'name', NULL, 'ecnitdb', 'schools_departments', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'abbreviation', NULL, 'ecnitdb', 'schools_departments', 'abbreviation', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'send_to_dg', 'sendToDGID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'distributionGroup', NULL, 'ecnitdb', 'send_to_dg', 'distributionGroup', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'distributionGroup', NULL, 'ecnitdb', 'send_to_dg', 'position', 2, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'PRIMARY', NULL, 'ecnitdb', 'source_directories', 'sourceDirectoryID', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'name', NULL, 'ecnitdb', 'source_directories', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'ecnitdb', 'name', NULL, 'ecnitdb', 'source_directories', 'parent', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'columns_priv', 'Host', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'columns_priv', 'Db', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'columns_priv', 'User', 3, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'columns_priv', 'Table_name', 4, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'columns_priv', 'Column_name', 5, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'db', 'Host', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'db', 'Db', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'db', 'User', 3, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'event', 'db', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'event', 'name', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'func', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'help_category', 'help_category_id', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'name', NULL, 'mysql', 'help_category', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'help_keyword', 'help_keyword_id', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'name', NULL, 'mysql', 'help_keyword', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'help_relation', 'help_keyword_id', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'help_relation', 'help_topic_id', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'help_topic', 'help_topic_id', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'name', NULL, 'mysql', 'help_topic', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'host', 'Host', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'host', 'Db', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'ndb_binlog_index', 'epoch', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'plugin', 'name', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'proc', 'db', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'proc', 'name', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'proc', 'type', 3, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'procs_priv', 'Host', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'procs_priv', 'Db', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'procs_priv', 'User', 3, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'procs_priv', 'Routine_name', 4, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'procs_priv', 'Routine_type', 5, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'servers', 'Server_name', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'tables_priv', 'Host', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'tables_priv', 'Db', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'tables_priv', 'User', 3, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'tables_priv', 'Table_name', 4, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'time_zone', 'Time_zone_id', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'time_zone_leap_second', 'Transition_time', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'time_zone_name', 'Name', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'time_zone_transition', 'Time_zone_id', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'time_zone_transition', 'Transition_time', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'time_zone_transition_type', 'Time_zone_id', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'time_zone_transition_type', 'Transition_type_id', 2, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'user', 'Host', 1, NULL, NULL, NULL, NULL),
(NULL, 'mysql', 'PRIMARY', NULL, 'mysql', 'user', 'User', 2, NULL, NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `PARTITIONS`
--

CREATE TEMPORARY TABLE `PARTITIONS` (
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `PARTITION_NAME` varchar(64) DEFAULT NULL,
  `SUBPARTITION_NAME` varchar(64) DEFAULT NULL,
  `PARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,
  `SUBPARTITION_ORDINAL_POSITION` bigint(21) unsigned DEFAULT NULL,
  `PARTITION_METHOD` varchar(12) DEFAULT NULL,
  `SUBPARTITION_METHOD` varchar(12) DEFAULT NULL,
  `PARTITION_EXPRESSION` longtext,
  `SUBPARTITION_EXPRESSION` longtext,
  `PARTITION_DESCRIPTION` longtext,
  `TABLE_ROWS` bigint(21) unsigned NOT NULL DEFAULT '0',
  `AVG_ROW_LENGTH` bigint(21) unsigned NOT NULL DEFAULT '0',
  `DATA_LENGTH` bigint(21) unsigned NOT NULL DEFAULT '0',
  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `INDEX_LENGTH` bigint(21) unsigned NOT NULL DEFAULT '0',
  `DATA_FREE` bigint(21) unsigned NOT NULL DEFAULT '0',
  `CREATE_TIME` datetime DEFAULT NULL,
  `UPDATE_TIME` datetime DEFAULT NULL,
  `CHECK_TIME` datetime DEFAULT NULL,
  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,
  `PARTITION_COMMENT` varchar(80) NOT NULL DEFAULT '',
  `NODEGROUP` varchar(12) NOT NULL DEFAULT '',
  `TABLESPACE_NAME` varchar(64) DEFAULT NULL
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

--
-- Dumping data for table `PARTITIONS`
--

INSERT INTO `PARTITIONS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `PARTITION_NAME`, `SUBPARTITION_NAME`, `PARTITION_ORDINAL_POSITION`, `SUBPARTITION_ORDINAL_POSITION`, `PARTITION_METHOD`, `SUBPARTITION_METHOD`, `PARTITION_EXPRESSION`, `SUBPARTITION_EXPRESSION`, `PARTITION_DESCRIPTION`, `TABLE_ROWS`, `AVG_ROW_LENGTH`, `DATA_LENGTH`, `MAX_DATA_LENGTH`, `INDEX_LENGTH`, `DATA_FREE`, `CREATE_TIME`, `UPDATE_TIME`, `CHECK_TIME`, `CHECKSUM`, `PARTITION_COMMENT`, `NODEGROUP`, `TABLESPACE_NAME`) VALUES
(NULL, 'information_schema', 'CHARACTER_SETS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 384, 0, 16604160, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'CLIENT_STATISTICS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 370, 0, 16687000, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'COLLATIONS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 231, 0, 16704765, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 195, 0, 16691610, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'COLUMNS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2565, 0, 16757145, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'ENGINES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 731, 0, 16753789, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'EVENTS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'FILES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2677, 0, 16758020, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'GLOBAL_STATUS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3268, 0, 16755036, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'GLOBAL_VARIABLES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3268, 0, 16755036, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'INDEX_STATISTICS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 1743, 0, 16765917, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'KEY_CACHES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 659, 0, 16751780, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 4637, 0, 16762755, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'PARTITIONS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'PLUGINS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'PROCESSLIST', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'PROFILING', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 308, 0, 16562084, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 4814, 0, 16767162, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'ROUTINES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'SCHEMATA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3464, 0, 16755368, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'SCHEMA_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2179, 0, 16767405, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'SESSION_STATUS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3268, 0, 16755036, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'SESSION_VARIABLES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3268, 0, 16755036, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'STATISTICS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2679, 0, 16770540, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'TABLES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 3545, 0, 16760760, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2504, 0, 16749256, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 2372, 0, 16748692, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'TABLE_STATISTICS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 1181, 0, 16733589, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'TRIGGERS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'USER_PRIVILEGES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 1986, 0, 16759854, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'USER_STATISTICS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 310, 0, 16669630, 0, 0, '2012-08-20 18:01:51', NULL, NULL, NULL, '', '', NULL),
(NULL, 'information_schema', 'VIEWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 8192, 68719484928, 8192, 0, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'directory_owner', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 243, 13, 3159, 3659174697238527, 14336, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'directory_owners', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 246, 13, 3198, 3659174697238527, 14336, 0, '2012-08-15 19:55:24', '2012-08-15 19:55:36', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'distribution_groups', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 53, 29, 1580, 281474976710655, 5120, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'divisions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 4, 21, 84, 281474976710655, 3072, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'edit_permissions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2202, 13, 28626, 3659174697238527, 86016, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'positions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 296, 36, 10724, 281474976710655, 19456, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'read_permissions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1241, 13, 36855, 3659174697238527, 107520, 20722, '2012-08-20 17:47:10', '2012-08-20 17:55:30', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'receive_dg', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 622, 13, 8086, 3659174697238527, 27648, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'schools_departments', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 44, 62, 2748, 281474976710655, 5120, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'send_to_dg', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 376, 13, 4888, 3659174697238527, 18432, 0, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, NULL, '', '', NULL),
(NULL, 'ecnitdb', 'source_directories', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 201, 24, 5020, 281474976710655, 13312, 64, '2012-08-20 17:47:10', '2012-08-20 18:01:27', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'columns_priv', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 227994731135631359, 4096, 0, '2012-07-29 02:04:31', '2012-07-29 02:04:31', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'db', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 880, 123848989752688639, 5120, 880, '2012-07-29 02:04:36', '2012-08-08 20:36:06', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'event', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 281474976710655, 2048, 0, '2012-07-29 02:04:36', '2012-07-29 02:04:36', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'func', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 162974011515469823, 1024, 0, '2012-07-29 02:04:33', '2012-07-29 02:04:33', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'general_log', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'help_category', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 29, 29, 868, 281474976710655, 3072, 0, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'help_keyword', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 350, 20, 7320, 281474976710655, 15360, 0, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'help_relation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 567, 9, 5103, 2533274790395903, 10240, 0, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'help_topic', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 390, 435, 169712, 281474976710655, 15360, 0, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'host', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 110056715893866495, 2048, 0, '2012-07-29 02:04:36', '2012-07-29 02:04:36', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'ndb_binlog_index', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 281474976710655, 1024, 0, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'plugin', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 162411061562048511, 1024, 0, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'proc', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 281474976710655, 2048, 0, '2012-07-29 02:04:35', '2012-07-29 02:04:35', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'procs_priv', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 239253730204057599, 4096, 0, '2012-07-29 02:04:35', '2012-07-29 02:04:35', '2012-07-29 02:04:35', NULL, '', '', NULL),
(NULL, 'mysql', 'servers', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 433752939111120895, 1024, 0, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'slow_log', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'tables_priv', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 239535205180768255, 4096, 0, '2012-07-29 02:04:31', '2012-07-29 02:04:31', '2012-07-29 02:04:31', NULL, '', '', NULL),
(NULL, 'mysql', 'time_zone', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 1970324836974591, 1024, 0, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'time_zone_leap_second', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 3659174697238527, 1024, 0, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'time_zone_name', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 55450570411999231, 1024, 0, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'time_zone_transition', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 4785074604081151, 1024, 0, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'time_zone_transition_type', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 10696049115004927, 1024, 0, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, NULL, '', '', NULL),
(NULL, 'mysql', 'user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, 90, 180, 281474976710655, 2048, 0, '2012-07-29 02:04:36', '2012-08-08 20:41:41', NULL, NULL, '', '', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `PLUGINS`
--

CREATE TEMPORARY TABLE `PLUGINS` (
  `PLUGIN_NAME` varchar(64) NOT NULL DEFAULT '',
  `PLUGIN_VERSION` varchar(20) NOT NULL DEFAULT '',
  `PLUGIN_STATUS` varchar(10) NOT NULL DEFAULT '',
  `PLUGIN_TYPE` varchar(80) NOT NULL DEFAULT '',
  `PLUGIN_TYPE_VERSION` varchar(20) NOT NULL DEFAULT '',
  `PLUGIN_LIBRARY` varchar(64) DEFAULT NULL,
  `PLUGIN_LIBRARY_VERSION` varchar(20) DEFAULT NULL,
  `PLUGIN_AUTHOR` varchar(64) DEFAULT NULL,
  `PLUGIN_DESCRIPTION` longtext,
  `PLUGIN_LICENSE` varchar(80) DEFAULT NULL,
  `PLUGIN_MATURITY` varchar(12) DEFAULT NULL,
  `PLUGIN_AUTH_VERSION` varchar(80) DEFAULT NULL
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

--
-- Dumping data for table `PLUGINS`
--

INSERT INTO `PLUGINS` (`PLUGIN_NAME`, `PLUGIN_VERSION`, `PLUGIN_STATUS`, `PLUGIN_TYPE`, `PLUGIN_TYPE_VERSION`, `PLUGIN_LIBRARY`, `PLUGIN_LIBRARY_VERSION`, `PLUGIN_AUTHOR`, `PLUGIN_DESCRIPTION`, `PLUGIN_LICENSE`, `PLUGIN_MATURITY`, `PLUGIN_AUTH_VERSION`) VALUES
('binlog', '1.0', 'ACTIVE', 'STORAGE ENGINE', '50307.0', NULL, NULL, 'MySQL AB', 'This is a pseudo storage engine to represent the binlog in a transaction', 'GPL', 'Stable', '1.0'),
('mysql_native_password', '1.0', 'ACTIVE', 'AUTHENTICATION', '1.0', NULL, NULL, 'R.J.Silk, Sergei Golubchik', 'Native MySQL authentication', 'GPL', 'Beta', '1.0'),
('mysql_old_password', '1.0', 'ACTIVE', 'AUTHENTICATION', '1.0', NULL, NULL, 'R.J.Silk, Sergei Golubchik', 'Old MySQL-4.0 authentication', 'GPL', 'Beta', '1.0'),
('MyISAM', '1.0', 'ACTIVE', 'STORAGE ENGINE', '50307.0', NULL, NULL, 'MySQL AB', 'Default engine as of MySQL 3.23 with great performance', 'GPL', 'Stable', '1.0'),
('CSV', '1.0', 'ACTIVE', 'STORAGE ENGINE', '50307.0', NULL, NULL, 'Brian Aker, MySQL AB', 'CSV storage engine', 'GPL', 'Stable', '1.0'),
('MEMORY', '1.0', 'ACTIVE', 'STORAGE ENGINE', '50307.0', NULL, NULL, 'MySQL AB', 'Hash based, stored in memory, useful for temporary tables', 'GPL', 'Stable', '1.0'),
('Aria', '1.5', 'ACTIVE', 'STORAGE ENGINE', '50307.0', NULL, NULL, 'Monty Program Ab', 'Crash-safe tables with MyISAM heritage', 'GPL', 'Gamma', '1.5'),
('MRG_MYISAM', '1.0', 'ACTIVE', 'STORAGE ENGINE', '50307.0', NULL, NULL, 'MySQL AB', 'Collection of identical MyISAM tables', 'GPL', 'Stable', '1.0');

-- --------------------------------------------------------

--
-- Table structure for table `PROCESSLIST`
--

CREATE TEMPORARY TABLE `PROCESSLIST` (
  `ID` bigint(4) NOT NULL DEFAULT '0',
  `USER` varchar(16) NOT NULL DEFAULT '',
  `HOST` varchar(64) NOT NULL DEFAULT '',
  `DB` varchar(64) DEFAULT NULL,
  `COMMAND` varchar(16) NOT NULL DEFAULT '',
  `TIME` int(7) NOT NULL DEFAULT '0',
  `STATE` varchar(64) DEFAULT NULL,
  `INFO` longtext,
  `TIME_MS` decimal(22,3) NOT NULL DEFAULT '0.000',
  `STAGE` tinyint(2) NOT NULL DEFAULT '0',
  `MAX_STAGE` tinyint(2) NOT NULL DEFAULT '0',
  `PROGRESS` decimal(7,3) NOT NULL DEFAULT '0.000'
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

--
-- Dumping data for table `PROCESSLIST`
--

INSERT INTO `PROCESSLIST` (`ID`, `USER`, `HOST`, `DB`, `COMMAND`, `TIME`, `STATE`, `INFO`, `TIME_MS`, `STAGE`, `MAX_STAGE`, `PROGRESS`) VALUES
(2214, 'arbo40', '172.17.0.172:64593', 'ecnitdb', 'Query', 0, 'executing', 'SELECT * FROM `information_schema`.`PROCESSLIST`', '0.202', 0, 0, '0.000');

-- --------------------------------------------------------

--
-- Table structure for table `PROFILING`
--

CREATE TEMPORARY TABLE `PROFILING` (
  `QUERY_ID` int(20) NOT NULL DEFAULT '0',
  `SEQ` int(20) NOT NULL DEFAULT '0',
  `STATE` varchar(30) NOT NULL DEFAULT '',
  `DURATION` decimal(9,6) NOT NULL DEFAULT '0.000000',
  `CPU_USER` decimal(9,6) DEFAULT NULL,
  `CPU_SYSTEM` decimal(9,6) DEFAULT NULL,
  `CONTEXT_VOLUNTARY` int(20) DEFAULT NULL,
  `CONTEXT_INVOLUNTARY` int(20) DEFAULT NULL,
  `BLOCK_OPS_IN` int(20) DEFAULT NULL,
  `BLOCK_OPS_OUT` int(20) DEFAULT NULL,
  `MESSAGES_SENT` int(20) DEFAULT NULL,
  `MESSAGES_RECEIVED` int(20) DEFAULT NULL,
  `PAGE_FAULTS_MAJOR` int(20) DEFAULT NULL,
  `PAGE_FAULTS_MINOR` int(20) DEFAULT NULL,
  `SWAPS` int(20) DEFAULT NULL,
  `SOURCE_FUNCTION` varchar(30) DEFAULT NULL,
  `SOURCE_FILE` varchar(20) DEFAULT NULL,
  `SOURCE_LINE` int(20) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `REFERENTIAL_CONSTRAINTS`
--

CREATE TEMPORARY TABLE `REFERENTIAL_CONSTRAINTS` (
  `CONSTRAINT_CATALOG` varchar(512) DEFAULT NULL,
  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',
  `UNIQUE_CONSTRAINT_CATALOG` varchar(512) DEFAULT NULL,
  `UNIQUE_CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `UNIQUE_CONSTRAINT_NAME` varchar(64) DEFAULT NULL,
  `MATCH_OPTION` varchar(64) NOT NULL DEFAULT '',
  `UPDATE_RULE` varchar(64) NOT NULL DEFAULT '',
  `DELETE_RULE` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `REFERENCED_TABLE_NAME` varchar(64) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `ROUTINES`
--

CREATE TEMPORARY TABLE `ROUTINES` (
  `SPECIFIC_NAME` varchar(64) NOT NULL DEFAULT '',
  `ROUTINE_CATALOG` varchar(512) DEFAULT NULL,
  `ROUTINE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `ROUTINE_NAME` varchar(64) NOT NULL DEFAULT '',
  `ROUTINE_TYPE` varchar(9) NOT NULL DEFAULT '',
  `DTD_IDENTIFIER` varchar(64) DEFAULT NULL,
  `ROUTINE_BODY` varchar(8) NOT NULL DEFAULT '',
  `ROUTINE_DEFINITION` longtext,
  `EXTERNAL_NAME` varchar(64) DEFAULT NULL,
  `EXTERNAL_LANGUAGE` varchar(64) DEFAULT NULL,
  `PARAMETER_STYLE` varchar(8) NOT NULL DEFAULT '',
  `IS_DETERMINISTIC` varchar(3) NOT NULL DEFAULT '',
  `SQL_DATA_ACCESS` varchar(64) NOT NULL DEFAULT '',
  `SQL_PATH` varchar(64) DEFAULT NULL,
  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',
  `CREATED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `LAST_ALTERED` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',
  `ROUTINE_COMMENT` varchar(64) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',
  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- --------------------------------------------------------

--
-- Table structure for table `SCHEMATA`
--

CREATE TEMPORARY TABLE `SCHEMATA` (
  `CATALOG_NAME` varchar(512) DEFAULT NULL,
  `SCHEMA_NAME` varchar(64) NOT NULL DEFAULT '',
  `DEFAULT_CHARACTER_SET_NAME` varchar(32) NOT NULL DEFAULT '',
  `DEFAULT_COLLATION_NAME` varchar(32) NOT NULL DEFAULT '',
  `SQL_PATH` varchar(512) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `SCHEMATA`
--

INSERT INTO `SCHEMATA` (`CATALOG_NAME`, `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME`, `SQL_PATH`) VALUES
(NULL, 'information_schema', 'utf8', 'utf8_general_ci', NULL),
(NULL, 'ecnitdb', 'latin1', 'latin1_swedish_ci', NULL),
(NULL, 'mysql', 'latin1', 'latin1_swedish_ci', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `SCHEMA_PRIVILEGES`
--

CREATE TEMPORARY TABLE `SCHEMA_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `SESSION_STATUS`
--

CREATE TEMPORARY TABLE `SESSION_STATUS` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `SESSION_STATUS`
--

INSERT INTO `SESSION_STATUS` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
('ABORTED_CLIENTS', '0'),
('ABORTED_CONNECTS', '311'),
('ACCESS_DENIED_ERRORS', '0'),
('ARIA_PAGECACHE_BLOCKS_NOT_FLUSHED', '0'),
('ARIA_PAGECACHE_BLOCKS_UNUSED', '999'),
('ARIA_PAGECACHE_BLOCKS_USED', '13'),
('ARIA_PAGECACHE_READ_REQUESTS', '8796'),
('ARIA_PAGECACHE_READS', '1078'),
('ARIA_PAGECACHE_WRITE_REQUESTS', '1805'),
('ARIA_PAGECACHE_WRITES', '0'),
('ARIA_TRANSACTION_LOG_SYNCS', '0'),
('BINLOG_BYTES_WRITTEN', '0'),
('BINLOG_CACHE_DISK_USE', '0'),
('BINLOG_CACHE_USE', '0'),
('BUSY_TIME', '0.000000'),
('BYTES_RECEIVED', '11945'),
('BYTES_SENT', '348133'),
('COM_ADMIN_COMMANDS', '0'),
('COM_ASSIGN_TO_KEYCACHE', '0'),
('COM_ALTER_DB', '0'),
('COM_ALTER_DB_UPGRADE', '0'),
('COM_ALTER_EVENT', '0'),
('COM_ALTER_FUNCTION', '0'),
('COM_ALTER_PROCEDURE', '0'),
('COM_ALTER_SERVER', '0'),
('COM_ALTER_TABLE', '0'),
('COM_ALTER_TABLESPACE', '0'),
('COM_ANALYZE', '0'),
('COM_BACKUP_TABLE', '0'),
('COM_BEGIN', '0'),
('COM_BINLOG', '0'),
('COM_CALL_PROCEDURE', '0'),
('COM_CHANGE_DB', '2'),
('COM_CHANGE_MASTER', '0'),
('COM_CHECK', '0'),
('COM_CHECKSUM', '0'),
('COM_COMMIT', '0'),
('COM_CREATE_DB', '0'),
('COM_CREATE_EVENT', '0'),
('COM_CREATE_FUNCTION', '0'),
('COM_CREATE_INDEX', '0'),
('COM_CREATE_PROCEDURE', '0'),
('COM_CREATE_SERVER', '0'),
('COM_CREATE_TABLE', '0'),
('COM_CREATE_TRIGGER', '0'),
('COM_CREATE_UDF', '0'),
('COM_CREATE_USER', '0'),
('COM_CREATE_VIEW', '0'),
('COM_DEALLOC_SQL', '0'),
('COM_DELETE', '0'),
('COM_DELETE_MULTI', '0'),
('COM_DO', '0'),
('COM_DROP_DB', '0'),
('COM_DROP_EVENT', '0'),
('COM_DROP_FUNCTION', '0'),
('COM_DROP_INDEX', '0'),
('COM_DROP_PROCEDURE', '0'),
('COM_DROP_SERVER', '0'),
('COM_DROP_TABLE', '0'),
('COM_DROP_TRIGGER', '0'),
('COM_DROP_USER', '0'),
('COM_DROP_VIEW', '0'),
('COM_EMPTY_QUERY', '0'),
('COM_EXECUTE_SQL', '0'),
('COM_FLUSH', '0'),
('COM_GRANT', '0'),
('COM_HA_CLOSE', '0'),
('COM_HA_OPEN', '0'),
('COM_HA_READ', '0'),
('COM_HELP', '0'),
('COM_INSERT', '0'),
('COM_INSERT_SELECT', '0'),
('COM_INSTALL_PLUGIN', '0'),
('COM_KILL', '0'),
('COM_LOAD', '0'),
('COM_LOAD_MASTER_DATA', '0'),
('COM_LOAD_MASTER_TABLE', '0'),
('COM_LOCK_TABLES', '0'),
('COM_OPTIMIZE', '0'),
('COM_PRELOAD_KEYS', '0'),
('COM_PREPARE_SQL', '0'),
('COM_PURGE', '0'),
('COM_PURGE_BEFORE_DATE', '0'),
('COM_RELEASE_SAVEPOINT', '0'),
('COM_RENAME_TABLE', '0'),
('COM_RENAME_USER', '0'),
('COM_REPAIR', '0'),
('COM_REPLACE', '0'),
('COM_REPLACE_SELECT', '0'),
('COM_RESET', '0'),
('COM_RESTORE_TABLE', '0'),
('COM_REVOKE', '0'),
('COM_REVOKE_ALL', '0'),
('COM_ROLLBACK', '0'),
('COM_ROLLBACK_TO_SAVEPOINT', '0'),
('COM_SAVEPOINT', '0'),
('COM_SELECT', '36'),
('COM_SET_OPTION', '38'),
('COM_SHOW_AUTHORS', '0'),
('COM_SHOW_BINLOG_EVENTS', '0'),
('COM_SHOW_BINLOGS', '0'),
('COM_SHOW_CHARSETS', '0'),
('COM_SHOW_CLIENT_STATISTICS', '0'),
('COM_SHOW_COLLATIONS', '0'),
('COM_SHOW_COLUMN_TYPES', '0'),
('COM_SHOW_CONTRIBUTORS', '0'),
('COM_SHOW_CREATE_DB', '0'),
('COM_SHOW_CREATE_EVENT', '0'),
('COM_SHOW_CREATE_FUNC', '0'),
('COM_SHOW_CREATE_PROC', '0'),
('COM_SHOW_CREATE_TABLE', '34'),
('COM_SHOW_CREATE_TRIGGER', '0'),
('COM_SHOW_DATABASES', '1'),
('COM_SHOW_ENGINE_LOGS', '0'),
('COM_SHOW_ENGINE_MUTEX', '0'),
('COM_SHOW_ENGINE_STATUS', '0'),
('COM_SHOW_EVENTS', '0'),
('COM_SHOW_ERRORS', '0'),
('COM_SHOW_FIELDS', '0'),
('COM_SHOW_FUNCTION_STATUS', '2'),
('COM_SHOW_GRANTS', '0'),
('COM_SHOW_KEYS', '0'),
('COM_SHOW_INDEX_STATISTICS', '0'),
('COM_SHOW_MASTER_STATUS', '0'),
('COM_SHOW_NEW_MASTER', '0'),
('COM_SHOW_OPEN_TABLES', '0'),
('COM_SHOW_PLUGINS', '1'),
('COM_SHOW_PRIVILEGES', '0'),
('COM_SHOW_PROCEDURE_STATUS', '2'),
('COM_SHOW_PROCESSLIST', '0'),
('COM_SHOW_PROFILE', '0'),
('COM_SHOW_PROFILES', '0'),
('COM_SHOW_SLAVE_HOSTS', '0'),
('COM_SHOW_SLAVE_STATUS', '0'),
('COM_SHOW_STATUS', '0'),
('COM_SHOW_STORAGE_ENGINES', '0'),
('COM_SHOW_TABLE_STATISTICS', '0'),
('COM_SHOW_TABLE_STATUS', '67'),
('COM_SHOW_TABLES', '2'),
('COM_SHOW_TRIGGERS', '33'),
('COM_SHOW_USER_STATISTICS', '0'),
('COM_SHOW_VARIABLES', '1'),
('COM_SHOW_WARNINGS', '0'),
('COM_SLAVE_START', '0'),
('COM_SLAVE_STOP', '0'),
('COM_STMT_CLOSE', '0'),
('COM_STMT_EXECUTE', '0'),
('COM_STMT_FETCH', '0'),
('COM_STMT_PREPARE', '0'),
('COM_STMT_REPREPARE', '0'),
('COM_STMT_RESET', '0'),
('COM_STMT_SEND_LONG_DATA', '0'),
('COM_TRUNCATE', '0'),
('COM_UNINSTALL_PLUGIN', '0'),
('COM_UNLOCK_TABLES', '0'),
('COM_UPDATE', '0'),
('COM_UPDATE_MULTI', '0'),
('COM_XA_COMMIT', '0'),
('COM_XA_END', '0'),
('COM_XA_PREPARE', '0'),
('COM_XA_RECOVER', '0'),
('COM_XA_ROLLBACK', '0'),
('COM_XA_START', '0'),
('COMPRESSION', 'OFF'),
('CONNECTIONS', '2215'),
('CPU_TIME', '0.000000'),
('CREATED_TMP_DISK_TABLES', '101'),
('CREATED_TMP_FILES', '0'),
('CREATED_TMP_TABLES', '356'),
('DELAYED_ERRORS', '0'),
('DELAYED_INSERT_THREADS', '0'),
('DELAYED_WRITES', '0'),
('EMPTY_QUERIES', '47'),
('FLUSH_COMMANDS', '1'),
('HANDLER_COMMIT', '0'),
('HANDLER_DELETE', '0'),
('HANDLER_DISCOVER', '0'),
('HANDLER_ICP_ATTEMPTS ', '0'),
('HANDLER_ICP_MATCH', '0'),
('HANDLER_MRR_INIT', '0'),
('HANDLER_MRR_KEY_REFILLS', '0'),
('HANDLER_MRR_ROWID_REFILLS', '0'),
('HANDLER_PREPARE', '0'),
('HANDLER_READ_FIRST', '5'),
('HANDLER_READ_KEY', '0'),
('HANDLER_READ_NEXT', '0'),
('HANDLER_READ_PREV', '0'),
('HANDLER_READ_RND', '0'),
('HANDLER_READ_RND_DELETED', '1594'),
('HANDLER_READ_RND_NEXT', '7446'),
('HANDLER_ROLLBACK', '0'),
('HANDLER_SAVEPOINT', '0'),
('HANDLER_SAVEPOINT_ROLLBACK', '0'),
('HANDLER_TMP_UPDATE', '0'),
('HANDLER_TMP_WRITE', '1967'),
('HANDLER_UPDATE', '0'),
('HANDLER_WRITE', '0'),
('KEY_BLOCKS_NOT_FLUSHED', '0'),
('KEY_BLOCKS_UNUSED', '14197'),
('KEY_BLOCKS_USED', '726'),
('KEY_BLOCKS_WARM', '3'),
('KEY_READ_REQUESTS', '10884368'),
('KEY_READS', '73'),
('KEY_WRITE_REQUESTS', '821969'),
('KEY_WRITES', '815668'),
('LAST_QUERY_COST', '10.499000'),
('MAX_USED_CONNECTIONS', '4'),
('NOT_FLUSHED_DELAYED_ROWS', '0'),
('OPEN_FILES', '72'),
('OPEN_STREAMS', '0'),
('OPEN_TABLE_DEFINITIONS', '34'),
('OPEN_TABLES', '35'),
('OPENED_FILES', '7889'),
('OPENED_TABLE_DEFINITIONS', '7'),
('OPENED_TABLES', '48'),
('PREPARED_STMT_COUNT', '0'),
('QCACHE_FREE_BLOCKS', '0'),
('QCACHE_FREE_MEMORY', '0'),
('QCACHE_HITS', '0'),
('QCACHE_INSERTS', '0'),
('QCACHE_LOWMEM_PRUNES', '0'),
('QCACHE_NOT_CACHED', '0'),
('QCACHE_QUERIES_IN_CACHE', '0'),
('QCACHE_TOTAL_BLOCKS', '0'),
('QUERIES', '4963919'),
('QUESTIONS', '219'),
('ROWS_READ', '5528'),
('ROWS_SENT', '7302'),
('ROWS_TMP_READ', '1773'),
('RPL_STATUS', 'NULL'),
('SELECT_FULL_JOIN', '0'),
('SELECT_FULL_RANGE_JOIN', '0'),
('SELECT_RANGE', '0'),
('SELECT_RANGE_CHECK', '0'),
('SELECT_SCAN', '144'),
('SLAVE_OPEN_TEMP_TABLES', '0'),
('SLAVE_RETRIED_TRANSACTIONS', '0'),
('SLAVE_RUNNING', 'OFF'),
('SLOW_LAUNCH_THREADS', '0'),
('SLOW_QUERIES', '0'),
('SORT_MERGE_PASSES', '0'),
('SORT_RANGE', '0'),
('SORT_ROWS', '0'),
('SORT_SCAN', '0'),
('SUBQUERY_CACHE_HIT', '0'),
('SUBQUERY_CACHE_MISS', '0'),
('SYNCS', '405'),
('TABLE_LOCKS_IMMEDIATE', '4946440'),
('TABLE_LOCKS_WAITED', '0'),
('TC_LOG_MAX_PAGES_USED', '0'),
('TC_LOG_PAGE_SIZE', '0'),
('TC_LOG_PAGE_WAITS', '0'),
('THREADS_CACHED', '0'),
('THREADS_CONNECTED', '1'),
('THREADS_CREATED', '2214'),
('THREADS_RUNNING', '1'),
('UPTIME', '1027550'),
('UPTIME_SINCE_FLUSH_STATUS', '1027550'),
('BINLOG_COMMITS', '0'),
('BINLOG_GROUP_COMMITS', '0'),
('BINLOG_SNAPSHOT_FILE', ''),
('BINLOG_SNAPSHOT_POSITION', '0');

-- --------------------------------------------------------

--
-- Table structure for table `SESSION_VARIABLES`
--

CREATE TEMPORARY TABLE `SESSION_VARIABLES` (
  `VARIABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VARIABLE_VALUE` varchar(1024) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `SESSION_VARIABLES`
--

INSERT INTO `SESSION_VARIABLES` (`VARIABLE_NAME`, `VARIABLE_VALUE`) VALUES
('MAX_PREPARED_STMT_COUNT', '16382'),
('COMPLETION_TYPE', '0'),
('HAVE_CRYPT', 'YES'),
('AUTO_INCREMENT_OFFSET', '1'),
('MYISAM_REPAIR_THREADS', '1'),
('AUTOMATIC_SP_PRIVILEGES', 'ON'),
('LARGE_PAGES', 'OFF'),
('BINLOG_ANNOTATE_ROW_EVENTS', 'OFF'),
('COLLATION_DATABASE', 'latin1_swedish_ci'),
('BINLOG_CACHE_SIZE', '32768'),
('IN_TRANSACTION', 'OFF'),
('TABLE_OPEN_CACHE', '64'),
('DELAYED_INSERT_TIMEOUT', '300'),
('BACK_LOG', '50'),
('LOG_BIN_TRUST_ROUTINE_CREATORS', 'OFF'),
('JOIN_CACHE_LEVEL', '2'),
('OLD_PASSWORDS', 'OFF'),
('AUTO_INCREMENT_INCREMENT', '1'),
('BASEDIR', '/'),
('CHARACTER_SETS_DIR', '/usr/local/share/mysql/charsets/'),
('UPDATABLE_VIEWS_WITH_LIMIT', 'YES'),
('BINLOG_DIRECT_NON_TRANSACTIONAL_UPDATES', 'OFF'),
('SLOW_LAUNCH_TIME', '2'),
('CHARACTER_SET_RESULTS', 'utf8'),
('MAX_SEEKS_FOR_KEY', '4294967295'),
('OPEN_FILES_LIMIT', '11095'),
('RELAY_LOG_INDEX', ''),
('JOIN_BUFFER_SIZE', '131072'),
('SQL_QUOTE_SHOW_CREATE', 'ON'),
('CHARACTER_SET_CONNECTION', 'utf8'),
('SQL_LOG_UPDATE', 'ON'),
('EVENT_SCHEDULER', 'OFF'),
('WAIT_TIMEOUT', '28800'),
('LANGUAGE', '/usr/local/share/mysql/english/'),
('LOCKED_IN_MEMORY', 'OFF'),
('DEADLOCK_TIMEOUT_LONG', '50000000'),
('SKIP_NAME_RESOLVE', 'OFF'),
('CONCURRENT_INSERT', '1'),
('REPORT_HOST', ''),
('DELAYED_QUEUE_SIZE', '1000'),
('SSL_KEY', ''),
('FT_MAX_WORD_LEN', '84'),
('PID_FILE', '/mysqld.pid'),
('DEADLOCK_SEARCH_DEPTH_SHORT', '4'),
('SLAVE_SKIP_ERRORS', 'OFF'),
('DIV_PRECISION_INCREMENT', '4'),
('INSERT_ID', '0'),
('VERSION_COMPILE_MACHINE', 'i386'),
('RELAY_LOG_PURGE', 'ON'),
('INTERACTIVE_TIMEOUT', '28800'),
('SKIP_SHOW_DATABASE', 'OFF'),
('FT_QUERY_EXPANSION_LIMIT', '20'),
('GROUP_CONCAT_MAX_LEN', '1024'),
('NET_BUFFER_LENGTH', '8192'),
('RANGE_ALLOC_BLOCK_SIZE', '4096'),
('MAX_WRITE_LOCK_COUNT', '4294967295'),
('SYSTEM_TIME_ZONE', 'UTC'),
('FT_MIN_WORD_LEN', '4'),
('LOG_SLOW_QUERIES', 'OFF'),
('DELAYED_INSERT_LIMIT', '100'),
('TRANSACTION_PREALLOC_SIZE', '4096'),
('FLUSH', 'OFF'),
('VERSION_COMPILE_OS', 'portbld-freebsd8.2'),
('PSEUDO_THREAD_ID', '2214'),
('SQL_NOTES', 'ON'),
('CHARACTER_SET_FILESYSTEM', 'binary'),
('LOW_PRIORITY_UPDATES', 'OFF'),
('LOG_BIN', 'OFF'),
('REPORT_PASSWORD', ''),
('RELAY_LOG', ''),
('MAX_INSERT_DELAYED_THREADS', '20'),
('CONNECT_TIMEOUT', '10'),
('HAVE_COMPRESS', 'YES'),
('SQL_LOW_PRIORITY_UPDATES', 'OFF'),
('TRANSACTION_ALLOC_BLOCK_SIZE', '8192'),
('INIT_FILE', ''),
('THREAD_CACHE_SIZE', '0'),
('LARGE_PAGE_SIZE', '0'),
('ARIA_PAGECACHE_AGE_THRESHOLD', '300'),
('INIT_SLAVE', ''),
('MAX_CONNECT_ERRORS', '1000'),
('MAX_BINLOG_SIZE', '1073741824'),
('ARIA_PAGE_CHECKSUM', 'ON'),
('MAX_ERROR_COUNT', '64'),
('LOG_OUTPUT', 'FILE'),
('KEY_CACHE_BLOCK_SIZE', '1024'),
('MIN_EXAMINED_ROW_LIMIT', '0'),
('LOG_WARNINGS', '2'),
('PROTOCOL_VERSION', '10'),
('MAX_HEAP_TABLE_SIZE', '16777216'),
('HAVE_SYMLINK', 'YES'),
('MAX_LONG_DATA_SIZE', '4194304'),
('TIME_ZONE', '+00:00'),
('PRELOAD_BUFFER_SIZE', '32768'),
('ARIA_PAGECACHE_DIVISION_LIMIT', '100'),
('LOWER_CASE_TABLE_NAMES', '0'),
('LC_TIME_NAMES', 'en_US'),
('SSL_CIPHER', ''),
('MYISAM_DATA_POINTER_SIZE', '6'),
('COLLATION_SERVER', 'latin1_swedish_ci'),
('DEADLOCK_TIMEOUT_SHORT', '10000'),
('CHARACTER_SET_SERVER', 'latin1'),
('SQL_AUTO_IS_NULL', 'ON'),
('MAX_LENGTH_FOR_SORT_DATA', '1024'),
('ARIA_USED_FOR_TEMP_TABLES', 'ON'),
('SQL_MAX_JOIN_SIZE', '18446744073709551615'),
('LARGE_FILES_SUPPORT', 'ON'),
('LOG_QUERIES_NOT_USING_INDEXES', 'OFF'),
('GENERAL_LOG', 'OFF'),
('NET_RETRY_COUNT', '1000000'),
('ARIA_SYNC_LOG_DIR', 'NEWFILE'),
('FT_STOPWORD_FILE', '(built-in)'),
('QUERY_CACHE_MIN_RES_UNIT', '4096'),
('DELAY_KEY_WRITE', 'ON'),
('SORT_BUFFER_SIZE', '524288'),
('NET_WRITE_TIMEOUT', '60'),
('ARIA_GROUP_COMMIT_INTERVAL', '0'),
('LONG_QUERY_TIME', '10.000000'),
('PROFILING_HISTORY_SIZE', '15'),
('LOWER_CASE_FILE_SYSTEM', 'OFF'),
('ARIA_REPAIR_THREADS', '1'),
('HAVE_GEOMETRY', 'YES'),
('READ_RND_BUFFER_SIZE', '262144'),
('SSL_CA', ''),
('BINLOG_OPTIMIZE_THREAD_SCHEDULING', 'ON'),
('IGNORE_BUILTIN_INNODB', 'OFF'),
('ARIA_LOG_FILE_SIZE', '20971520'),
('JOIN_BUFFER_SPACE_LIMIT', '2097152'),
('SQL_SELECT_LIMIT', '18446744073709551615'),
('BULK_INSERT_BUFFER_SIZE', '8388608'),
('ARIA_STATS_METHOD', 'nulls_unequal'),
('MYISAM_STATS_METHOD', 'nulls_unequal'),
('READ_ONLY', 'OFF'),
('OPTIMIZER_SWITCH', 'index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=off,table_elimination=on'),
('RAND_SEED1', ''),
('MAX_BINLOG_CACHE_SIZE', '4294963200'),
('PLUGIN_MATURITY', 'unknown'),
('READ_BUFFER_SIZE', '131072'),
('KEY_CACHE_AGE_THRESHOLD', '300'),
('MAX_SORT_LENGTH', '1024'),
('PROFILING', 'OFF'),
('MRR_BUFFER_SIZE', '262144'),
('ARIA_PAGECACHE_BUFFER_SIZE', '8388608'),
('MYISAM_MAX_SORT_FILE_SIZE', '2146435072'),
('KEY_CACHE_DIVISION_LIMIT', '100'),
('FLUSH_TIME', '0'),
('GENERAL_LOG_FILE', '/mysqld.log'),
('QUERY_PREALLOC_SIZE', '8192'),
('SECURE_AUTH', 'OFF'),
('ERROR_COUNT', '0'),
('LOG_SLOW_VERBOSITY', ''),
('MYISAM_USE_MMAP', 'OFF'),
('TMPDIR', '/tmp'),
('QUERY_CACHE_LIMIT', '1048576'),
('EXPIRE_LOGS_DAYS', '0'),
('SQL_WARNINGS', 'OFF'),
('ARIA_RECOVER', 'NORMAL'),
('QUERY_CACHE_SIZE', '0'),
('FOREIGN_KEY_CHECKS', 'ON'),
('SQL_BIG_SELECTS', 'ON'),
('ARIA_LOG_PURGE_TYPE', 'immediate'),
('KEY_CACHE_SEGMENTS', '0'),
('SLAVE_LOAD_TMPDIR', '/tmp'),
('MYISAM_SORT_BUFFER_SIZE', '8388608'),
('ROWID_MERGE_BUFF_SIZE', '8388608'),
('SSL_CERT', ''),
('MAX_TMP_TABLES', '32'),
('BIG_TABLES', 'OFF'),
('UNIQUE_CHECKS', 'ON'),
('QUERY_ALLOC_BLOCK_SIZE', '8192'),
('VERSION', '5.3.7-MariaDB'),
('QUERY_CACHE_TYPE', 'ON'),
('SOCKET', '/mysql.sock'),
('SQL_BUFFER_RESULT', 'OFF'),
('LOG_SLOW_FILTER', ''),
('REPORT_PORT', '3306'),
('COLLATION_CONNECTION', 'utf8_general_ci'),
('SSL_CAPATH', ''),
('HAVE_QUERY_CACHE', 'YES'),
('VERSION_COMMENT', 'Source distribution'),
('SLAVE_SQL_VERIFY_CHECKSUM', 'ON'),
('USERSTAT', 'OFF'),
('EXTRA_PORT', '0'),
('OPTIMIZER_PRUNE_LEVEL', '1'),
('ARIA_BLOCK_SIZE', '8192'),
('QUERY_CACHE_WLOCK_INVALIDATE', 'OFF'),
('DATADIR', '/var/'),
('QUERY_CACHE_STRIP_COMMENTS', 'OFF'),
('SQL_LOG_OFF', 'OFF'),
('TIMED_MUTEXES', 'OFF'),
('DATE_FORMAT', '%Y-%m-%d'),
('PROGRESS_REPORT_TIME', '5'),
('SQL_SLAVE_SKIP_COUNTER', ''),
('THREAD_POOL_SIZE', '20'),
('TIME_FORMAT', '%H:%i:%s'),
('SERVER_ID', '0'),
('MAX_ALLOWED_PACKET', '4194304'),
('SKIP_NETWORKING', 'OFF'),
('STORAGE_ENGINE', 'MyISAM'),
('CHARACTER_SET_SYSTEM', 'utf8'),
('REPLICATE_ANNOTATE_ROW_EVENTS', 'OFF'),
('INIT_CONNECT', ''),
('HAVE_DYNAMIC_LOADING', 'YES'),
('OPTIMIZER_SEARCH_DEPTH', '62'),
('SYNC_BINLOG', '0'),
('AUTOCOMMIT', 'ON'),
('RELAY_LOG_SPACE_LIMIT', '0'),
('MAX_SP_RECURSION_DEPTH', '0'),
('LOG_SLAVE_UPDATES', 'OFF'),
('THREAD_HANDLING', 'one-thread-per-connection'),
('OLD', 'OFF'),
('TMP_TABLE_SIZE', '16777216'),
('HAVE_SSL', 'NO'),
('TABLE_LOCK_WAIT_TIMEOUT', '50'),
('LAST_INSERT_ID', '0'),
('FT_BOOLEAN_SYNTAX', '+ -><()~*:""&|'),
('KEY_BUFFER_SIZE', '16777216'),
('CHARACTER_SET_CLIENT', 'utf8'),
('HAVE_NDBCLUSTER', 'NO'),
('SQL_BIG_TABLES', 'OFF'),
('LOG_ERROR', ''),
('HOSTNAME', 'm9'),
('SLOW_QUERY_LOG', 'OFF'),
('CHARACTER_SET_DATABASE', 'latin1'),
('SLOW_QUERY_LOG_FILE', '/mysqld-slow.log'),
('DEADLOCK_SEARCH_DEPTH_LONG', '15'),
('LOG_SLOW_RATE_LIMIT', '1'),
('SQL_MODE', ''),
('ARIA_SORT_BUFFER_SIZE', '8388608'),
('MAX_USER_CONNECTIONS', '0'),
('ARIA_GROUP_COMMIT', 'none'),
('SLAVE_EXEC_MODE', 'STRICT'),
('PLUGIN_DIR', '/usr/lib/'),
('MYISAM_BLOCK_SIZE', '1024'),
('LOCAL_INFILE', 'ON'),
('NEW', 'OFF'),
('HAVE_RTREE_KEYS', 'YES'),
('SECURE_FILE_PRIV', ''),
('BINLOG_FORMAT', 'STATEMENT'),
('KEEP_FILES_ON_CREATE', 'OFF'),
('BINLOG_CHECKSUM', 'NONE'),
('HAVE_COMMUNITY_FEATURES', 'YES'),
('MYISAM_MMAP_SIZE', '4294967295'),
('ENGINE_CONDITION_PUSHDOWN', 'ON'),
('EXTRA_MAX_CONNECTIONS', '1'),
('SQL_LOG_BIN', 'ON'),
('TIMESTAMP', '1345485711.356893'),
('MAX_CONNECTIONS', '48'),
('MAX_DELAYED_THREADS', '20'),
('NET_READ_TIMEOUT', '30'),
('ARIA_CHECKPOINT_LOG_ACTIVITY', '1048576'),
('HAVE_CSV', 'YES'),
('WARNING_COUNT', '0'),
('HAVE_INNODB', 'NO'),
('MAX_RELAY_LOG_SIZE', '0'),
('THREAD_STACK', '294912'),
('ARIA_CHECKPOINT_INTERVAL', '30'),
('LOG_BASENAME', ''),
('SLAVE_COMPRESSED_PROTOCOL', 'OFF'),
('REPORT_USER', ''),
('PORT', '22831'),
('LOG', 'OFF'),
('LOG_SLOW_TIME', '10.000000'),
('TX_ISOLATION', 'REPEATABLE-READ'),
('LOG_BIN_TRUST_FUNCTION_CREATORS', 'OFF'),
('MYISAM_RECOVER_OPTIONS', 'DEFAULT'),
('ARIA_FORCE_START_AFTER_RECOVERY_FAILURES', '0'),
('OLD_ALTER_TABLE', 'OFF'),
('HAVE_OPENSSL', 'NO'),
('LICENSE', 'GPL'),
('DATETIME_FORMAT', '%Y-%m-%d %H:%i:%s'),
('MASTER_VERIFY_CHECKSUM', 'OFF'),
('SLAVE_NET_TIMEOUT', '3600'),
('MAX_JOIN_SIZE', '18446744073709551615'),
('IDENTITY', '0'),
('RELAY_LOG_INFO_FILE', 'relay-log.info'),
('SLAVE_TRANSACTION_RETRIES', '10'),
('DEFAULT_WEEK_FORMAT', '0'),
('SYNC_FRM', 'ON'),
('TABLE_DEFINITION_CACHE', '256'),
('RAND_SEED2', ''),
('HAVE_PARTITIONING', 'NO'),
('SQL_SAFE_UPDATES', 'OFF'),
('SKIP_EXTERNAL_LOCKING', 'ON'),
('RPL_RECOVERY_RANK', '0'),
('TABLE_TYPE', 'MyISAM'),
('ARIA_MAX_SORT_FILE_SIZE', '9223372036853727232');

-- --------------------------------------------------------

--
-- Table structure for table `STATISTICS`
--

CREATE TEMPORARY TABLE `STATISTICS` (
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `NON_UNIQUE` bigint(1) NOT NULL DEFAULT '0',
  `INDEX_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `INDEX_NAME` varchar(64) NOT NULL DEFAULT '',
  `SEQ_IN_INDEX` bigint(2) NOT NULL DEFAULT '0',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLLATION` varchar(1) DEFAULT NULL,
  `CARDINALITY` bigint(21) DEFAULT NULL,
  `SUB_PART` bigint(3) DEFAULT NULL,
  `PACKED` varchar(10) DEFAULT NULL,
  `NULLABLE` varchar(3) NOT NULL DEFAULT '',
  `INDEX_TYPE` varchar(16) NOT NULL DEFAULT '',
  `COMMENT` varchar(16) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `STATISTICS`
--

INSERT INTO `STATISTICS` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `NON_UNIQUE`, `INDEX_SCHEMA`, `INDEX_NAME`, `SEQ_IN_INDEX`, `COLUMN_NAME`, `COLLATION`, `CARDINALITY`, `SUB_PART`, `PACKED`, `NULLABLE`, `INDEX_TYPE`, `COMMENT`) VALUES
(NULL, 'ecnitdb', 'directory_owner', 0, 'ecnitdb', 'PRIMARY', 1, 'directoryOwnerID', 'A', 243, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'directory_owner', 0, 'ecnitdb', 'directory', 1, 'directory', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'directory_owner', 0, 'ecnitdb', 'directory', 2, 'owner_position', 'A', 243, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'directory_owner', 1, 'ecnitdb', 'owner_position', 1, 'owner_position', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'directory_owners', 0, 'ecnitdb', 'PRIMARY', 1, 'directoryOwnerID', 'A', 246, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'directory_owners', 0, 'ecnitdb', 'directory', 1, 'directory', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'directory_owners', 0, 'ecnitdb', 'directory', 2, 'owner_position', 'A', 246, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'directory_owners', 1, 'ecnitdb', 'owner_position', 1, 'owner_position', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'distribution_groups', 0, 'ecnitdb', 'PRIMARY', 1, 'distributionGroupID', 'A', 53, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'distribution_groups', 0, 'ecnitdb', 'dgName', 1, 'dgName', 'A', 53, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'divisions', 0, 'ecnitdb', 'PRIMARY', 1, 'divisionID', 'A', 4, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'divisions', 0, 'ecnitdb', 'name', 1, 'name', 'A', 4, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'edit_permissions', 0, 'ecnitdb', 'PRIMARY', 1, 'editPermissionID', 'A', 2202, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'edit_permissions', 0, 'ecnitdb', 'position', 1, 'position', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'edit_permissions', 0, 'ecnitdb', 'position', 2, 'directory', 'A', 2202, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'edit_permissions', 1, 'ecnitdb', 'directory', 1, 'directory', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'positions', 0, 'ecnitdb', 'PRIMARY', 1, 'positionID', 'A', 296, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'positions', 0, 'ecnitdb', 'title', 1, 'title', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'positions', 0, 'ecnitdb', 'title', 2, 'division', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'positions', 0, 'ecnitdb', 'title', 3, 'school_department', 'A', 296, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'positions', 1, 'ecnitdb', 'division', 1, 'division', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'positions', 1, 'ecnitdb', 'school_department', 1, 'school_department', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'read_permissions', 0, 'ecnitdb', 'PRIMARY', 1, 'readPermissionID', 'A', 1241, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'read_permissions', 0, 'ecnitdb', 'position', 1, 'position', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'read_permissions', 0, 'ecnitdb', 'position', 2, 'directory', 'A', 1241, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'read_permissions', 1, 'ecnitdb', 'directory', 1, 'directory', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'receive_dg', 0, 'ecnitdb', 'PRIMARY', 1, 'receiveDGID', 'A', 622, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'receive_dg', 0, 'ecnitdb', 'distributionGroup', 1, 'distributionGroup', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'receive_dg', 0, 'ecnitdb', 'distributionGroup', 2, 'position', 'A', 622, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'receive_dg', 1, 'ecnitdb', 'position', 1, 'position', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'schools_departments', 0, 'ecnitdb', 'PRIMARY', 1, 'schoolDepartmentID', 'A', 44, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'schools_departments', 0, 'ecnitdb', 'name', 1, 'name', 'A', 44, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'schools_departments', 0, 'ecnitdb', 'abbreviation', 1, 'abbreviation', 'A', NULL, NULL, NULL, 'YES', 'BTREE', ''),
(NULL, 'ecnitdb', 'schools_departments', 1, 'ecnitdb', 'division', 1, 'division', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'send_to_dg', 0, 'ecnitdb', 'PRIMARY', 1, 'sendToDGID', 'A', 376, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'send_to_dg', 0, 'ecnitdb', 'distributionGroup', 1, 'distributionGroup', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'send_to_dg', 0, 'ecnitdb', 'distributionGroup', 2, 'position', 'A', 376, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'send_to_dg', 1, 'ecnitdb', 'position', 1, 'position', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'source_directories', 0, 'ecnitdb', 'PRIMARY', 1, 'sourceDirectoryID', 'A', 201, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'source_directories', 0, 'ecnitdb', 'name', 1, 'name', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'source_directories', 0, 'ecnitdb', 'name', 2, 'parent', 'A', 201, NULL, NULL, '', 'BTREE', ''),
(NULL, 'ecnitdb', 'source_directories', 1, 'ecnitdb', 'parent', 1, 'parent', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 4, 'Table_name', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'columns_priv', 0, 'mysql', 'PRIMARY', 5, 'Column_name', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'db', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'db', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'db', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'db', 1, 'mysql', 'User', 1, 'User', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'event', 0, 'mysql', 'PRIMARY', 1, 'db', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'event', 0, 'mysql', 'PRIMARY', 2, 'name', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'func', 0, 'mysql', 'PRIMARY', 1, 'name', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_category', 0, 'mysql', 'PRIMARY', 1, 'help_category_id', 'A', 29, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_category', 0, 'mysql', 'name', 1, 'name', 'A', 29, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_keyword', 0, 'mysql', 'PRIMARY', 1, 'help_keyword_id', 'A', 350, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_keyword', 0, 'mysql', 'name', 1, 'name', 'A', 350, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_relation', 0, 'mysql', 'PRIMARY', 1, 'help_keyword_id', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_relation', 0, 'mysql', 'PRIMARY', 2, 'help_topic_id', 'A', 567, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_topic', 0, 'mysql', 'PRIMARY', 1, 'help_topic_id', 'A', 390, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'help_topic', 0, 'mysql', 'name', 1, 'name', 'A', 390, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'host', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'host', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'ndb_binlog_index', 0, 'mysql', 'PRIMARY', 1, 'epoch', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'plugin', 0, 'mysql', 'PRIMARY', 1, 'name', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'proc', 0, 'mysql', 'PRIMARY', 1, 'db', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'proc', 0, 'mysql', 'PRIMARY', 2, 'name', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'proc', 0, 'mysql', 'PRIMARY', 3, 'type', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 4, 'Routine_name', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'procs_priv', 0, 'mysql', 'PRIMARY', 5, 'Routine_type', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'procs_priv', 1, 'mysql', 'Grantor', 1, 'Grantor', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'servers', 0, 'mysql', 'PRIMARY', 1, 'Server_name', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 2, 'Db', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 3, 'User', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'tables_priv', 0, 'mysql', 'PRIMARY', 4, 'Table_name', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'tables_priv', 1, 'mysql', 'Grantor', 1, 'Grantor', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'time_zone', 0, 'mysql', 'PRIMARY', 1, 'Time_zone_id', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'time_zone_leap_second', 0, 'mysql', 'PRIMARY', 1, 'Transition_time', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'time_zone_name', 0, 'mysql', 'PRIMARY', 1, 'Name', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'time_zone_transition', 0, 'mysql', 'PRIMARY', 1, 'Time_zone_id', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'time_zone_transition', 0, 'mysql', 'PRIMARY', 2, 'Transition_time', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'time_zone_transition_type', 0, 'mysql', 'PRIMARY', 1, 'Time_zone_id', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'time_zone_transition_type', 0, 'mysql', 'PRIMARY', 2, 'Transition_type_id', 'A', 0, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'user', 0, 'mysql', 'PRIMARY', 1, 'Host', 'A', NULL, NULL, NULL, '', 'BTREE', ''),
(NULL, 'mysql', 'user', 0, 'mysql', 'PRIMARY', 2, 'User', 'A', 2, NULL, NULL, '', 'BTREE', '');

-- --------------------------------------------------------

--
-- Table structure for table `TABLES`
--

CREATE TEMPORARY TABLE `TABLES` (
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `TABLE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `ENGINE` varchar(64) DEFAULT NULL,
  `VERSION` bigint(21) unsigned DEFAULT NULL,
  `ROW_FORMAT` varchar(10) DEFAULT NULL,
  `TABLE_ROWS` bigint(21) unsigned DEFAULT NULL,
  `AVG_ROW_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `MAX_DATA_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `INDEX_LENGTH` bigint(21) unsigned DEFAULT NULL,
  `DATA_FREE` bigint(21) unsigned DEFAULT NULL,
  `AUTO_INCREMENT` bigint(21) unsigned DEFAULT NULL,
  `CREATE_TIME` datetime DEFAULT NULL,
  `UPDATE_TIME` datetime DEFAULT NULL,
  `CHECK_TIME` datetime DEFAULT NULL,
  `TABLE_COLLATION` varchar(32) DEFAULT NULL,
  `CHECKSUM` bigint(21) unsigned DEFAULT NULL,
  `CREATE_OPTIONS` varchar(255) DEFAULT NULL,
  `TABLE_COMMENT` varchar(80) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `TABLES`
--

INSERT INTO `TABLES` (`TABLE_CATALOG`, `TABLE_SCHEMA`, `TABLE_NAME`, `TABLE_TYPE`, `ENGINE`, `VERSION`, `ROW_FORMAT`, `TABLE_ROWS`, `AVG_ROW_LENGTH`, `DATA_LENGTH`, `MAX_DATA_LENGTH`, `INDEX_LENGTH`, `DATA_FREE`, `AUTO_INCREMENT`, `CREATE_TIME`, `UPDATE_TIME`, `CHECK_TIME`, `TABLE_COLLATION`, `CHECKSUM`, `CREATE_OPTIONS`, `TABLE_COMMENT`) VALUES
(NULL, 'information_schema', 'CHARACTER_SETS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 384, 0, 16604160, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=43690', ''),
(NULL, 'information_schema', 'CLIENT_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 370, 0, 16687000, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=45343', ''),
(NULL, 'information_schema', 'COLLATIONS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 231, 0, 16704765, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=72628', ''),
(NULL, 'information_schema', 'COLLATION_CHARACTER_SET_APPLICABILITY', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 195, 0, 16691610, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=86037', ''),
(NULL, 'information_schema', 'COLUMNS', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=4549', ''),
(NULL, 'information_schema', 'COLUMN_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2565, 0, 16757145, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=6540', ''),
(NULL, 'information_schema', 'ENGINES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 731, 0, 16753789, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=22951', ''),
(NULL, 'information_schema', 'EVENTS', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=618', ''),
(NULL, 'information_schema', 'FILES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2677, 0, 16758020, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=6267', ''),
(NULL, 'information_schema', 'GLOBAL_STATUS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3268, 0, 16755036, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=5133', ''),
(NULL, 'information_schema', 'GLOBAL_VARIABLES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3268, 0, 16755036, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=5133', ''),
(NULL, 'information_schema', 'INDEX_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 1743, 0, 16765917, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=9625', ''),
(NULL, 'information_schema', 'KEY_CACHES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 659, 0, 16751780, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=25458', ''),
(NULL, 'information_schema', 'KEY_COLUMN_USAGE', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 4637, 0, 16762755, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=3618', ''),
(NULL, 'information_schema', 'PARTITIONS', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=5612', ''),
(NULL, 'information_schema', 'PLUGINS', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=10713', ''),
(NULL, 'information_schema', 'PROCESSLIST', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=23334', ''),
(NULL, 'information_schema', 'PROFILING', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 308, 0, 16562084, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=54471', ''),
(NULL, 'information_schema', 'REFERENTIAL_CONSTRAINTS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 4814, 0, 16767162, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=3485', ''),
(NULL, 'information_schema', 'ROUTINES', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=588', ''),
(NULL, 'information_schema', 'SCHEMATA', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3464, 0, 16755368, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=4843', ''),
(NULL, 'information_schema', 'SCHEMA_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2179, 0, 16767405, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=7699', ''),
(NULL, 'information_schema', 'SESSION_STATUS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3268, 0, 16755036, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=5133', ''),
(NULL, 'information_schema', 'SESSION_VARIABLES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3268, 0, 16755036, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=5133', ''),
(NULL, 'information_schema', 'STATISTICS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2679, 0, 16770540, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=6262', ''),
(NULL, 'information_schema', 'TABLES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 3545, 0, 16760760, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=4732', ''),
(NULL, 'information_schema', 'TABLE_CONSTRAINTS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2504, 0, 16749256, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=6700', ''),
(NULL, 'information_schema', 'TABLE_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 2372, 0, 16748692, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=7073', ''),
(NULL, 'information_schema', 'TABLE_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 1181, 0, 16733589, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=14205', ''),
(NULL, 'information_schema', 'TRIGGERS', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=569', ''),
(NULL, 'information_schema', 'USER_PRIVILEGES', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 1986, 0, 16759854, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=8447', ''),
(NULL, 'information_schema', 'USER_STATISTICS', 'SYSTEM VIEW', 'MEMORY', 10, 'Fixed', NULL, 310, 0, 16669630, 0, 0, NULL, '2012-08-20 18:01:51', NULL, NULL, 'utf8_general_ci', NULL, 'max_rows=54120', ''),
(NULL, 'information_schema', 'VIEWS', 'SYSTEM VIEW', 'Aria', 10, 'Page', NULL, 0, 8192, 68719484928, 8192, 0, NULL, '2012-08-20 18:01:51', '2012-08-20 18:01:51', NULL, 'utf8_general_ci', NULL, 'max_rows=6932', ''),
(NULL, 'ecnitdb', 'directory_owner', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 243, 13, 3159, 3659174697238527, 14336, 0, 244, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'directory_owners', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 246, 13, 3198, 3659174697238527, 14336, 0, 247, '2012-08-15 19:55:24', '2012-08-15 19:55:36', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'distribution_groups', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 53, 29, 1580, 281474976710655, 5120, 0, 54, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'divisions', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 4, 21, 84, 281474976710655, 3072, 0, 5, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'edit_permissions', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 2202, 13, 28626, 3659174697238527, 86016, 0, 2203, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'positions', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 296, 36, 10724, 281474976710655, 19456, 0, 297, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'read_permissions', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 1241, 13, 36855, 3659174697238527, 107520, 20722, 2836, '2012-08-20 17:47:10', '2012-08-20 17:55:30', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'receive_dg', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 622, 13, 8086, 3659174697238527, 27648, 0, 623, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'schools_departments', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 44, 62, 2748, 281474976710655, 5120, 0, 45, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'send_to_dg', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 376, 13, 4888, 3659174697238527, 18432, 0, 377, '2012-08-20 17:47:10', '2012-08-20 17:47:19', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'ecnitdb', 'source_directories', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 201, 24, 5020, 281474976710655, 13312, 64, 204, '2012-08-20 17:47:10', '2012-08-20 18:01:27', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'mysql', 'columns_priv', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 227994731135631359, 4096, 0, NULL, '2012-07-29 02:04:31', '2012-07-29 02:04:31', NULL, 'utf8_bin', NULL, '', 'Column privileges'),
(NULL, 'mysql', 'db', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 880, 123848989752688639, 5120, 880, NULL, '2012-07-29 02:04:36', '2012-08-08 20:36:06', NULL, 'utf8_bin', NULL, '', 'Database privileges'),
(NULL, 'mysql', 'event', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 0, 0, 0, 281474976710655, 2048, 0, NULL, '2012-07-29 02:04:36', '2012-07-29 02:04:36', NULL, 'utf8_general_ci', NULL, '', 'Events'),
(NULL, 'mysql', 'func', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 162974011515469823, 1024, 0, NULL, '2012-07-29 02:04:33', '2012-07-29 02:04:33', NULL, 'utf8_bin', NULL, '', 'User defined functions'),
(NULL, 'mysql', 'general_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, '', 'General log'),
(NULL, 'mysql', 'help_category', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 29, 29, 868, 281474976710655, 3072, 0, NULL, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, 'utf8_general_ci', NULL, '', 'help categories'),
(NULL, 'mysql', 'help_keyword', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 350, 20, 7320, 281474976710655, 15360, 0, NULL, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, 'utf8_general_ci', NULL, '', 'help keywords'),
(NULL, 'mysql', 'help_relation', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 567, 9, 5103, 2533274790395903, 10240, 0, NULL, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, 'utf8_general_ci', NULL, '', 'keyword-topic relation'),
(NULL, 'mysql', 'help_topic', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 390, 435, 169712, 281474976710655, 15360, 0, NULL, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, 'utf8_general_ci', NULL, '', 'help topics'),
(NULL, 'mysql', 'host', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 110056715893866495, 2048, 0, NULL, '2012-07-29 02:04:36', '2012-07-29 02:04:36', NULL, 'utf8_bin', NULL, '', 'Host privileges;  Merged with database privileges'),
(NULL, 'mysql', 'ndb_binlog_index', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 0, 0, 0, 281474976710655, 1024, 0, NULL, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, 'latin1_swedish_ci', NULL, '', ''),
(NULL, 'mysql', 'plugin', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 162411061562048511, 1024, 0, NULL, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, 'utf8_bin', NULL, '', 'MySQL plugins'),
(NULL, 'mysql', 'proc', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 0, 0, 0, 281474976710655, 2048, 0, NULL, '2012-07-29 02:04:35', '2012-07-29 02:04:35', NULL, 'utf8_general_ci', NULL, '', 'Stored Procedures'),
(NULL, 'mysql', 'procs_priv', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 239253730204057599, 4096, 0, NULL, '2012-07-29 02:04:35', '2012-07-29 02:04:35', '2012-07-29 02:04:35', 'utf8_bin', NULL, '', 'Procedure privileges'),
(NULL, 'mysql', 'servers', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 433752939111120895, 1024, 0, NULL, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, 'utf8_general_ci', NULL, '', 'MySQL Foreign Servers table'),
(NULL, 'mysql', 'slow_log', 'BASE TABLE', 'CSV', 10, 'Dynamic', 2, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, 'utf8_general_ci', NULL, '', 'Slow log'),
(NULL, 'mysql', 'tables_priv', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 239535205180768255, 4096, 0, NULL, '2012-07-29 02:04:31', '2012-07-29 02:04:31', '2012-07-29 02:04:31', 'utf8_bin', NULL, '', 'Table privileges'),
(NULL, 'mysql', 'time_zone', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 1970324836974591, 1024, 0, 1, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, 'utf8_general_ci', NULL, '', 'Time zones'),
(NULL, 'mysql', 'time_zone_leap_second', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 3659174697238527, 1024, 0, NULL, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, 'utf8_general_ci', NULL, '', 'Leap seconds information for time zones'),
(NULL, 'mysql', 'time_zone_name', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 55450570411999231, 1024, 0, NULL, '2012-07-29 02:04:29', '2012-07-29 02:04:29', NULL, 'utf8_general_ci', NULL, '', 'Time zone names'),
(NULL, 'mysql', 'time_zone_transition', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 4785074604081151, 1024, 0, NULL, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, 'utf8_general_ci', NULL, '', 'Time zone transitions'),
(NULL, 'mysql', 'time_zone_transition_type', 'BASE TABLE', 'MyISAM', 10, 'Fixed', 0, 0, 0, 10696049115004927, 1024, 0, NULL, '2012-07-29 02:04:30', '2012-07-29 02:04:30', NULL, 'utf8_general_ci', NULL, '', 'Time zone transition types'),
(NULL, 'mysql', 'user', 'BASE TABLE', 'MyISAM', 10, 'Dynamic', 2, 90, 180, 281474976710655, 2048, 0, NULL, '2012-07-29 02:04:36', '2012-08-08 20:41:41', NULL, 'utf8_bin', NULL, '', 'Users and global privileges');

-- --------------------------------------------------------

--
-- Table structure for table `TABLE_CONSTRAINTS`
--

CREATE TEMPORARY TABLE `TABLE_CONSTRAINTS` (
  `CONSTRAINT_CATALOG` varchar(512) DEFAULT NULL,
  `CONSTRAINT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_NAME` varchar(64) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `CONSTRAINT_TYPE` varchar(64) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `TABLE_CONSTRAINTS`
--

INSERT INTO `TABLE_CONSTRAINTS` (`CONSTRAINT_CATALOG`, `CONSTRAINT_SCHEMA`, `CONSTRAINT_NAME`, `TABLE_SCHEMA`, `TABLE_NAME`, `CONSTRAINT_TYPE`) VALUES
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'directory_owner', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'directory', 'ecnitdb', 'directory_owner', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'directory_owners', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'directory', 'ecnitdb', 'directory_owners', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'distribution_groups', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'dgName', 'ecnitdb', 'distribution_groups', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'divisions', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'name', 'ecnitdb', 'divisions', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'edit_permissions', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'position', 'ecnitdb', 'edit_permissions', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'positions', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'title', 'ecnitdb', 'positions', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'read_permissions', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'position', 'ecnitdb', 'read_permissions', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'receive_dg', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'distributionGroup', 'ecnitdb', 'receive_dg', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'schools_departments', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'name', 'ecnitdb', 'schools_departments', 'UNIQUE'),
(NULL, 'ecnitdb', 'abbreviation', 'ecnitdb', 'schools_departments', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'send_to_dg', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'distributionGroup', 'ecnitdb', 'send_to_dg', 'UNIQUE'),
(NULL, 'ecnitdb', 'PRIMARY', 'ecnitdb', 'source_directories', 'PRIMARY KEY'),
(NULL, 'ecnitdb', 'name', 'ecnitdb', 'source_directories', 'UNIQUE'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'columns_priv', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'db', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'event', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'func', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'help_category', 'PRIMARY KEY'),
(NULL, 'mysql', 'name', 'mysql', 'help_category', 'UNIQUE'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'help_keyword', 'PRIMARY KEY'),
(NULL, 'mysql', 'name', 'mysql', 'help_keyword', 'UNIQUE'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'help_relation', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'help_topic', 'PRIMARY KEY'),
(NULL, 'mysql', 'name', 'mysql', 'help_topic', 'UNIQUE'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'host', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'ndb_binlog_index', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'plugin', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'proc', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'procs_priv', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'servers', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'tables_priv', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'time_zone', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'time_zone_leap_second', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'time_zone_name', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'time_zone_transition', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'time_zone_transition_type', 'PRIMARY KEY'),
(NULL, 'mysql', 'PRIMARY', 'mysql', 'user', 'PRIMARY KEY');

-- --------------------------------------------------------

--
-- Table structure for table `TABLE_PRIVILEGES`
--

CREATE TEMPORARY TABLE `TABLE_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `TABLE_STATISTICS`
--

CREATE TEMPORARY TABLE `TABLE_STATISTICS` (
  `TABLE_SCHEMA` varchar(192) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(192) NOT NULL DEFAULT '',
  `ROWS_READ` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_CHANGED` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_CHANGED_X_INDEXES` bigint(21) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `TRIGGERS`
--

CREATE TEMPORARY TABLE `TRIGGERS` (
  `TRIGGER_CATALOG` varchar(512) DEFAULT NULL,
  `TRIGGER_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TRIGGER_NAME` varchar(64) NOT NULL DEFAULT '',
  `EVENT_MANIPULATION` varchar(6) NOT NULL DEFAULT '',
  `EVENT_OBJECT_CATALOG` varchar(512) DEFAULT NULL,
  `EVENT_OBJECT_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `EVENT_OBJECT_TABLE` varchar(64) NOT NULL DEFAULT '',
  `ACTION_ORDER` bigint(4) NOT NULL DEFAULT '0',
  `ACTION_CONDITION` longtext,
  `ACTION_STATEMENT` longtext NOT NULL,
  `ACTION_ORIENTATION` varchar(9) NOT NULL DEFAULT '',
  `ACTION_TIMING` varchar(6) NOT NULL DEFAULT '',
  `ACTION_REFERENCE_OLD_TABLE` varchar(64) DEFAULT NULL,
  `ACTION_REFERENCE_NEW_TABLE` varchar(64) DEFAULT NULL,
  `ACTION_REFERENCE_OLD_ROW` varchar(3) NOT NULL DEFAULT '',
  `ACTION_REFERENCE_NEW_ROW` varchar(3) NOT NULL DEFAULT '',
  `CREATED` datetime DEFAULT NULL,
  `SQL_MODE` varchar(8192) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT '',
  `DATABASE_COLLATION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;

-- --------------------------------------------------------

--
-- Table structure for table `USER_PRIVILEGES`
--

CREATE TEMPORARY TABLE `USER_PRIVILEGES` (
  `GRANTEE` varchar(81) NOT NULL DEFAULT '',
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `PRIVILEGE_TYPE` varchar(64) NOT NULL DEFAULT '',
  `IS_GRANTABLE` varchar(3) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Dumping data for table `USER_PRIVILEGES`
--

INSERT INTO `USER_PRIVILEGES` (`GRANTEE`, `TABLE_CATALOG`, `PRIVILEGE_TYPE`, `IS_GRANTABLE`) VALUES
('''root''@''localhost''', NULL, 'SELECT', 'YES'),
('''root''@''localhost''', NULL, 'INSERT', 'YES'),
('''root''@''localhost''', NULL, 'UPDATE', 'YES'),
('''root''@''localhost''', NULL, 'DELETE', 'YES'),
('''root''@''localhost''', NULL, 'CREATE', 'YES'),
('''root''@''localhost''', NULL, 'DROP', 'YES'),
('''root''@''localhost''', NULL, 'RELOAD', 'YES'),
('''root''@''localhost''', NULL, 'SHUTDOWN', 'YES'),
('''root''@''localhost''', NULL, 'PROCESS', 'YES'),
('''root''@''localhost''', NULL, 'FILE', 'YES'),
('''root''@''localhost''', NULL, 'REFERENCES', 'YES'),
('''root''@''localhost''', NULL, 'INDEX', 'YES'),
('''root''@''localhost''', NULL, 'ALTER', 'YES'),
('''root''@''localhost''', NULL, 'SHOW DATABASES', 'YES'),
('''root''@''localhost''', NULL, 'SUPER', 'YES'),
('''root''@''localhost''', NULL, 'CREATE TEMPORARY TABLES', 'YES'),
('''root''@''localhost''', NULL, 'LOCK TABLES', 'YES'),
('''root''@''localhost''', NULL, 'EXECUTE', 'YES'),
('''root''@''localhost''', NULL, 'REPLICATION SLAVE', 'YES'),
('''root''@''localhost''', NULL, 'REPLICATION CLIENT', 'YES'),
('''root''@''localhost''', NULL, 'CREATE VIEW', 'YES'),
('''root''@''localhost''', NULL, 'SHOW VIEW', 'YES'),
('''root''@''localhost''', NULL, 'CREATE ROUTINE', 'YES'),
('''root''@''localhost''', NULL, 'ALTER ROUTINE', 'YES'),
('''root''@''localhost''', NULL, 'CREATE USER', 'YES'),
('''root''@''localhost''', NULL, 'EVENT', 'YES'),
('''root''@''localhost''', NULL, 'TRIGGER', 'YES'),
('''arbo40''@''%''', NULL, 'SELECT', 'YES'),
('''arbo40''@''%''', NULL, 'INSERT', 'YES'),
('''arbo40''@''%''', NULL, 'UPDATE', 'YES'),
('''arbo40''@''%''', NULL, 'DELETE', 'YES'),
('''arbo40''@''%''', NULL, 'CREATE', 'YES'),
('''arbo40''@''%''', NULL, 'DROP', 'YES'),
('''arbo40''@''%''', NULL, 'RELOAD', 'YES'),
('''arbo40''@''%''', NULL, 'SHUTDOWN', 'YES'),
('''arbo40''@''%''', NULL, 'PROCESS', 'YES'),
('''arbo40''@''%''', NULL, 'REFERENCES', 'YES'),
('''arbo40''@''%''', NULL, 'INDEX', 'YES'),
('''arbo40''@''%''', NULL, 'ALTER', 'YES'),
('''arbo40''@''%''', NULL, 'SHOW DATABASES', 'YES'),
('''arbo40''@''%''', NULL, 'SUPER', 'YES'),
('''arbo40''@''%''', NULL, 'CREATE TEMPORARY TABLES', 'YES'),
('''arbo40''@''%''', NULL, 'LOCK TABLES', 'YES'),
('''arbo40''@''%''', NULL, 'EXECUTE', 'YES'),
('''arbo40''@''%''', NULL, 'REPLICATION SLAVE', 'YES'),
('''arbo40''@''%''', NULL, 'REPLICATION CLIENT', 'YES'),
('''arbo40''@''%''', NULL, 'CREATE VIEW', 'YES'),
('''arbo40''@''%''', NULL, 'SHOW VIEW', 'YES'),
('''arbo40''@''%''', NULL, 'CREATE ROUTINE', 'YES'),
('''arbo40''@''%''', NULL, 'ALTER ROUTINE', 'YES'),
('''arbo40''@''%''', NULL, 'CREATE USER', 'YES'),
('''arbo40''@''%''', NULL, 'EVENT', 'YES'),
('''arbo40''@''%''', NULL, 'TRIGGER', 'YES');

-- --------------------------------------------------------

--
-- Table structure for table `USER_STATISTICS`
--

CREATE TEMPORARY TABLE `USER_STATISTICS` (
  `USER` varchar(48) NOT NULL DEFAULT '',
  `TOTAL_CONNECTIONS` int(11) NOT NULL DEFAULT '0',
  `CONCURRENT_CONNECTIONS` int(11) NOT NULL DEFAULT '0',
  `CONNECTED_TIME` int(11) NOT NULL DEFAULT '0',
  `BUSY_TIME` double NOT NULL DEFAULT '0',
  `CPU_TIME` double NOT NULL DEFAULT '0',
  `BYTES_RECEIVED` bigint(21) NOT NULL DEFAULT '0',
  `BYTES_SENT` bigint(21) NOT NULL DEFAULT '0',
  `BINLOG_BYTES_WRITTEN` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_READ` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_SENT` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_DELETED` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_INSERTED` bigint(21) NOT NULL DEFAULT '0',
  `ROWS_UPDATED` bigint(21) NOT NULL DEFAULT '0',
  `SELECT_COMMANDS` bigint(21) NOT NULL DEFAULT '0',
  `UPDATE_COMMANDS` bigint(21) NOT NULL DEFAULT '0',
  `OTHER_COMMANDS` bigint(21) NOT NULL DEFAULT '0',
  `COMMIT_TRANSACTIONS` bigint(21) NOT NULL DEFAULT '0',
  `ROLLBACK_TRANSACTIONS` bigint(21) NOT NULL DEFAULT '0',
  `DENIED_CONNECTIONS` bigint(21) NOT NULL DEFAULT '0',
  `LOST_CONNECTIONS` bigint(21) NOT NULL DEFAULT '0',
  `ACCESS_DENIED` bigint(21) NOT NULL DEFAULT '0',
  `EMPTY_QUERIES` bigint(21) NOT NULL DEFAULT '0'
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `VIEWS`
--

CREATE TEMPORARY TABLE `VIEWS` (
  `TABLE_CATALOG` varchar(512) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `VIEW_DEFINITION` longtext NOT NULL,
  `CHECK_OPTION` varchar(8) NOT NULL DEFAULT '',
  `IS_UPDATABLE` varchar(3) NOT NULL DEFAULT '',
  `DEFINER` varchar(77) NOT NULL DEFAULT '',
  `SECURITY_TYPE` varchar(7) NOT NULL DEFAULT '',
  `CHARACTER_SET_CLIENT` varchar(32) NOT NULL DEFAULT '',
  `COLLATION_CONNECTION` varchar(32) NOT NULL DEFAULT ''
) ENGINE=Aria DEFAULT CHARSET=utf8 PAGE_CHECKSUM=0;
--
-- Database: `mysql`
--
CREATE DATABASE `mysql` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci;
USE `mysql`;

-- --------------------------------------------------------

--
-- Table structure for table `columns_priv`
--

CREATE TABLE IF NOT EXISTS `columns_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Column_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`,`Column_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Column privileges';

-- --------------------------------------------------------

--
-- Table structure for table `db`
--

CREATE TABLE IF NOT EXISTS `db` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`,`User`),
  KEY `User` (`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Database privileges';

-- --------------------------------------------------------

--
-- Table structure for table `event`
--

CREATE TABLE IF NOT EXISTS `event` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `body` longblob NOT NULL,
  `definer` char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `execute_at` datetime DEFAULT NULL,
  `interval_value` int(11) DEFAULT NULL,
  `interval_field` enum('YEAR','QUARTER','MONTH','DAY','HOUR','MINUTE','WEEK','SECOND','MICROSECOND','YEAR_MONTH','DAY_HOUR','DAY_MINUTE','DAY_SECOND','HOUR_MINUTE','HOUR_SECOND','MINUTE_SECOND','DAY_MICROSECOND','HOUR_MICROSECOND','MINUTE_MICROSECOND','SECOND_MICROSECOND') DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `last_executed` datetime DEFAULT NULL,
  `starts` datetime DEFAULT NULL,
  `ends` datetime DEFAULT NULL,
  `status` enum('ENABLED','DISABLED','SLAVESIDE_DISABLED') NOT NULL DEFAULT 'ENABLED',
  `on_completion` enum('DROP','PRESERVE') NOT NULL DEFAULT 'DROP',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','IGNORE_BAD_TABLE_OPTIONS','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `originator` int(10) unsigned NOT NULL,
  `time_zone` char(64) CHARACTER SET latin1 NOT NULL DEFAULT 'SYSTEM',
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Events';

-- --------------------------------------------------------

--
-- Table structure for table `func`
--

CREATE TABLE IF NOT EXISTS `func` (
  `name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `ret` tinyint(1) NOT NULL DEFAULT '0',
  `dl` char(128) COLLATE utf8_bin NOT NULL DEFAULT '',
  `type` enum('function','aggregate') CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User defined functions';

-- --------------------------------------------------------

--
-- Table structure for table `general_log`
--

CREATE TABLE IF NOT EXISTS `general_log` (
  `event_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_host` mediumtext NOT NULL,
  `thread_id` int(11) NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `command_type` varchar(64) NOT NULL,
  `argument` mediumtext NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='General log';

-- --------------------------------------------------------

--
-- Table structure for table `help_category`
--

CREATE TABLE IF NOT EXISTS `help_category` (
  `help_category_id` smallint(5) unsigned NOT NULL DEFAULT '0',
  `name` varchar(64) NOT NULL DEFAULT '',
  `parent_category_id` smallint(5) unsigned DEFAULT NULL,
  `url` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`help_category_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help categories';

--
-- Dumping data for table `help_category`
--

INSERT INTO `help_category` (`help_category_id`, `name`, `parent_category_id`, `url`) VALUES
(0, 'MBR', 20, ''),
(1, 'Data Definition', 12, ''),
(2, 'Column Types', 12, ''),
(3, 'WKB', 20, ''),
(4, 'Encryption Functions', 21, ''),
(5, 'GeometryCollection properties', 20, ''),
(6, 'Geometry constructors', 20, ''),
(7, 'Administration', 12, ''),
(8, 'Data Manipulation', 12, ''),
(9, 'LineString properties', 20, ''),
(10, 'Numeric Functions', 21, ''),
(11, 'Miscellaneous Functions', 21, ''),
(12, 'Contents', 0, ''),
(13, 'String Functions', 21, ''),
(14, 'Control flow functions', 21, ''),
(15, 'Polygon properties', 20, ''),
(16, 'WKT', 20, ''),
(17, 'Functions and Modifiers for Use with GROUP BY Clauses', 21, ''),
(18, 'Point properties', 20, ''),
(19, 'Bit Functions', 21, ''),
(20, 'Geographic features', 12, ''),
(21, 'Functions', 12, ''),
(22, 'Geometry properties', 20, ''),
(23, 'Date and Time Functions', 21, ''),
(24, 'Transactions', 12, ''),
(25, 'Logical operators', 21, ''),
(26, 'Comparison operators', 21, ''),
(27, 'Geometry relations', 20, ''),
(28, 'Information Functions', 21, '');

-- --------------------------------------------------------

--
-- Table structure for table `help_keyword`
--

CREATE TABLE IF NOT EXISTS `help_keyword` (
  `help_keyword_id` int(10) unsigned NOT NULL DEFAULT '0',
  `name` varchar(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`help_keyword_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help keywords';

--
-- Dumping data for table `help_keyword`
--

INSERT INTO `help_keyword` (`help_keyword_id`, `name`) VALUES
(0, 'MOD'),
(1, 'MASTER_SSL_KEY'),
(2, 'AGGREGATE'),
(3, 'MASTER_LOG_FILE'),
(4, 'CSV'),
(5, 'ENCLOSED'),
(6, 'FAST'),
(7, 'INDEXES'),
(8, 'SSL'),
(9, 'COMMENT'),
(10, 'LOW_PRIORITY'),
(11, 'LEADING'),
(12, 'ESCAPED'),
(13, 'YEAR_MONTH'),
(14, 'ALTER'),
(15, 'BIGINT'),
(16, 'RAID_TYPE'),
(17, 'MULTILINESTRINGFROMTEXT'),
(18, 'CASCADE'),
(19, 'IGNORE'),
(20, 'GEOMETRYFROMTEXT'),
(21, 'INTERVAL'),
(22, 'ENABLE'),
(23, 'ROLLBACK'),
(24, 'FALSE'),
(25, 'STD'),
(26, 'GROUP'),
(27, 'BOTH'),
(28, 'GEOMETRYCOLLECTIONFROMTEXT'),
(29, 'EXECUTE'),
(30, 'FULL'),
(31, 'USAGE'),
(32, 'DIRECTORY'),
(33, 'LONGTEXT'),
(34, 'UNIQUE'),
(35, 'MASTER_LOG_POS'),
(36, 'SQL_BIG_RESULT'),
(37, 'DESC'),
(38, 'SELECT'),
(39, 'BOOLEAN'),
(40, 'SHOW'),
(41, 'SONAME'),
(42, 'DES_KEY_FILE'),
(43, 'SESSION'),
(44, 'MODE'),
(45, 'DEFAULT'),
(46, 'COMMITTED'),
(47, 'CHANGE'),
(48, 'MAX'),
(49, 'MEDIUMTEXT'),
(50, 'FOR'),
(51, 'SQL_BUFFER_RESULT'),
(52, 'KEY'),
(53, 'SET'),
(54, 'SHA1'),
(55, 'MIN_ROWS'),
(56, 'INNOBASE'),
(57, 'DECIMAL'),
(58, 'GLOBAL'),
(59, 'NOT'),
(60, 'LAST'),
(61, 'TIMESTAMP'),
(62, 'LOGS'),
(63, 'INFILE'),
(64, 'VIEW'),
(65, 'SHUTDOWN'),
(66, 'NO'),
(67, 'PREV'),
(68, 'UNSIGNED'),
(69, 'CHAR'),
(70, 'DYNAMIC'),
(71, 'VARIABLE'),
(72, 'COMMIT'),
(73, 'ELSE'),
(74, 'REGEXP'),
(75, 'DEC'),
(76, 'VALUES'),
(77, 'FIXED'),
(78, 'HOSTS'),
(79, 'WHEN'),
(80, 'SHARE'),
(81, 'DISABLE'),
(82, 'LONGBINARY'),
(83, 'ENGINE'),
(84, 'VARCHARACTER'),
(85, 'STRING'),
(86, 'OUTFILE'),
(87, 'SLAVE'),
(88, 'INT1'),
(89, 'ON'),
(90, 'QUICK'),
(91, 'VALUE'),
(92, 'INT2'),
(93, 'INT3'),
(94, 'INT4'),
(95, 'BIT'),
(96, 'OR'),
(97, 'CONVERT'),
(98, 'AUTOCOMMIT'),
(99, 'SQL_CACHE'),
(100, 'INT8'),
(101, 'SQL_LOG_BIN'),
(102, 'WRITE'),
(103, 'UNLOCK'),
(104, 'USE'),
(105, 'TERMINATED'),
(106, 'COLUMN'),
(107, 'OUTER'),
(108, 'TIME'),
(109, 'MAX_ROWS'),
(110, 'EXTENDED'),
(111, 'LINESTRINGFROMWKB'),
(112, 'RENAME'),
(113, 'ALL'),
(114, 'DAY_SECOND'),
(115, 'REPLICATION'),
(116, 'INTO'),
(117, 'WITH'),
(118, 'CEIL'),
(119, 'RIGHT'),
(120, 'HOUR'),
(121, 'COLUMNS'),
(122, 'FLUSH'),
(123, 'FLOOR'),
(124, 'SQL_CALC_FOUND_ROWS'),
(125, 'DATE_SUB'),
(126, 'SPATIAL'),
(127, 'IO_THREAD'),
(128, 'MYISAM'),
(129, 'BYTE'),
(130, 'AS'),
(131, 'SECURITY'),
(132, 'FULLTEXT'),
(133, 'PACK_KEYS'),
(134, 'CIPHER'),
(135, 'SECOND'),
(136, 'ERRORS'),
(137, 'NEXT'),
(138, 'MEDIUM'),
(139, 'FIRST'),
(140, 'AND'),
(141, 'REPEATABLE'),
(142, 'INSERT_METHOD'),
(143, 'DATABASE'),
(144, 'POW'),
(145, 'INDEX'),
(146, 'OPTION'),
(147, 'MIDDLEINT'),
(148, 'SIGNED'),
(149, 'BY'),
(150, 'DUPLICATE'),
(151, 'POLYGONFROMWKB'),
(152, 'AGAINST'),
(153, 'MASTER_HOST'),
(154, 'UNCOMMITTED'),
(155, 'REVOKE'),
(156, 'DATETIME'),
(157, 'FORCE'),
(158, 'SCHEMA'),
(159, 'SEPARATOR'),
(160, 'RETURNS'),
(161, 'DELETE'),
(162, 'CACHE'),
(163, 'COMPRESSED'),
(164, 'MASTER_SSL_CIPHER'),
(165, 'TRAILING'),
(166, 'LINES'),
(167, 'SQL_SLAVE_SKIP_COUNTER'),
(168, 'TYPE'),
(169, 'MAX_QUERIES_PER_HOUR'),
(170, 'PROCEDURE'),
(171, 'MASTER_SSL_CERT'),
(172, 'MASTER_USER'),
(173, 'START'),
(174, 'BTREE'),
(175, 'CHECKSUM'),
(176, 'INSERT'),
(177, 'DROP'),
(178, 'TABLES'),
(179, 'SOUNDS'),
(180, 'MASTER_SSL_CA'),
(181, 'FILE'),
(182, 'ROW_FORMAT'),
(183, 'RTREE'),
(184, 'UPDATE'),
(185, 'TO'),
(186, 'GEOMETRYFROMWKB'),
(187, 'BEGIN'),
(188, 'LINESTRINGFROMTEXT.'),
(189, 'USING'),
(190, 'BETWEEN'),
(191, 'MASTER'),
(192, 'STARTING'),
(193, 'MULTIPOINTFROMWKB'),
(194, 'LONG'),
(195, 'MERGE'),
(196, 'RESTRICT'),
(197, 'ISOLATION'),
(198, 'PASSWORD'),
(199, 'CREATE'),
(200, 'X509'),
(201, 'HOUR_SECOND'),
(202, 'PRIVILEGES'),
(203, 'NULL'),
(204, 'DAY_HOUR'),
(205, 'READ'),
(206, 'MASTER_SSL'),
(207, 'MASTER_PASSWORD'),
(208, 'LIMIT'),
(209, 'SERIAL'),
(210, 'HIGH_PRIORITY'),
(211, 'REAL'),
(212, 'MIN'),
(213, 'PRIMARY'),
(214, 'LIKE'),
(215, 'BINARY'),
(216, 'FUNCTION'),
(217, 'STOP'),
(218, 'SQL_SMALL_RESULT'),
(219, 'WARNINGS'),
(220, 'CHANGED'),
(221, 'RAID_CHUNKS'),
(222, 'MULTIPOINTFROMTEXT'),
(223, 'THEN'),
(224, 'DAY_MINUTE'),
(225, 'STRAIGHT_JOIN'),
(226, 'FIELDS'),
(227, 'DELAYED'),
(228, 'MEMORY'),
(229, 'DATA'),
(230, 'ORDER'),
(231, 'INNER'),
(232, 'AES_ENCRYPT'),
(233, 'DATE'),
(234, 'POLYGONFROMTEXT'),
(235, 'MULTILINESTRINGFROMWKB'),
(236, 'NO_WRITE_TO_BINLOG'),
(237, 'SCHEMAS'),
(238, 'MASTER_CONNECT_RETRY'),
(239, 'ISAM'),
(240, 'OPTIONALLY'),
(241, 'MULTIPOLYGONFROMTEXT'),
(242, 'RAID0'),
(243, 'MINUTE'),
(244, 'OPEN'),
(245, 'QUERY'),
(246, 'AVG_ROW_LENGTH'),
(247, 'ASC'),
(248, 'LEVEL'),
(249, 'VARIABLES'),
(250, 'PROCESSLIST'),
(251, 'WHERE'),
(252, 'RELAY_LOG_FILE'),
(253, 'HAVING'),
(254, 'ACTION'),
(255, 'CHECK'),
(256, 'HEAP'),
(257, 'LOAD'),
(258, 'REFERENCES'),
(259, 'ENGINES'),
(260, 'ADD'),
(261, 'MULTIPOLYGONFROMWKB'),
(262, 'BOOL'),
(263, 'MINUTE_SECOND'),
(264, 'PARTIAL'),
(265, 'RELAY_LOG_POS'),
(266, 'GRANTS'),
(267, 'SUPER'),
(268, 'TYPES'),
(269, 'CLOSE'),
(270, 'NATIONAL'),
(271, 'BINLOG'),
(272, 'REQUIRE'),
(273, 'PROCESS'),
(274, 'VARYING'),
(275, 'EXISTS'),
(276, 'TEMPORARY'),
(277, 'MONTH'),
(278, 'ZEROFILL'),
(279, 'COUNT'),
(280, 'MAX_CONNECTIONS_PER_HOUR'),
(281, 'LEFT'),
(282, 'NCHAR'),
(283, 'MATCH'),
(284, 'IF'),
(285, 'GEOMETRYCOLLECTIONFROMWKB'),
(286, 'USE_FRM'),
(287, 'ESCAPE'),
(288, 'DUMPFILE'),
(289, 'IN'),
(290, 'NATURAL'),
(291, 'REPLACE'),
(292, 'IS'),
(293, 'KEYS'),
(294, 'GRANT'),
(295, 'MAX_UPDATES_PER_HOUR'),
(296, 'DELAY_KEY_WRITE'),
(297, 'DISTINCT'),
(298, 'CONCURRENT'),
(299, 'RESET'),
(300, 'STATUS'),
(301, 'CONSTRAINT'),
(302, 'TRANSACTION'),
(303, 'SQL_THREAD'),
(304, 'OFFSET'),
(305, 'DATABASES'),
(306, 'BDB'),
(307, 'TABLE'),
(308, 'TINYTEXT'),
(309, 'LOCK'),
(310, 'FLOAT4'),
(311, 'PRECISION'),
(312, 'CHARACTER'),
(313, 'INTEGER'),
(314, 'FLOAT8'),
(315, 'MASTER_PORT'),
(316, 'SUBJECT'),
(317, 'JOIN'),
(318, 'AFTER'),
(319, 'RAID_CHUNKSIZE'),
(320, 'FROM'),
(321, 'EVENTS'),
(322, 'RELOAD'),
(323, 'END'),
(324, 'USER_RESOURCES'),
(325, 'BERKELEYDB'),
(326, 'SAVEPOINT'),
(327, 'DISTINCTROW'),
(328, 'INNODB'),
(329, 'STRIPED'),
(330, 'TRUE'),
(331, 'WORK'),
(332, 'DATE_ADD'),
(333, 'MODIFY'),
(334, 'CROSS'),
(335, 'FOREIGN'),
(336, 'LOCAL'),
(337, 'HOUR_MINUTE'),
(338, 'NONE'),
(339, 'YEAR'),
(340, 'MRG_MYISAM'),
(341, 'IDENTIFIED'),
(342, 'BACKUP'),
(343, 'SERIALIZABLE'),
(344, '<>'),
(345, 'ISSUER'),
(346, 'IMPORT'),
(347, 'DAY'),
(348, 'CLIENT'),
(349, 'SQL_NO_CACHE');

-- --------------------------------------------------------

--
-- Table structure for table `help_relation`
--

CREATE TABLE IF NOT EXISTS `help_relation` (
  `help_topic_id` int(10) unsigned NOT NULL DEFAULT '0',
  `help_keyword_id` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`help_keyword_id`,`help_topic_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='keyword-topic relation';

--
-- Dumping data for table `help_relation`
--

INSERT INTO `help_relation` (`help_topic_id`, `help_keyword_id`) VALUES
(27, 0),
(167, 1),
(253, 2),
(167, 3),
(202, 4),
(202, 5),
(290, 6),
(55, 7),
(341, 8),
(20, 9),
(192, 10),
(194, 10),
(202, 10),
(221, 10),
(354, 10),
(381, 10),
(76, 11),
(202, 12),
(5, 13),
(2, 14),
(142, 14),
(309, 14),
(341, 14),
(205, 15),
(20, 16),
(66, 17),
(20, 18),
(143, 18),
(152, 18),
(353, 18),
(2, 19),
(54, 19),
(192, 19),
(202, 19),
(221, 19),
(358, 19),
(348, 20),
(5, 21),
(2, 22),
(361, 23),
(380, 23),
(35, 24),
(162, 25),
(54, 26),
(76, 27),
(256, 28),
(341, 29),
(20, 30),
(55, 30),
(341, 31),
(20, 32),
(375, 33),
(2, 34),
(167, 35),
(54, 36),
(25, 37),
(54, 37),
(82, 37),
(144, 38),
(381, 38),
(238, 39),
(335, 39),
(1, 40),
(174, 40),
(204, 40),
(234, 40),
(331, 40),
(253, 41),
(131, 42),
(62, 43),
(241, 43),
(54, 44),
(335, 44),
(2, 45),
(20, 45),
(192, 45),
(313, 45),
(241, 46),
(2, 47),
(167, 47),
(324, 48),
(3, 49),
(54, 50),
(55, 50),
(54, 51),
(2, 52),
(20, 52),
(142, 52),
(192, 52),
(353, 52),
(2, 53),
(15, 53),
(197, 53),
(221, 53),
(340, 53),
(353, 53),
(380, 53),
(381, 53),
(124, 54),
(20, 55),
(20, 56),
(334, 57),
(62, 58),
(241, 58),
(340, 58),
(26, 59),
(137, 59),
(153, 60),
(46, 61),
(69, 61),
(55, 62),
(204, 62),
(202, 63),
(143, 64),
(309, 64),
(341, 65),
(20, 66),
(353, 66),
(153, 67),
(23, 68),
(170, 68),
(186, 68),
(187, 68),
(238, 68),
(312, 68),
(334, 68),
(186, 69),
(377, 69),
(20, 70),
(62, 71),
(380, 72),
(175, 73),
(117, 74),
(334, 75),
(381, 76),
(20, 77),
(334, 77),
(55, 78),
(234, 78),
(175, 79),
(54, 80),
(2, 81),
(375, 82),
(2, 83),
(20, 83),
(278, 84),
(253, 85),
(54, 86),
(1, 87),
(32, 87),
(80, 87),
(126, 87),
(234, 87),
(238, 88),
(353, 89),
(358, 89),
(177, 90),
(194, 90),
(290, 90),
(313, 91),
(369, 92),
(14, 93),
(187, 94),
(238, 95),
(91, 96),
(186, 97),
(380, 98),
(54, 99),
(23, 100),
(197, 101),
(354, 102),
(354, 103),
(358, 104),
(202, 105),
(2, 106),
(358, 107),
(112, 108),
(169, 108),
(186, 108),
(20, 109),
(177, 110),
(290, 110),
(0, 111),
(2, 112),
(54, 113),
(280, 113),
(341, 113),
(5, 114),
(341, 115),
(54, 116),
(192, 116),
(381, 116),
(341, 117),
(75, 118),
(358, 119),
(5, 120),
(55, 121),
(165, 122),
(205, 123),
(54, 124),
(5, 125),
(2, 126),
(233, 126),
(32, 127),
(80, 127),
(20, 128),
(377, 129),
(54, 130),
(354, 130),
(358, 130),
(341, 131),
(2, 132),
(20, 132),
(233, 132),
(20, 133),
(341, 134),
(5, 135),
(55, 136),
(153, 137),
(290, 138),
(2, 139),
(20, 139),
(153, 139),
(209, 140),
(216, 140),
(241, 141),
(20, 142),
(55, 143),
(137, 143),
(322, 143),
(304, 144),
(2, 145),
(20, 145),
(55, 145),
(142, 145),
(233, 145),
(356, 145),
(358, 145),
(341, 146),
(14, 147),
(186, 148),
(2, 149),
(20, 149),
(54, 149),
(82, 149),
(194, 149),
(202, 149),
(221, 149),
(341, 149),
(192, 150),
(265, 151),
(335, 152),
(167, 153),
(241, 154),
(341, 155),
(186, 156),
(358, 157),
(15, 158),
(55, 158),
(137, 158),
(322, 158),
(82, 159),
(253, 160),
(20, 161),
(353, 161),
(165, 162),
(20, 163),
(167, 164),
(76, 165),
(202, 166),
(340, 167),
(2, 168),
(20, 168),
(341, 169),
(54, 170),
(167, 171),
(167, 172),
(32, 173),
(380, 173),
(233, 174),
(20, 175),
(192, 176),
(305, 176),
(2, 177),
(143, 177),
(152, 177),
(253, 177),
(322, 177),
(356, 177),
(55, 178),
(354, 178),
(4, 179),
(167, 180),
(341, 181),
(20, 182),
(233, 183),
(54, 184),
(192, 184),
(353, 184),
(167, 185),
(361, 185),
(248, 186),
(380, 187),
(102, 188),
(194, 189),
(358, 189),
(216, 190),
(31, 191),
(149, 191),
(167, 191),
(204, 191),
(329, 191),
(331, 191),
(202, 192),
(210, 193),
(375, 194),
(20, 195),
(143, 196),
(152, 196),
(353, 196),
(241, 197),
(341, 198),
(20, 199),
(55, 199),
(137, 199),
(142, 199),
(233, 199),
(253, 199),
(341, 200),
(5, 201),
(341, 202),
(116, 203),
(353, 203),
(5, 204),
(153, 205),
(241, 205),
(354, 205),
(167, 206),
(167, 207),
(54, 208),
(153, 208),
(174, 208),
(194, 208),
(221, 208),
(20, 209),
(313, 209),
(54, 210),
(192, 210),
(253, 211),
(312, 211),
(324, 212),
(2, 213),
(4, 214),
(55, 214),
(79, 215),
(186, 215),
(204, 215),
(278, 215),
(253, 216),
(80, 217),
(54, 218),
(55, 219),
(290, 220),
(20, 221),
(284, 222),
(175, 223),
(5, 224),
(54, 225),
(358, 225),
(55, 226),
(202, 226),
(192, 227),
(305, 227),
(381, 227),
(54, 228),
(20, 229),
(149, 229),
(202, 229),
(2, 230),
(54, 230),
(82, 230),
(194, 230),
(221, 230),
(358, 231),
(195, 232),
(5, 233),
(106, 233),
(186, 233),
(268, 233),
(266, 234),
(40, 235),
(18, 236),
(131, 236),
(177, 236),
(55, 237),
(167, 238),
(20, 239),
(202, 240),
(231, 241),
(20, 242),
(5, 243),
(55, 244),
(153, 244),
(165, 245),
(2, 246),
(20, 246),
(54, 247),
(82, 247),
(241, 248),
(55, 249),
(55, 250),
(153, 251),
(194, 251),
(221, 251),
(167, 252),
(54, 253),
(20, 254),
(353, 254),
(20, 255),
(20, 256),
(31, 257),
(149, 257),
(202, 257),
(20, 258),
(341, 258),
(353, 258),
(55, 259),
(2, 260),
(142, 260),
(300, 261),
(238, 262),
(5, 263),
(20, 264),
(167, 265),
(55, 266),
(341, 267),
(55, 268),
(153, 269),
(79, 270),
(278, 270),
(174, 271),
(341, 272),
(341, 273),
(278, 274),
(137, 275),
(143, 275),
(152, 275),
(322, 275),
(152, 276),
(5, 277),
(23, 278),
(170, 278),
(187, 278),
(238, 278),
(312, 278),
(334, 278),
(326, 279),
(341, 280),
(358, 281),
(79, 282),
(335, 283),
(137, 284),
(143, 284),
(152, 284),
(322, 284),
(302, 285),
(177, 286),
(251, 287),
(54, 288),
(54, 289),
(174, 289),
(335, 289),
(358, 290),
(202, 291),
(116, 292),
(2, 293),
(55, 293),
(341, 294),
(341, 295),
(20, 296),
(54, 297),
(82, 297),
(326, 297),
(202, 298),
(126, 299),
(165, 299),
(329, 299),
(1, 300),
(55, 300),
(331, 300),
(2, 301),
(20, 301),
(241, 302),
(380, 302),
(32, 303),
(80, 303),
(54, 304),
(55, 305),
(20, 306),
(18, 307),
(31, 307),
(55, 307),
(77, 307),
(142, 307),
(152, 307),
(177, 307),
(290, 307),
(352, 307),
(294, 308),
(54, 309),
(354, 309),
(170, 310),
(312, 311),
(15, 312),
(79, 312),
(278, 312),
(187, 313),
(253, 313),
(312, 314),
(167, 315),
(341, 316),
(54, 317),
(2, 318),
(20, 319),
(31, 320),
(54, 320),
(55, 320),
(76, 320),
(149, 320),
(174, 320),
(194, 320),
(174, 321),
(341, 322),
(175, 323),
(131, 324),
(20, 325),
(361, 326),
(54, 327),
(20, 328),
(55, 328),
(20, 329),
(35, 330),
(380, 331),
(5, 332),
(2, 333),
(358, 334),
(2, 335),
(20, 335),
(353, 335),
(18, 336),
(131, 336),
(177, 336),
(202, 336),
(354, 336),
(5, 337),
(341, 338),
(5, 339),
(20, 340),
(341, 341),
(77, 342),
(241, 343),
(97, 344),
(341, 345),
(202, 346),
(5, 347),
(341, 348),
(54, 349);

-- --------------------------------------------------------

--
-- Table structure for table `help_topic`
--

CREATE TABLE IF NOT EXISTS `help_topic` (
  `help_topic_id` int(10) unsigned NOT NULL DEFAULT '0',
  `name` varchar(64) NOT NULL DEFAULT '',
  `help_category_id` smallint(5) unsigned NOT NULL DEFAULT '0',
  `description` text NOT NULL,
  `example` text NOT NULL,
  `url` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`help_topic_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='help topics';

--
-- Dumping data for table `help_topic`
--

INSERT INTO `help_topic` (`help_topic_id`, `name`, `help_category_id`, `description`, `example`, `url`) VALUES
(0, 'LINEFROMWKB', 3, '   LineFromWKB(@var{wkb}[,@var{srid}])\n   LineStringFromWKB(@var{wkb}[,@var{srid}])\nConstructs a LINESTRING value using its WKB representation and SRID.\n', '', ''),
(1, 'SHOW SLAVE STATUS', 7, 'SHOW SLAVE STATUS\n\nProvides status information on\nessential parameters of the slave threads. If you issue this statement using\nthe\n@command{mysql} client, you can use a \\G statement terminator rather than\nsemicolon to get a more readable vertical layout:\n\nmysql> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n       Slave_IO_State: Waiting for master to send event\n          Master_Host: localhost\n          Master_User: root\n          Master_Port: 3306\n        Connect_Retry: 3\n      Master_Log_File: gbichot-bin.005\n  Read_Master_Log_Pos: 79\n       Relay_Log_File: gbichot-relay-bin.005\n        Relay_Log_Pos: 548\nRelay_Master_Log_File: gbichot-bin.005\n     Slave_IO_Running: Yes\n    Slave_SQL_Running: Yes\n      Replicate_Do_DB:\n  Replicate_Ignore_DB:\n           Last_Errno: 0\n           Last_Error:\n         Skip_Counter: 0\n  Exec_Master_Log_Pos: 79\n      Relay_Log_Space: 552\n      Until_Condition: None\n       Until_Log_File:\n        Until_Log_Pos: 0\n   Master_SSL_Allowed: No\n   Master_SSL_CA_File:\n   Master_SSL_CA_Path:\n      Master_SSL_Cert:\n    Master_SSL_Cipher:\n       Master_SSL_Key:\nSeconds_Behind_Master: 8\n', '', ''),
(2, 'ALTER TABLE', 1, 'ALTER TABLE allows you to change the structure of an existing table.\nFor example, you can add or delete columns, create or destroy indexes, change\nthe type of existing columns, or rename columns or the table itself.  You can\nalso change the comment for the table and type of the table.\n', 'ALTER [IGNORE] TABLE @var{tbl_name}\n    @var{alter_specification} [, @var{alter_specification}] ...\n\n@var{alter_specification}:\n    ADD [COLUMN] @var{column_definition} [FIRST | AFTER @var{col_name} ]\n  | ADD [COLUMN] (@var{column_definition},...)\n  | ADD INDEX [@var{index_name}] [@var{index_type}] (@var{index_col_name},...)\n  | ADD [CONSTRAINT [@var{symbol}]]\n        PRIMARY KEY [@var{index_type}] (@var{index_col_name},...)\n  | ADD [CONSTRAINT [@var{symbol}]]\n        UNIQUE [@var{index_name}] [@var{index_type}] (@var{index_col_name},...)\n  | ADD [FULLTEXT|SPATIAL] [@var{index_name}] (@var{index_col_name},...)\n  | ADD [CONSTRAINT [@var{symbol}]]\n        FOREIGN KEY [@var{index_name}] (@var{index_col_name},...)\n        [@var{reference_definition}]\n  | ALTER [COLUMN] @var{col_name} {SET DEFAULT @var{literal} | DROP DEFAULT}\n  | CHANGE [COLUMN] @var{old_col_name} @var{column_definition}\n        [FIRST|AFTER @var{col_name}]\n  | MODIFY [COLUMN] @var{column_definition} [FIRST | AFTER @var{col_name}]\n  | DROP [COLUMN] @var{col_name}\n  | DROP PRIMARY KEY\n  | DROP INDEX @var{index_name}\n  | DROP FOREIGN KEY @var{fk_symbol}\n  | DISABLE KEYS\n  | ENABLE KEYS\n  | RENAME [TO] @var{new_tbl_name}\n  | ORDER BY @var{col_name}\n  | CONVERT TO CHARACTER SET @var{charset_name} [COLLATE @var{collation_name}]\n  | [DEFAULT] CHARACTER SET @var{charset_name} [COLLATE @var{collation_name}]\n  | DISCARD TABLESPACE\n  | IMPORT TABLESPACE\n  | @var{table_options}', ''),
(3, 'MEDIUMBLOB', 2, '   MEDIUMBLOB\n   MEDIUMTEXT\n\nA BLOB or TEXT column with a maximum length of 16,777,215\n(2^24 @minus{} 1) characters.\n', '', ''),
(4, 'SOUNDS LIKE', 13, '   @var{expr1} SOUNDS LIKE @var{expr2}\n\nThis is the same as SOUNDEX(@var{expr1) = SOUNDEX(@var{expr2})}. It is\navailable only in MySQL 4.1 or later. \n', '', ''),
(5, 'DATE OPERATIONS', 23, '   DATE_ADD(@var{date},INTERVAL @var{expr} @var{type})\n   DATE_SUB(@var{date},INTERVAL @var{expr} @var{type})\n\nThese functions perform date arithmetic.\n@var{date} is a DATETIME or DATE value specifying the starting\ndate.  @var{expr} is an expression specifying the interval value to be added\nor subtracted from the starting date.  @var{expr} is a string; it may start\nwith a - for negative intervals.  @var{type} is a keyword indicating\nhow the expression should be interpreted.\n', 'mysql> SELECT ''1997-12-31 23:59:59'' + INTERVAL 1 SECOND;\n        -> ''1998-01-01 00:00:00''\nmysql> SELECT INTERVAL 1 DAY + ''1997-12-31'';\n        -> ''1998-01-01''\nmysql> SELECT ''1998-01-01'' - INTERVAL 1 SECOND;\n        -> ''1997-12-31 23:59:59''\nmysql> SELECT DATE_ADD(''1997-12-31 23:59:59'',\n    ->                 INTERVAL 1 SECOND);\n        -> ''1998-01-01 00:00:00''\nmysql> SELECT DATE_ADD(''1997-12-31 23:59:59'',\n    ->                 INTERVAL 1 DAY);\n        -> ''1998-01-01 23:59:59''\nmysql> SELECT DATE_ADD(''1997-12-31 23:59:59'',\n    ->                 INTERVAL ''1:1'' MINUTE_SECOND);\n        -> ''1998-01-01 00:01:00''\nmysql> SELECT DATE_SUB(''1998-01-01 00:00:00'',\n    ->                 INTERVAL ''1 1:1:1'' DAY_SECOND);\n        -> ''1997-12-30 22:58:59''\nmysql> SELECT DATE_ADD(''1998-01-01 00:00:00'',\n    ->                 INTERVAL ''-1 10'' DAY_HOUR);\n        -> ''1997-12-30 14:00:00''\nmysql> SELECT DATE_SUB(''1998-01-02'', INTERVAL 31 DAY);\n        -> ''1997-12-02''\nmysql> SELECT DATE_ADD(''1992-12-31 23:59:59.000002'',\n    ->            INTERVAL ''1.999999'' SECOND_MICROSECOND);\n        -> ''1993-01-01 00:00:01.000001''', ''),
(6, 'POINTFROMTEXT', 16, '   PointFromText(@var{wkt}[,@var{srid}])\nConstructs a POINT value using its WKT representation and SRID.\n', '', ''),
(7, 'TAN', 10, '   TAN(@var{X})\nReturns the tangent of @var{X}, where @var{X} is given in radians.\n', 'mysql> SELECT TAN(PI()+1);\n        -> 1.557408', ''),
(8, 'DECODE', 4, '   DECODE(@var{crypt_str},@var{pass_str})\nDecrypts the encrypted string @var{crypt_str} using @var{pass_str} as the\npassword.  @var{crypt_str} should be a string returned from\nENCODE().\n', '', ''),
(9, 'DUAL', 21, 'SELECT ... FROM DUAL is an alias for SELECT ....\n(To be compatible with some other databases).\n', '', ''),
(10, 'VERSION', 28, '   VERSION()\nReturns a string that indicates the MySQL server version.\n', 'mysql> SELECT VERSION();\n        -> ''4.1.3-beta-log''', ''),
(11, 'FROM_UNIXTIME', 23, '   FROM_UNIXTIME(@var{unix_timestamp})\n   FROM_UNIXTIME(@var{unix_timestamp},@var{format})\nReturns a representation of the @var{unix_timestamp} argument as a value in\n''YYYY-MM-DD HH:MM:SS'' or YYYYMMDDHHMMSS format, depending on\nwhether the function is used in a string or numeric context.\n\nmysql> SELECT FROM_UNIXTIME(875996580);\n        -> ''1997-10-04 22:23:00''\nmysql> SELECT FROM_UNIXTIME(875996580) + 0;\n        -> 19971004222300\n\nIf @var{format} is given, the result is formatted according to the\n@var{format} string. @var{format} may contain the same specifiers as\nthose listed in the entry for the DATE_FORMAT() function.\n', 'mysql> SELECT FROM_UNIXTIME(UNIX_TIMESTAMP(),\n    ->                      ''%Y %D %M %h:%i:%s %x'');\n        -> ''2003 6th August 06:22:58 2003''', ''),
(12, 'RPAD', 13, '   RPAD(@var{str},@var{len},@var{padstr})\nReturns the string @var{str}, right-padded with the string @var{padstr}\nto a length of @var{len} characters. If @var{str} is longer\nthan @var{len}, the return value is shortened to @var{len} characters.\n', 'mysql> SELECT RPAD(''hi'',5,''?'');\n        -> ''hi???''\nmysql> SELECT RPAD(''hi'',1,''?'');\n        -> ''h''', ''),
(13, 'GET_FORMAT', 23, '   GET_FORMAT(DATE|TIME|DATETIME, ''EUR''|''USA''|''JIS''|''ISO''|''INTERNAL'')\nReturns a format string. This function is useful in combination with the \nDATE_FORMAT() and the STR_TO_DATE() functions.\nThe three possible values for the first argument \nand the five possible values for the second argument result in 15 possible \nformat strings (for the specifiers used, see the table in the \nDATE_FORMAT() function description).\n     Function Call 	 Result\n   GET_FORMAT(DATE,''USA'') 	 ''%m.%d.%Y''\n   GET_FORMAT(DATE,''JIS'') 	 ''%Y-%m-%d''\n   GET_FORMAT(DATE,''ISO'') 	 ''%Y-%m-%d''\n   GET_FORMAT(DATE,''EUR'') 	 ''%d.%m.%Y''\n   GET_FORMAT(DATE,''INTERNAL'') 	 ''%Y%m%d''\n   GET_FORMAT(DATETIME,''USA'') 	 ''%Y-%m-%d-%H.%i.%s''\n   GET_FORMAT(DATETIME,''JIS'') 	 ''%Y-%m-%d %H:%i:%s''\n   GET_FORMAT(DATETIME,''ISO'') 	 ''%Y-%m-%d %H:%i:%s''\n   GET_FORMAT(DATETIME,''EUR'') 	 ''%Y-%m-%d-%H.%i.%s''\n   GET_FORMAT(DATETIME,''INTERNAL'') 	 ''%Y%m%d%H%i%s''\n   GET_FORMAT(TIME,''USA'') 	 ''%h:%i:%s %p''\n   GET_FORMAT(TIME,''JIS'') 	 ''%H:%i:%s''\n   GET_FORMAT(TIME,''ISO'') 	 ''%H:%i:%s''\n   GET_FORMAT(TIME,''EUR'') 	 ''%H.%i.%S''\n   GET_FORMAT(TIME,''INTERNAL'') 	 ''%H%i%s''\n  \nISO format is ISO 9075, not ISO 8601.\n\nAs of MySQL 4.1.4, TIMESTAMP can also be used;\nGET_FORMAT() returns the same values as for DATETIME.\n', 'mysql> SELECT DATE_FORMAT(''2003-10-03'',GET_FORMAT(DATE,''EUR''));\n        -> ''03.10.2003''\nmysql> SELECT STR_TO_DATE(''10.31.2003'',GET_FORMAT(DATE,''USA''));\n        -> 2003-10-31\n@c Following is commented out because not yet implemented\n@c mysql> SET DATE_FORMAT=GET_FORMAT(DATE, ''USA''); SELECT ''2003-10-31'';\n@c         -> 10-31-2003', ''),
(14, 'MEDIUMINT', 2, '   MEDIUMINT[(@var{M})] [UNSIGNED] [ZEROFILL]\n\nA medium-size integer. The signed range is -8388608 to\n8388607. The unsigned range is 0 to 16777215.\n', '', ''),
(15, 'ALTER DATABASE', 1, '\nALTER DATABASE allows you to change the overall characteristics of a\ndatabase.  These characteristics are stored in the *db.opt file in the\ndatabase directory.\nTo use ALTER DATABASE, you need the ALTER privilege on the\ndatabase.\n', 'ALTER {DATABASE | SCHEMA} @var{db_name}\n    @var{alter_specification} [, @var{alter_specification}] ...\n\n@var{alter_specification}:\n    [DEFAULT] CHARACTER SET @var{charset_name}\n  | [DEFAULT] COLLATE @var{collation_name}', ''),
(16, 'CHARACTER_LENGTH', 13, '   CHARACTER_LENGTH(@var{str})\n\nCHARACTER_LENGTH() is a synonym for CHAR_LENGTH().\n', '', ''),
(17, 'SHOW CREATE VIEW', 8, 'This statement shows a CREATE VIEW statement that will create\nthe given view.\n', 'SHOW CREATE VIEW @var{view_name}', ''),
(18, 'ANALYZE', 7, 'This statement analyzes and stores the key distribution for a table.\nDuring the analysis, the table is locked with a read lock.  This works on\nMyISAM and BDB tables and (as of MySQL 4.0.13) InnoDB\ntables. For MyISAM tables, this\nstatement is equivalent to using @command{myisamchk -a}.\n\nMySQL uses the stored key distribution to decide the order in which\ntables should be joined when you perform a join on something other than a\nconstant.\n', 'ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE @var{tbl_name} [, @var{tbl_name}] ...', ''),
(19, 'LN', 10, '   LN(@var{X})\nReturns the natural logarithm of @var{X}.\n', 'mysql> SELECT LN(2);\n        -> 0.693147\nmysql> SELECT LN(-2);\n        -> NULL', ''),
(20, 'CREATE TABLE', 1, 'CREATE TABLE creates a table with the given name.\nYou must have the CREATE privilege for the table.\n\nRules for allowable table names are given in [Legal names].  \nBy default, the table is created in the current database.  \nAn error occurs if the table already exists, if there is no current database,\nor if the database does not exist.\n', 'CREATE [TEMPORARY] TABLE [IF NOT EXISTS] @var{tbl_name}\n    [(@var{create_definition},...)]\n    [@var{table_options}] [@var{select_statement}]', ''),
(21, 'CONNECTION_ID', 28, '   CONNECTION_ID()\nReturns the connection ID (thread ID) for the connection.\nEvery connection has its own unique ID.\n', 'mysql> SELECT CONNECTION_ID();\n        -> 23786', ''),
(22, 'YEARWEEK', 23, 'Returns year and week for a date.  The @var{start} argument works exactly\nlike the @var{start} argument to WEEK().  The year in the\nresult may be\ndifferent from the year in the date argument for the first and the last\nweek of the year.\n', 'mysql> SELECT YEARWEEK(''1987-01-01'');\n        -> 198653', ''),
(23, 'BIGINT', 2, '   BIGINT[(@var{M})] [UNSIGNED] [ZEROFILL]\nA large integer. The signed range is -9223372036854775808 to\n9223372036854775807. The unsigned range is 0 to\n18446744073709551615.\n', '', ''),
(24, 'LINESTRING', 6, '   LineString(@var{pt1},@var{pt2},...)\nConstructs a WKB LineString value from a number of WKB Point\narguments.  If any argument is not a WKB Point, the return value\nis NULL.  If the number of Point arguments is less than two,\nthe return value is NULL.\n', '', ''),
(25, 'DESCRIBE', 7, '{DESCRIBE | DESC} @var{tbl_name} [@var{col_name} | @var{wild}]\n\nDESCRIBE provides information about a table''s columns.  It is a\nshortcut for SHOW COLUMNS FROM.\n', '', ''),
(26, '!', 25, '   NOT\n   !\nLogical NOT.\nEvaluates to 1 if the operand is 0,\nto 0 if the operand is non-zero,\nand NOT NULL returns NULL.\n', 'mysql> SELECT NOT 10;\n        -> 0\nmysql> SELECT NOT 0;\n        -> 1\nmysql> SELECT NOT NULL;\n        -> NULL\nmysql> SELECT ! (1+1);\n        -> 0\nmysql> SELECT ! 1+1;\n        -> 1', ''),
(27, '%', 10, '   MOD(@var{N},@var{M})\n   @var{N} % @var{M}\n   @var{N} MOD @var{M}\nModulo (like the % operator in C).\nReturns the remainder of @var{N} divided by @var{M}.\n', 'mysql> SELECT MOD(234, 10);\n        -> 4\nmysql> SELECT 253 % 7;\n        -> 1\nmysql> SELECT MOD(29,9);\n        -> 2\nmysql> SELECT 29 MOD 9;\n        -> 2', ''),
(28, 'INTERVAL', 26, '   INTERVAL(@var{N},@var{N1},@var{N2},@var{N3},...)\nReturns 0 if @var{N} < @var{N1}, 1 if @var{N} < @var{N2}\nand so on or -1 if @var{N} is NULL. All arguments are treated\nas integers.  It is required that @var{N1} < @var{N2} < @var{N3} < \n... < @var{Nn} for this function to work correctly. This is because\na binary search is used (very fast).\n', 'mysql> SELECT INTERVAL(23, 1, 15, 17, 30, 44, 200);\n        -> 3\nmysql> SELECT INTERVAL(10, 1, 10, 100, 1000);\n        -> 2\nmysql> SELECT INTERVAL(22, 23, 30, 44, 200);\n        -> 0', ''),
(29, '&', 19, '   &\nBitwise AND:\n', 'mysql> SELECT 29 & 15;\n        -> 13', ''),
(30, 'ACOS', 10, '   ACOS(@var{X})\nReturns the arc cosine of @var{X}, that is, the value whose cosine is\n@var{X}. Returns NULL if @var{X} is not in the range -1 to\n1.\n', 'mysql> SELECT ACOS(1);\n        -> 0.000000\nmysql> SELECT ACOS(1.0001);\n        -> NULL\nmysql> SELECT ACOS(0);\n        -> 1.570796', ''),
(31, 'LOAD TABLE FROM MASTER', 8, 'LOAD TABLE @var{tbl_name} FROM MASTER\n\nTransfers a copy of the table from master to the slave. This statement is\nimplemented mainly for debugging of LOAD DATA FROM MASTER.\nIt requires that the account used for connecting to the master server has the\nRELOAD and SUPER privileges on the master and the\nSELECT privilege on the master table to load.\nOn the slave side, the user that issues LOAD TABLE FROM MASTER should\nhave privileges to drop and create the table.\n\nThe conditions for LOAD DATA FROM MASTER apply here, too. For\nexample, LOAD TABLE FROM MASTER works only for MyISAM tables.\nThe timeout notes for LOAD DATA FROM MASTER apply as well.\n', '', ''),
(32, 'START SLAVE', 7, 'START SLAVE [@var{thread_type} [, @var{thread_type}] ... ]\nSTART SLAVE [SQL_THREAD] UNTIL\n    MASTER_LOG_FILE = ''@var{log_name}'', MASTER_LOG_POS = @var{log_pos}\nSTART SLAVE [SQL_THREAD] UNTIL\n    RELAY_LOG_FILE = ''@var{log_name}'', RELAY_LOG_POS = @var{log_pos}\n\nthread_type: IO_THREAD | SQL_THREAD\n\nSTART SLAVE with no options starts both of the slave threads.\nThe I/O thread reads queries from the master server and stores them in the\nrelay log.  The SQL thread reads the relay log and executes the\nqueries.\nSTART SLAVE requires the SUPER privilege.\n\nIf START SLAVE succeeds in starting the slave threads, it\nreturns without any error. However, even in that case, it might be that the slave\nthreads start and then later stop (for example, because they don''t manage to\nconnect to the master or read its binary logs, or some other\nproblem). START SLAVE will not warn you about this. You must\ncheck your slave''s error log for error messages generated by\nthe slave threads, or check that they are running fine with SHOW\nSLAVE STATUS.\n', '', ''),
(33, 'WEEKDAY', 23, '   WEEKDAY(@var{date})\nReturns the weekday index for\n@var{date} (0 = Monday, 1 = Tuesday, ... 6 = Sunday).\n', 'mysql> SELECT WEEKDAY(''1998-02-03 22:23:00'');\n        -> 1\nmysql> SELECT WEEKDAY(''1997-11-05'');\n        -> 2', ''),
(34, '*', 10, '   *\nMultiplication:\n', 'mysql> SELECT 3*5;\n        -> 15\nmysql> SELECT 18014398509481984*18014398509481984.0;\n        -> 324518553658426726783156020576256.0\nmysql> SELECT 18014398509481984*18014398509481984;\n        -> 0', ''),
(35, 'TRUE FALSE', 21, 'TRUE and FALSE added as alias for 1 and 0, respectively.\n', '', ''),
(36, 'TIME_TO_SEC', 23, '   TIME_TO_SEC(@var{time})\nReturns the @var{time} argument, converted to seconds.\n', 'mysql> SELECT TIME_TO_SEC(''22:23:00'');\n        -> 80580\nmysql> SELECT TIME_TO_SEC(''00:39:38'');\n        -> 2378', ''),
(37, 'SEC_TO_TIME', 23, '   SEC_TO_TIME(@var{seconds})\nReturns the @var{seconds} argument, converted to hours, minutes, and seconds,\nas a value in ''HH:MM:SS'' or HHMMSS format, depending on whether\nthe function is used in a string or numeric context.\n', 'mysql> SELECT SEC_TO_TIME(2378);\n        -> ''00:39:38''\nmysql> SELECT SEC_TO_TIME(2378) + 0;\n        -> 3938', ''),
(38, 'PERIOD_ADD', 23, '   PERIOD_ADD(@var{P},@var{N})\nAdds @var{N} months to period @var{P} (in the format YYMM or\nYYYYMM). Returns a value in the format YYYYMM.\nNote that the period argument @var{P} is /not/ a date value.\n', 'mysql> SELECT PERIOD_ADD(9801,2);\n        -> 199803', ''),
(39, '+', 10, '   +\nAddition:\n', 'mysql> SELECT 3+5;\n        -> 8', ''),
(40, 'MLINEFROMWKB', 3, '   MLineFromWKB(@var{wkb}[,@var{srid}])\n   MultiLineStringFromWKB(@var{wkb}[,@var{srid}])\nConstructs a MULTILINESTRING value using its WKB representation and SRID.\n', '', ''),
(41, 'CONVERT_TZ', 23, '   CONVERT_TZ(@var{dt},@var{from_tz},@var{to_tz})\n\nCONVERT_TZ()\nconverts a datetime value @var{dt} from time zone given by @var{from_tz}\nto the time zone given by @var{to_tz} and returns the resulting value.\nTime zones may be specified as described in [Time zone support].\nThis function returns NULL if the arguments are invalid.\n', 'mysql> SELECT CONVERT_TZ(''2004-01-01 12:00:00'',''GMT'',''MET'');\n        -> ''2004-01-01 13:00:00''\nmysql> SELECT CONVERT_TZ(''2004-01-01 12:00:00'',''+00:00'',''-07:00'');\n        -> ''2004-01-01 05:00:00''', ''),
(42, 'QUOTE', 13, '   QUOTE(@var{str})\nQuotes a string to produce a result that can be used as a properly escaped\ndata value in an SQL statement.  The string is returned surrounded by single\nquotes and with each instance of single quote (''), backslash (\\),\nASCII NUL, and Control-Z preceded by a backslash.  If the argument is\nNULL, the return value is the word ``NULL'''' without surrounding\nsingle quotes.\nThe QUOTE() function was added in MySQL 4.0.3.\n', 'mysql> SELECT QUOTE(''Don\\''t!'');\n        -> ''Don\\''t!''\nmysql> SELECT QUOTE(NULL);\n        -> NULL', ''),
(43, 'CREATE VIEW', 1, 'This statement creates a new view, or replaces an existing one if the\nOR REPLACE clause is given. The @var{select_statement} is a\nSELECT statement that provides the definition of the view.\nThe optional column list can be given to define explicit names for the\nview columns.\n\nWITH CHECK OPTION, if given, is parsed and ignored.\n', '', ''),
(44, '/', 10, '   /\nDivision:\n', 'mysql> SELECT 3/5;\n        -> 0.60', ''),
(45, 'LOG2', 10, '   LOG2(@var{X})\nReturns the base-2 logarithm of @var{X}.\n', 'mysql> SELECT LOG2(65536);\n        -> 16.000000\nmysql> SELECT LOG2(-100);\n        -> NULL', ''),
(46, 'TIMESTAMP FUNCTION', 23, '   TIMESTAMP(@var{expr})\n   TIMESTAMP(@var{expr},@var{expr2})\n\nWith one argument, returns the date or datetime expression @var{expr}\nas a datetime value.\nWith two arguments, adds the time expression @var{expr2} to the\ndate or datetime expression @var{expr} and returns a datetime value.\n', 'mysql> SELECT TIMESTAMP(''2003-12-31'');\n        -> ''2003-12-31 00:00:00''\nmysql> SELECT TIMESTAMP(''2003-12-31 12:00:00'',''12:00:00'');\n        -> ''2004-01-01 00:00:00''', ''),
(47, 'EXTRACT', 23, '   EXTRACT(@var{type} FROM @var{date})\n\nThe EXTRACT() function uses the same kinds of interval type\nspecifiers as DATE_ADD() or DATE_SUB(), but extracts parts\nfrom the date rather than performing date arithmetic.\n', 'mysql> SELECT EXTRACT(YEAR FROM ''1999-07-02'');\n       -> 1999\nmysql> SELECT EXTRACT(YEAR_MONTH FROM ''1999-07-02 01:02:03'');\n       -> 199907\nmysql> SELECT EXTRACT(DAY_MINUTE FROM ''1999-07-02 01:02:03'');\n       -> 20102\nmysql> SELECT EXTRACT(MICROSECOND\n    ->                FROM ''2003-01-02 10:30:00.00123'');\n        -> 123', ''),
(48, '>=', 26, '   >=\nGreater than or equal:\n', 'mysql> SELECT 2 >= 2;\n        -> 1', ''),
(49, '>>', 19, '   >>\nShifts a longlong (BIGINT) number to the right.\n', 'mysql> SELECT 4 >> 2;\n        -> 1', ''),
(50, '<', 26, '   <\nLess than:\n', 'mysql> SELECT 2 < 2;\n        -> 0', ''),
(51, '=', 26, '   =\nEqual:\n', 'mysql> SELECT 1 = 0;\n        -> 0\nmysql> SELECT ''0'' = 0;\n        -> 1\nmysql> SELECT ''0.0'' = 0;\n        -> 1\nmysql> SELECT ''0.01'' = 0;\n        -> 0\nmysql> SELECT ''.01'' = 0.01;\n        -> 1', ''),
(52, '>', 26, '   >\nGreater than:\n', 'mysql> SELECT 2 > 2;\n        -> 0', ''),
(53, 'DEGREES', 10, '   DEGREES(@var{X})\nReturns the argument @var{X}, converted from radians to degrees.\n', 'mysql> SELECT DEGREES(PI());\n        -> 180.000000', ''),
(54, 'SELECT', 8, 'SELECT is used to retrieve rows selected from one or more tables.\nSupport for UNION statements and subqueries is available as of MySQL\n4.0 and 4.1, respectively.\nSee [UNION,  , UNION] and [Subqueries].\n\n --- Each @var{select_expr} indicates a column you want to retrieve.\n\n --- @var{table_references} indicates the table or tables from which to retrieve rows.\nIts syntax is described in [JOIN,  , JOIN].\n\n --- @var{where_definition} consists of the keyword WHERE followed by\nan expression that indicates the condition or conditions that rows\nmust satisfy to be selected.\n\n\nSELECT can also be used to retrieve rows computed without reference to\nany table.  \n', 'SELECT\n    [ALL | DISTINCT | DISTINCTROW ]\n      [HIGH_PRIORITY]\n      [STRAIGHT_JOIN]\n      [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT]\n      [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS]\n    @var{select_expr}, ...\n    [INTO OUTFILE ''@var{file_name}'' @var{export_options}\n      | INTO DUMPFILE ''@var{file_name}'']\n    [FROM @var{table_references}\n      [WHERE @var{where_definition}]\n      [GROUP BY {@var{col_name} | @var{expr} | @var{position}}\n        [ASC | DESC], ... [WITH ROLLUP]]\n      [HAVING @var{where_definition}]\n      [ORDER BY {@var{col_name} | @var{expr} | @var{position}}\n        [ASC | DESC] , ...]\n      [LIMIT {[@var{offset},] @var{row_count} | @var{row_count} OFFSET @var{offset}}]\n      [PROCEDURE @var{procedure_name}(@var{argument_list})]\n      [FOR UPDATE | LOCK IN SHARE MODE]]', ''),
(55, 'SHOW', 7, '\nSET allows you to set variables and options.\n\nSHOW has many forms that provide information about databases,\ntables, columns, or status information about the server.\nThis section describes those following:\n\nSHOW [FULL] COLUMNS FROM @var{tbl_name} [FROM @var{db_name}] [LIKE ''@var{pattern}'']\nSHOW CREATE DATABASE @var{db_name}\nSHOW CREATE TABLE @var{tbl_name}\nSHOW DATABASES [LIKE ''@var{pattern}'']\nSHOW [STORAGE] ENGINES\nSHOW ERRORS [LIMIT [@var{offset},] @var{row_count}]\nSHOW GRANTS FOR @var{user}\nSHOW INDEX FROM @var{tbl_name} [FROM @var{db_name}]\nSHOW INNODB STATUS\nSHOW [BDB] LOGS\nSHOW PRIVILEGES\nSHOW [FULL] PROCESSLIST\nSHOW STATUS [LIKE ''@var{pattern}'']\nSHOW TABLE STATUS [FROM @var{db_name}] [LIKE ''@var{pattern}'']\nSHOW [OPEN] TABLES [FROM @var{db_name}] [LIKE ''@var{pattern}'']\nSHOW [GLOBAL | SESSION] VARIABLES [LIKE ''@var{pattern}'']\nSHOW WARNINGS [LIMIT [@var{offset},] @var{row_count}]\n\nIf the syntax for a given SHOW statement includes a LIKE\n''@var{pattern''} part, ''@var{pattern''} is a string that can contain the SQL %\nand _ wildcard characters.\nThe pattern is useful for restricting statement output to matching values.\n', '', ''),
(56, 'SUBSTRING', 13, '   SUBSTRING(@var{str},@var{pos})\n   SUBSTRING(@var{str} FROM @var{pos})\n   SUBSTRING(@var{str},@var{pos},@var{len})\n   SUBSTRING(@var{str} FROM @var{pos} FOR @var{len})\n\nThe forms without a @var{len} argument\nreturn a substring from string @var{str} starting at position @var{pos}.\nThe forms with a @var{len} argument\nreturn a substring @var{len} characters long from string @var{str},\nstarting at position @var{pos}.\nThe forms that use FROM are standard SQL syntax.\n', 'mysql> SELECT SUBSTRING(''Quadratically'',5);\n        -> ''ratically''\nmysql> SELECT SUBSTRING(''foobarbar'' FROM 4);\n        -> ''barbar''\nmysql> SELECT SUBSTRING(''Quadratically'',5,6);\n        -> ''ratica''', ''),
(57, 'OCTETLENGTH', 13, '   OCTET_LENGTH(@var{str})\n\nOCTET_LENGTH() is a synonym for LENGTH().\n', '', ''),
(58, 'INTERSECTS', 27, '   Intersects(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not @var{g1} spatially intersects\n@var{g2}.\n', '', ''),
(59, 'FROM_DAYS', 23, '   FROM_DAYS(@var{N})\nGiven a daynumber @var{N}, returns a DATE value.\n', 'mysql> SELECT FROM_DAYS(729669);\n        -> ''1997-10-07''', ''),
(60, 'DEFAULT', 11, '   DEFAULT(@var{col_name})\nReturns the default value for a table column.\nStarting from MySQL 5.0.2, you will get an error if the column doesn''t have\na default value.\n', 'mysql> UPDATE t SET i = DEFAULT(i)+1 WHERE id < 100;', ''),
(61, 'VARIANCE', 17, '   VARIANCE(@var{expr})\nReturns the standard variance of @var{expr} (considering rows as the\nwhole population, not as a sample; so it has the number of rows as\ndenominator). This is an extension to \nstandard SQL, available only in MySQL 4.1 or later.\n', '', ''),
(62, 'SET', 8, 'SET sets different types of variables that affect the operation of the\nserver or your client. It can be used to assign values to user variables or\nsystem variables.\n', 'SET @var{variable_assignment} [, @var{variable_assignment}] ...\n\n@var{variable_assignment}:\n      @var{user_var_name} = @var{expr}\n    | [GLOBAL | SESSION] @var{system_var_name} = @var{expr}\n    | @@[global. | session.]@var{system_var_name} = @var{expr}', ''),
(63, 'MBROVERLAPS', 0, '   MBROverlaps(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not the Minimum Bounding Rectangles of\nthe two geometries @var{g1} and @var{g2} overlap.\n', '', ''),
(64, 'EXPORT_SET', 13, '   EXPORT_SET(@var{bits},@var{on},@var{off}[,@var{separator}[,@var{number_of_bits}]])\nReturns a string in which for every bit set in the value @var{bits}, you\nget an @var{on} string and for every reset bit you get an @var{off}\nstring.  Bits in @var{bits} are examined from right to left (from low-order\nto high-order bits). Strings are added to the result from left to right,\nseparated by the @var{separator} string (default ,). The number of\nbits examined is given by @var{number_of_bits} (default 64).\n', 'mysql> SELECT EXPORT_SET(5,''Y'',''N'','','',4);\n        -> ''Y,N,Y,N''\nmysql> SELECT EXPORT_SET(6,''1'',''0'','','',10);\n        -> ''0,1,1,0,0,0,0,0,0,0''', ''),
(65, 'GEOMETRYTYPE', 22, '   GeometryType(@var{g})\nReturns as a string the name of the geometry type of which\nthe geometry instance @var{g} is a member.\nThe name will correspond to one of the instantiable Geometry subclasses.\n', 'mysql> SELECT GeometryType(GeomFromText(''POINT(1 1)''));\n+------------------------------------------+\n| GeometryType(GeomFromText(''POINT(1 1)'')) |\n+------------------------------------------+\n| POINT                                    |\n+------------------------------------------+', ''),
(66, 'MLINEFROMTEXT', 16, '   MLineFromText(@var{wkt}[,@var{srid}])\n   MultiLineStringFromText(@var{wkt}[,@var{srid}])\nConstructs a MULTILINESTRING value using its WKT representation and SRID.\n', '', ''),
(67, 'LAST_DAY', 23, '   LAST_DAY(@var{date})\n\nTakes a date or datetime value and returns the corresponding value for the\nlast day of the month.  Returns NULL if the argument is invalid.\n', 'mysql> SELECT LAST_DAY(''2003-02-05'');\n        -> ''2003-02-28''\nmysql> SELECT LAST_DAY(''2004-02-05'');\n        -> ''2004-02-29''\nmysql> SELECT LAST_DAY(''2004-01-01 01:01:01'');\n        -> ''2004-01-31''\nmysql> SELECT LAST_DAY(''2003-03-32'');\n        -> NULL', ''),
(68, 'NOW', 23, '   NOW()\n\nReturns the current date and time as a value in ''YYYY-MM-DD HH:MM:SS''\nor YYYYMMDDHHMMSS format, depending on whether the function is used in\na string or numeric context.\n', 'mysql> SELECT NOW();\n        -> ''1997-12-15 23:50:26''\nmysql> SELECT NOW() + 0;\n        -> 19971215235026', ''),
(69, 'TIMESTAMP', 2, '   TIMESTAMP[(@var{M})]\n\nA timestamp.  The range is ''1970-01-01 00:00:00'' to partway through the\nyear 2037.\n\nA TIMESTAMP column is useful for recording the date and time of an\nINSERT or UPDATE operation. The first TIMESTAMP column\nin a table is automatically set to the date and time of the most recent\noperation if you don''t assign it a value yourself.  You can also set any\nTIMESTAMP column to the current date and time by assigning it a\nNULL value.\n\nFrom MySQL 4.1 on, TIMESTAMP is returned as a string with the format\n''YYYY-MM-DD HH:MM:SS''. If you want to obtain the value as a number,\nyou should add +0 to the timestamp column. Different timestamp\ndisplay widths are not supported.\n\nIn MySQL 4.0 and earlier, TIMESTAMP values are displayed in\nYYYYMMDDHHMMSS, YYMMDDHHMMSS, YYYYMMDD, or YYMMDD\nformat, depending on whether @var{M} is 14 (or missing), 12,\n8, or 6, but allows you to assign values to TIMESTAMP\ncolumns using either strings or numbers.\nThe @var{M} argument affects only how a TIMESTAMP column is displayed,\nnot storage.  Its values always are stored using four bytes each.\nFrom MySQL 4.0.12, the --new option can be used\nto make the server behave as in MySQL 4.1.\n\nNote that TIMESTAMP(@var{M)} columns where @var{M} is 8 or 14 are reported to\nbe numbers, whereas other TIMESTAMP(@var{M)} columns are reported to be\nstrings.  This is just to ensure that you can reliably dump and restore\nthe table with these types.\n', '', ''),
(70, 'SUM', 17, '   SUM(@var{expr})\nReturns the sum of @var{expr}.  If the return set has no rows,\nSUM() returns NULL.\n', '', ''),
(71, 'NOT LIKE', 13, '   @var{expr} NOT LIKE @var{pat} [ESCAPE ''@var{escape-char}'']\n\nThis is the same as NOT (@var{expr LIKE @var{pat} [ESCAPE ''@var{escape-char}''])}.\n', '', ''),
(72, 'UNIX_TIMESTAMP', 23, '   UNIX_TIMESTAMP()\n   UNIX_TIMESTAMP(@var{date})\nIf called with no argument, returns a Unix timestamp (seconds since\n''1970-01-01 00:00:00'' GMT) as an unsigned integer. If\nUNIX_TIMESTAMP() is called with a @var{date} argument, it\nreturns the value of the argument as seconds since ''1970-01-01\n00:00:00'' GMT.  @var{date} may be a DATE string, a\nDATETIME string, a TIMESTAMP, or a number in the format\nYYMMDD or YYYYMMDD in local time.\n', 'mysql> SELECT UNIX_TIMESTAMP();\n        -> 882226357\nmysql> SELECT UNIX_TIMESTAMP(''1997-10-04 22:23:00'');\n        -> 875996580', ''),
(73, 'X', 18, '   X(@var{p})\nReturns the X-coordinate value for the point @var{p} as a double-precision\nnumber.\n', 'mysql> SELECT X(GeomFromText(''Point(56.7 53.34)''));\n+--------------------------------------+\n| X(GeomFromText(''Point(56.7 53.34)'')) |\n+--------------------------------------+\n|                                 56.7 |\n+--------------------------------------+', ''),
(74, 'Y', 18, '   Y(@var{p})\nReturns the Y-coordinate value for the point @var{p} as a double-precision\nnumber.\n', 'mysql> SELECT Y(GeomFromText(''Point(56.7 53.34)''));\n+--------------------------------------+\n| Y(GeomFromText(''Point(56.7 53.34)'')) |\n+--------------------------------------+\n|                                53.34 |\n+--------------------------------------+', ''),
(75, 'CEILING', 10, '   CEILING(@var{X})\n   CEIL(@var{X})\nReturns the smallest integer value not less than @var{X}.\n', 'mysql> SELECT CEILING(1.23);\n        -> 2\nmysql> SELECT CEIL(-1.23);\n        -> -1', ''),
(76, 'TRIM', 13, '   TRIM([{BOTH | LEADING | TRAILING} [@var{remstr}] FROM] @var{str})\n   TRIM(@var{remstr} FROM] @var{str})\nReturns the string @var{str} with all @var{remstr} prefixes and/or suffixes\nremoved. If none of the specifiers BOTH, LEADING, or\nTRAILING is given, BOTH is assumed. If @var{remstr} is optional\nand not specified, spaces are removed.\n', 'mysql> SELECT TRIM(''  bar   '');\n        -> ''bar''\nmysql> SELECT TRIM(LEADING ''x'' FROM ''xxxbarxxx'');\n        -> ''barxxx''\nmysql> SELECT TRIM(BOTH ''x'' FROM ''xxxbarxxx'');\n        -> ''bar''\nmysql> SELECT TRIM(TRAILING ''xyz'' FROM ''barxxyz'');\n        -> ''barx''', ''),
(77, 'BACKUP TABLE', 7, 'Note: This statement is deprecated. We are working on a better\nreplacement for it that will provide online backup capabilities.\nIn the meantime, the @command{mysqlhotcopy} script can be used instead.\n\nBACKUP TABLE copies to the backup directory the minimum number of\ntable files needed to restore the table, after flushing any buffered changes\nto disk. The statement works only for MyISAM tables.  It copies the\n*.frm definition  and *.MYD data files. The *.MYI\nindex file can be rebuilt from those two files.\nThe directory should be specified as a full pathname.\n', 'BACKUP TABLE @var{tbl_name} [, @var{tbl_name}] ... TO ''@var{/path/to/backup/directory}''', ''),
(78, '^', 19, '   ^\nBitwise XOR:\n', 'mysql> SELECT 1 ^ 1;\n        -> 0\nmysql> SELECT 1 ^ 0;\n        -> 1\nmysql> SELECT 11 ^ 3;\n        -> 8', ''),
(79, 'CHAR', 2, '   [NATIONAL] CHAR(@var{M}) [BINARY | ASCII | UNICODE]\n\nA fixed-length string that is always right-padded with spaces to the\nspecified length when stored.  @var{M} represents the column length.  The\nrange of @var{M} is 0 to 255 characters (1 to 255 prior to MySQL 3.23).\n\nNote: Trailing spaces are removed when CHAR values are\nretrieved.\n\nFrom MySQL 4.1.0, a CHAR column with a length specification greater\nthan 255 is converted to the smallest TEXT type that can hold values\nof the given length.  For example, CHAR(500) is converted to\nTEXT, and CHAR(200000) is converted to MEDIUMTEXT.\nThis is a compatibility feature.  However, this conversion causes the\ncolumn to become a variable-length column, and also affects trailing-space\nremoval.\n\nCHAR is shorthand for CHARACTER.\nNATIONAL CHAR (or its equivalent short form, NCHAR) is the\nstandard SQL way to define that a CHAR column should use the default\ncharacter set.  This is the default in MySQL.\n\nThe BINARY attribute causes sorting and comparisons to be\ncase sensitive.\n\nFrom MySQL 4.1.0 on, the ASCII attribute can be specified. It\nassigns the latin1 character set to a CHAR column.\n\nFrom MySQL 4.1.1 on, the UNICODE attribute can be specified. It\nassigns the ucs2 character set to a CHAR column.\n\nMySQL allows you to create a column of type CHAR(0). This is mainly\nuseful when you have to be compliant with some old applications that depend\non the existence of a column but that do not actually use the value.  This\nis also quite nice when you need a column that can take only two values: A\nCHAR(0) column that is not defined as NOT NULL occupies only\none bit and can take only the values NULL and '''' (the empty\nstring).\n\n   CHAR\nThis is a synonym for CHAR(1).\n', '', ''),
(80, 'STOP SLAVE', 7, 'STOP SLAVE [@var{thread_type} [, @var{thread_type}] ... ]\n\nthread_type: IO_THREAD | SQL_THREAD\n\nStops the slave threads.\nSTOP SLAVE requires the SUPER privilege.\n\nLike START SLAVE, as of MySQL 4.0.2, this statement\nmay be used with the IO_THREAD and SQL_THREAD options to name\nthe thread or threads to stop.\n', '', ''),
(81, 'COERCIBILITY', 28, '   COERCIBILITY(@var{str})\nReturns the collation coercibility value of the string argument.\n', 'mysql> SELECT COERCIBILITY(''abc'' COLLATE latin1_swedish_ci);\n        -> 0\nmysql> SELECT COERCIBILITY(''abc'');\n        -> 3\nmysql> SELECT COERCIBILITY(USER());\n        -> 2', ''),
(82, 'GROUP_CONCAT', 17, '   GROUP_CONCAT(@var{expr})\nThis function returns a string result with the concatenated values from a\ngroup.  The full syntax is as follows:\n\nGROUP_CONCAT([DISTINCT] @var{expr} [,@var{expr} ...]\n             [ORDER BY {@var{unsigned_integer} | @var{col_name} | @var{expr}}\n                 [ASC | DESC] [,@var{col_name} ...]]\n             [SEPARATOR @var{str_val}])\n', 'mysql> SELECT student_name,\n    ->     GROUP_CONCAT(test_score)\n    ->     FROM student \n    ->     GROUP BY student_name;', ''),
(83, 'DATE_FORMAT', 23, '   DATE_FORMAT(@var{date},@var{format})\nFormats the @var{date} value according to the @var{format} string. The\nfollowing specifiers may be used in the @var{format} string:\n\n     Specifier 	 Description\n   %a 	 Abbreviated weekday name (Sun..Sat)\n   %b 	 Abbreviated month name (Jan..Dec)\n   %c 	 Month, numeric (0..12)\n   %D 	 Day of the month with English suffix (0th, 1st, 2nd, 3rd, ...)\n   %d 	 Day of the month, numeric (00..31)\n   %e 	 Day of the month, numeric (0..31)\n   %f 	 Microseconds (000000..999999)\n   %H 	 Hour (00..23)\n   %h 	 Hour (01..12)\n   %I 	 Hour (01..12)\n   %i 	 Minutes, numeric (00..59)\n   %j 	 Day of year (001..366)\n   %k 	 Hour (0..23)\n   %l 	 Hour (1..12)\n   %M 	 Month name (January..December)\n   %m 	 Month, numeric (00..12)\n   %p 	 AM or PM\n   %r 	 Time, 12-hour (hh:mm:ss followed by AM or PM)\n   %S 	 Seconds (00..59)\n   %s 	 Seconds (00..59)\n   %T 	 Time, 24-hour (hh:mm:ss)\n   %U 	 Week (00..53), where Sunday is the first day of the week\n   %u 	 Week (00..53), where Monday is the first day of the week\n   %V 	 Week (01..53), where Sunday is the first day of the week; used with %X\n   %v 	 Week (01..53), where Monday is the first day of the week; used with %x\n   %W 	 Weekday name (Sunday..Saturday)\n   %w 	 Day of the week (0=Sunday..6=Saturday)\n   %X 	 Year for the week where Sunday is the first day of the week, numeric, four digits; used with %V\n   %x 	 Year for the week, where Monday is the first day of the week, numeric, four digits; used with %v\n   %Y 	 Year, numeric, four digits\n   %y 	 Year, numeric, two digits\n   %% 	 A literal %.\n  \n\nAll other characters are copied to the result without interpretation.\n\nThe %v, %V, %x, and %X format specifiers are\navailable as of MySQL 3.23.8.  %f is available as of MySQL 4.1.1.\n\nAs of MySQL 3.23, the % character is required before\nformat specifier characters.  In earlier versions of MySQL,\n% was optional.\n\nThe reason the ranges for the month and day specifiers begin with zero\nis that MySQL allows incomplete dates such as ''2004-00-00'' to be\nstored as of MySQL 3.23.\n', 'mysql> SELECT DATE_FORMAT(''1997-10-04 22:23:00'', ''%W %M %Y'');\n        -> ''Saturday October 1997''\nmysql> SELECT DATE_FORMAT(''1997-10-04 22:23:00'', ''%H:%i:%s'');\n        -> ''22:23:00''\nmysql> SELECT DATE_FORMAT(''1997-10-04 22:23:00'',\n                          ''%D %y %a %d %m %b %j'');\n        -> ''4th 97 Sat 04 10 Oct 277''\nmysql> SELECT DATE_FORMAT(''1997-10-04 22:23:00'',\n                          ''%H %k %I %r %T %S %w'');\n        -> ''22 22 10 10:23:00 PM 22:23:00 00 6''\nmysql> SELECT DATE_FORMAT(''1999-01-01'', ''%X %V'');\n        -> ''1998 52''', ''),
(84, 'INTERIORRINGN', 15, '   InteriorRingN(@var{poly},@var{n})\nReturns the @var{n}-th interior ring for the Polygon value\n@var{poly} as a LineString.\nRing numbers begin at 1.\n', 'mysql> SET @poly =\n    -> ''Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))'';\nmysql> SELECT AsText(InteriorRingN(GeomFromText(@poly),1));\n+----------------------------------------------+\n| AsText(InteriorRingN(GeomFromText(@poly),1)) |\n+----------------------------------------------+\n| LINESTRING(1 1,1 2,2 2,2 1,1 1)              |\n+----------------------------------------------+', ''),
(85, 'IFNULL', 14, '   IFNULL(@var{expr1},@var{expr2})\nIf @var{expr1} is not NULL, IFNULL() returns @var{expr1},\nelse it returns @var{expr2}.  IFNULL() returns a numeric or string\nvalue, depending on the context in which it is used.\n', 'mysql> SELECT IFNULL(1,0);\n        -> 1\nmysql> SELECT IFNULL(NULL,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,''yes'');\n        -> ''yes''', ''),
(86, 'TYPE SET', 2, '   SET(''@var{value1}'',''@var{value2}'',...)\n\nA set.  A string object that can have zero or more values, each of which must\nbe chosen from the list of values ''@var{value1''}, ''@var{value2''},\n... A SET column can have a maximum of 64 members.\nSET values are represented internally as integers.\n  \n', '', ''),
(87, 'GRANT TYPES', 7, 'For the GRANT and REVOKE statements, priv_type can be\nspecified as any of the following:\n\n     Privilege 	 Meaning\n   ALL [PRIVILEGES] 	 Sets all simple privileges except GRANT OPTION\n   ALTER  	 Allows use of ALTER TABLE\n   CREATE 	 Allows use of CREATE TABLE\n   CREATE TEMPORARY TABLES 	 Allows use of CREATE TEMPORARY TABLE\n   CREATE VIEW 	 Allows use of CREATE VIEW\n   DELETE 	 Allows use of DELETE\n   DROP 	 Allows use of DROP TABLE\n   EXECUTE 	 Allows the user to run stored procedures (MySQL 5.0)\n   FILE 	 Allows use of SELECT ... INTO OUTFILE and LOAD DATA INFILE\n   INDEX 	 Allows use of CREATE INDEX and DROP INDEX\n   INSERT 	 Allows use of INSERT\n   LOCK TABLES 	 Allows use of LOCK TABLES on tables for which you have the SELECT privilege\n   PROCESS 	 Allows use of SHOW FULL PROCESSLIST\n   REFERENCES 	 Not yet implemented\n   RELOAD 	 Allows use of FLUSH\n   REPLICATION CLIENT 	 Allows the user to ask where the slave or master servers are\n   REPLICATION SLAVE 	 Needed for replication slaves (to read binary log events from the master)\n   SELECT 	 Allows use of SELECT\n   SHOW DATABASES 	 SHOW DATABASES shows all databases\n   SHOW VIEW 	 Allows use of SHOW CREATE VIEW\n   SHUTDOWN 	 Allows use of @command{mysqladmin shutdown}\n   SUPER 	 Allows use of CHANGE MASTER, KILL,\nPURGE MASTER LOGS, and SET GLOBAL statements, the @command{mysqladmin debug} command; allows you to connect (once) even if max_connections is reached\n   UPDATE 	 Allows use of UPDATE\n   USAGE 	 Synonym for ``no privileges''''\n   GRANT OPTION 	 Allows privileges to be granted\n  \n', '', ''),
(88, 'MBRWITHIN', 0, '   MBRWithin(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not the Minimum Bounding Rectangle\nof @var{g1} is within the Minimum Bounding Rectangle of @var{g2}.\n', 'mysql> SET @g1 = GeomFromText(''Polygon((0 0,0 3,3 3,3 0,0 0))'');\nmysql> SET @g2 = GeomFromText(''Polygon((0 0,0 5,5 5,5 0,0 0))'');\nmysql> SELECT MBRWithin(@g1,@g2), MBRWithin(@g2,@g1);\n+--------------------+--------------------+\n| MBRWithin(@g1,@g2) | MBRWithin(@g2,@g1) |\n+--------------------+--------------------+\n|                  1 |                  0 |\n+--------------------+--------------------+', ''),
(89, 'TIME_FORMAT', 23, '   TIME_FORMAT(@var{time},@var{format})\nThis is used like the DATE_FORMAT() function, but the\n@var{format} string may contain only those format specifiers that handle\nhours, minutes, and seconds.  Other specifiers produce a NULL value or\n0.\n', '', ''),
(90, 'LOAD INDEX', 8, 'The LOAD INDEX INTO CACHE statement preloads a table index into the\nkey cache to which it has been assigned by an explicit CACHE INDEX\nstatement, or into the default key cache otherwise.  LOAD INDEX INTO\nCACHE is used only for MyISAM tables.\n\nThe IGNORE LEAVES modifier causes only blocks for the non-leaf\nnodes of the index to be preloaded.\n', 'LOAD INDEX INTO CACHE\n  @var{tbl_index_list} [, @var{tbl_index_list}] ...\n\n@var{tbl_index_list}:\n  @var{tbl_name}\n    [[INDEX|KEY] (@var{index_name}[, @var{index_name}] ...)]\n    [IGNORE LEAVES]', ''),
(91, '||', 25, '   OR\n   ||\nLogical OR.\nEvaluates to 1 if any operand is non-zero,\nto NULL if any operand is NULL,\notherwise 0 is returned.\n', 'mysql> SELECT 1 || 1;\n        -> 1\nmysql> SELECT 1 || 0;\n        -> 1\nmysql> SELECT 0 || 0;\n        -> 0\nmysql> SELECT 0 || NULL;\n        -> NULL\nmysql> SELECT 1 || NULL;\n        -> 1', ''),
(92, 'BIN', 13, '   BIN(@var{N})\nReturns a string representation of the binary value of @var{N}, where\n@var{N} is a longlong (BIGINT) number.  This is equivalent to\nCONV(@var{N,10,2)}.  Returns NULL if @var{N} is NULL.\n', 'mysql> SELECT BIN(12);\n        -> ''1100''', ''),
(93, 'PERIOD_DIFF', 23, '   PERIOD_DIFF(@var{P1},@var{P2})\nReturns the number of months between periods @var{P1} and @var{P2}.\n@var{P1} and @var{P2} should be in the format YYMM or YYYYMM.\nNote that the period arguments @var{P1} and @var{P2} are /not/\ndate values.\n', 'mysql> SELECT PERIOD_DIFF(9802,199703);\n        -> 11', ''),
(94, '|', 19, '   |\nBitwise OR:\n', 'mysql> SELECT 29 | 15;\n        -> 31', ''),
(95, 'REVERSE', 13, '   REVERSE(@var{str})\nReturns the string @var{str} with the order of the characters reversed.\n', 'mysql> SELECT REVERSE(''abc'');\n        -> ''cba''', ''),
(96, '~', 19, '   ~\nInvert all bits.\n', 'mysql> SELECT 5 & ~1;\n        -> 4', ''),
(97, '!=', 26, '   <>\n   !=\nNot equal:\n', 'mysql> SELECT ''.01'' <> ''0.01'';\n        -> 1\nmysql> SELECT .01 <> ''0.01'';\n        -> 0\nmysql> SELECT ''zapp'' <> ''zappp'';\n        -> 1', ''),
(98, 'USER', 28, '   USER()\n\nReturns the current MySQL username and hostname.\n', 'mysql> SELECT USER();\n        -> ''davida@localhost''', ''),
(99, 'LOAD_FILE', 13, '   LOAD_FILE(@var{file_name})\nReads the file and returns the file contents as a string.  The file\nmust be located on the server, you must specify the full pathname to the\nfile, and you must have the FILE privilege.  The file must\nbe readable by all and be smaller than max_allowed_packet bytes.\n\nIf the file doesn''t exist or cannot be read because one of the preceding\nconditions is not satisfied, the function returns NULL.\n', 'mysql> UPDATE @var{tbl_name}\n           SET @var{blob_column}=LOAD_FILE(''/tmp/picture'')\n           WHERE id=1;', ''),
(100, 'RENAME TABLE', 1, 'RENAME TABLE @var{tbl_name} TO @var{new_tbl_name}\n    [, @var{tbl_name2} TO @var{new_tbl_name2}] ...\n\nThis statement renames one or more tables.  It was added in MySQL 3.23.23.\n\nThe rename operation is done atomically, which means that no other thread\ncan access any of the tables while the rename is running. For example,\nif you have an existing table old_table, you can create another\ntable new_table that has the same structure but is empty, and then\nreplace the existing table with the empty one as follows:\n', 'CREATE TABLE @var{new_table} (...);\nRENAME TABLE @var{old_table} TO @var{backup_table}, @var{new_table} TO @var{old_table};', ''),
(101, 'BIT_LENGTH', 13, '   BIT_LENGTH(@var{str})\nReturns the length of the string @var{str} in bits.\n', 'mysql> SELECT BIT_LENGTH(''text'');\n        -> 32', ''),
(102, 'LINEFROMTEXT', 16, '   LineFromText(@var{wkt}[,@var{srid}])\n   LineStringFromText(@var{wkt}[,@var{srid}])\nConstructs a LINESTRING value using its WKT representation and SRID.\n', '', ''),
(103, 'CURRENT_USER', 28, '   CURRENT_USER()\nReturns the username and hostname combination that the current session was authenticated\nas. This value corresponds to the MySQL account that determines your\naccess privileges. It can be different from the value of USER().\n', 'mysql> SELECT USER();\n        -> ''davida@localhost''\nmysql> SELECT * FROM mysql.user;\nERROR 1044: Access denied for user ''''@''localhost'' to\ndatabase ''mysql''\nmysql> SELECT CURRENT_USER();\n        -> ''@localhost''', ''),
(104, 'SYSTEM_USER', 28, '   SYSTEM_USER()\n\nSYSTEM_USER() is a synonym for USER().\n', '', ''),
(105, 'NUMGEOMETRIES', 5, '   NumGeometries(@var{gc})\nReturns the number of geometries in the GeometryCollection value\n@var{gc}.\n', 'mysql> SET @gc = ''GeometryCollection(Point(1 1),LineString(2 2, 3 3))'';\nmysql> SELECT NumGeometries(GeomFromText(@gc));\n+----------------------------------+\n| NumGeometries(GeomFromText(@gc)) |\n+----------------------------------+\n|                                2 |\n+----------------------------------+', ''),
(106, 'DATE FUNCTION', 23, '   DATE(@var{expr})\n\nExtracts the date part of the date or datetime expression @var{expr}.\n', 'mysql> SELECT DATE(''2003-12-31 01:02:03'');\n        -> ''2003-12-31''', ''),
(107, 'FIELD', 13, '   FIELD(@var{str},@var{str1},@var{str2},@var{str3},...)\nReturns the index of @var{str} in the @var{str1}, @var{str2},\n@var{str3}, ... list.\nReturns 0 if @var{str} is not found.\nFIELD() is the complement of ELT().\n', 'mysql> SELECT FIELD(''ej'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo'');\n        -> 2\nmysql> SELECT FIELD(''fo'', ''Hej'', ''ej'', ''Heja'', ''hej'', ''foo'');\n        -> 0', ''),
(108, 'MBRDISJOINT', 0, '   MBRDisjoint(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not the Minimum Bounding Rectangles of\nthe two geometries @var{g1} and @var{g2} are disjoint (do not intersect).\n', '', ''),
(109, 'MD5', 4, '   MD5(@var{str})\nCalculates an MD5 128-bit checksum for the string. The value is returned\nas a string of 32 hex digits,\nor NULL if the argument was NULL.\nThe return value can, for example, be used as a hash key.\n', 'mysql> SELECT MD5(''testing'');\n        -> ''ae2b1fca515949e5d54fb22b8ed95575''', ''),
(110, 'POLYGON', 6, '   Polygon(@var{ls1},@var{ls2},...)\nConstructs a WKB Polygon value from a number of WKB LineString\narguments. If any argument does not represent the WKB of a LinearRing\n(that is, not a closed and simple LineString) the return value\nis NULL.\n', '', ''),
(111, 'NOT IN', 26, '   @var{expr} NOT IN (@var{value},...)\nThis is the same as NOT (@var{expr IN (@var{value},...))}.\n', '', '');
INSERT INTO `help_topic` (`help_topic_id`, `name`, `help_category_id`, `description`, `example`, `url`) VALUES
(112, 'TIME', 2, '   TIME\n\nA time.  The range is ''-838:59:59'' to ''838:59:59''.\nMySQL displays TIME values in ''HH:MM:SS'' format, but\nallows you to assign values to TIME columns using either strings or\nnumbers.\n', '', ''),
(113, 'INSTR', 13, '   INSTR(@var{str},@var{substr})\nReturns the position of the first occurrence of substring @var{substr} in\nstring @var{str}. This is the same as the two-argument form of\nLOCATE(), except that the arguments are swapped.\n', 'mysql> SELECT INSTR(''foobarbar'', ''bar'');\n        -> 4\nmysql> SELECT INSTR(''xbar'', ''foobar'');\n        -> 0', ''),
(114, 'CURRENT_TIME', 23, '   CURRENT_TIME\n   CURRENT_TIME()\n\nCURRENT_TIME and CURRENT_TIME() are synonyms for\nCURTIME().\n', '', ''),
(115, 'MICROSECOND', 23, '   MICROSECOND(@var{expr})\n\nReturns the microseconds from the time or datetime expression @var{expr} as a\nnumber in the range from 0 to 999999.\n', 'mysql> SELECT MICROSECOND(''12:00:00.123456'');\n        -> 123456\nmysql> SELECT MICROSECOND(''1997-12-31 23:59:59.000010'');\n        -> 10', ''),
(116, 'IS NULL', 26, '   IS NULL\n   IS NOT NULL\nTests whether a value is or is not NULL.\n', 'mysql> SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL;\n        -> 0, 0, 1\nmysql> SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL;\n        -> 1, 1, 0', ''),
(117, 'RLIKE', 13, '   @var{expr} REGEXP @var{pat}\n   @var{expr} RLIKE @var{pat}\nPerforms a pattern match of a string expression @var{expr} against a pattern\n@var{pat}.  The pattern can be an extended regular expression.\nThe syntax for regular expressions is discussed in\n[Regexp].  Returns 1 if @var{expr} matches @var{pat}, otherwise\nreturns 0.  If either @var{expr} or @var{pat} is NULL,\nthe result is NULL.  RLIKE is a synonym for REGEXP,\nprovided for\nmSQL compatibility. Note: Because MySQL uses the C escape\nsyntax in strings (for example, \\n to represent newline), you must double any \\ that\nyou use in your REGEXP strings.  As of MySQL 3.23.4,\nREGEXP is not case sensitive for normal (not binary) strings.\n', 'mysql> SELECT ''Monty!'' REGEXP ''m%y%%'';\n        -> 0\nmysql> SELECT ''Monty!'' REGEXP ''.*'';\n        -> 1\nmysql> SELECT ''new*\\n*line'' REGEXP ''new\\\\*.\\\\*line'';\n        -> 1\nmysql> SELECT ''a'' REGEXP ''A'', ''a'' REGEXP BINARY ''A'';\n        -> 1  0\nmysql> SELECT ''a'' REGEXP ''^[a-d]'';\n        -> 1', ''),
(118, 'ADDTIME', 23, '   ADDTIME(@var{expr},@var{expr2})\n\n\nADDTIME() adds @var{expr2} to @var{expr} and returns the result.\n@var{expr} is a time or datetime expression, and @var{expr2} is a time\nexpression.\n', 'mysql> SELECT ADDTIME(''1997-12-31 23:59:59.999999'',\n    ->                ''1 1:1:1.000002'');\n        -> ''1998-01-02 01:01:01.000001''\nmysql> SELECT ADDTIME(''01:00:00.999999'', ''02:00:00.999998'');\n        -> ''03:00:01.999997''', ''),
(119, 'LOCATE', 13, '   LOCATE(@var{substr},@var{str})\n   LOCATE(@var{substr},@var{str},@var{pos})\n\nThe first syntax\nreturns the position of the first occurrence of substring @var{substr}\nin string @var{str}.\nThe second syntax\nreturns the position of the first occurrence of substring @var{substr} in\nstring @var{str}, starting at position @var{pos}.\nReturns 0 if @var{substr} is not in @var{str}.\n', '', ''),
(120, 'AREA', 15, '   Area(@var{poly})\nReturns as a double-precision number the area of the Polygon value\n@var{poly}, as measured in its spatial reference system.\n', 'mysql> SET @poly = ''Polygon((0 0,0 3,3 0,0 0),(1 1,1 2,2 1,1 1))'';\nmysql> SELECT Area(GeomFromText(@poly));\n+---------------------------+\n| Area(GeomFromText(@poly)) |\n+---------------------------+\n|                         4 |\n+---------------------------+', ''),
(121, 'PI', 10, '   PI()\nReturns the value of PI. The default number of decimals displayed is five, but\nMySQL internally uses the full double-precision value for PI.\n', 'mysql> SELECT PI();\n        -> 3.141593\nmysql> SELECT PI()+0.000000000000000000;\n        -> 3.141592653589793116', ''),
(122, 'UTC_TIME', 23, '   UTC_TIME\n   UTC_TIME()\nReturns the current UTC time as a value in ''HH:MM:SS'' or HHMMSS\nformat, depending on whether the function is used in a string or numeric\ncontext.\n', 'mysql> SELECT UTC_TIME(), UTC_TIME() + 0;\n        -> ''18:07:53'', 180753', ''),
(123, 'NOT BETWEEN', 26, '   @var{expr} NOT BETWEEN @var{min} AND @var{max}\nThis is the same as NOT (@var{expr BETWEEN @var{min} AND @var{max})}.\n', '', ''),
(124, 'SHA', 4, '   SHA1(@var{str})\n   SHA(@var{str})\nCalculates an SHA1 160-bit checksum for the string, as described in\nRFC 3174 (Secure Hash Algorithm). The value is returned as a string of 40 hex\ndigits, or NULL if the argument was NULL.\nOne of the possible uses for this function is as a hash key. You can\nalso use it as a cryptographically safe function for storing passwords.\n', 'mysql> SELECT SHA1(''abc'');\n        -> ''a9993e364706816aba3e25717850c26c9cd0d89d''', ''),
(125, 'CRC32', 10, '   CRC32(@var{expr})\nComputes a cyclic redundancy check value and returns a 32-bit unsigned value.\nThe result is NULL if the argument is NULL.\nThe argument is expected be a string and will be treated as one if it is not.\n', 'mysql> SELECT CRC32(''MySQL'');\n        -> 3259397556', ''),
(126, 'RESET SLAVE', 7, 'RESET SLAVE\n\nMakes the slave forget its replication position in the master''s binary logs.\nThis statement is meant to be used for a clean start: It deletes the\n*master.info and *relay-log.info files, all the relay logs,\nand starts a new relay log.\n\nNote: All relay logs are deleted, even if they have not been\ntotally executed by the slave SQL thread.  (This is a condition likely to\nexist on a replication slave if you have issued a STOP SLAVE\nstatement or if the slave is highly loaded.)\n\nConnection information stored in the *master.info file is immediately\nreset using any values specified in the corresponding startup options.\nThis information includes values such as master host, master port, master\nuser, and master password.  If the slave SQL thread was in the middle of\nreplicating temporary tables when it was stopped, and RESET SLAVE\nis issued, these replicated temporary tables are deleted on the slave.\n\nThis statement was named FLUSH SLAVE before MySQL 3.23.26.\n', '', ''),
(127, 'HOUR', 23, '   HOUR(@var{time})\nReturns the hour for @var{time}. The range of the return value will be\n0 to 23 for time-of-day values.\n', 'mysql> SELECT HOUR(''10:05:03'');\n        -> 10', ''),
(128, 'RIGHT', 13, '   RIGHT(@var{str},@var{len})\nReturns the rightmost @var{len} characters from the string @var{str}.\n', 'mysql> SELECT RIGHT(''foobarbar'', 4);\n        -> ''rbar''', ''),
(129, 'LOCALTIMESTAMP', 23, '   LOCALTIMESTAMP\n   LOCALTIMESTAMP()\n\nLOCALTIMESTAMP and LOCALTIMESTAMP() are synonyms for\nNOW().\n', '', ''),
(130, 'RELATED', 27, '   Related(@var{g1},@var{g2},@var{pattern_matrix})\nReturns 1 or 0 to indicate whether or not the spatial relationship specified\nby @var{pattern_matrix} exists between @var{g1} and @var{g2}.\nReturns @minus{}1 if the arguments are NULL.\nThe pattern matrix is a string. Its specification will be noted here if this\nfunction is implemented.\n', '', ''),
(131, 'FLUSH', 8, 'You should use the FLUSH statement if you want to clear some of the\ninternal caches MySQL uses.  To execute FLUSH, you must have\nthe RELOAD privilege.\n', 'FLUSH [LOCAL | NO_WRITE_TO_BINLOG] @var{flush_option} [, @var{flush_option}] ...', ''),
(132, 'FLOOR', 10, '   FLOOR(@var{X})\nReturns the largest integer value not greater than @var{X}.\n', 'mysql> SELECT FLOOR(1.23);\n        -> 1\nmysql> SELECT FLOOR(-1.23);\n        -> -2', ''),
(133, 'ATAN', 10, '   ATAN(@var{X})\nReturns the arc tangent of @var{X}, that is, the value whose tangent is\n@var{X}.\n', 'mysql> SELECT ATAN(2);\n        -> 1.107149\nmysql> SELECT ATAN(-2);\n        -> -1.107149', ''),
(134, 'SUBDATE', 23, '   SUBDATE(@var{date},INTERVAL @var{expr} @var{type})\n   SUBDATE(@var{expr},@var{days})\n\nWhen invoked with the INTERVAL form of the second argument,\nSUBDATE() is a synonym for DATE_SUB().\nFor information on the INTERVAL argument, see the\ndiscussion for DATE_ADD().\n\nmysql> SELECT DATE_SUB(''1998-01-02'', INTERVAL 31 DAY);\n        -> ''1997-12-02''\nmysql> SELECT SUBDATE(''1998-01-02'', INTERVAL 31 DAY);\n        -> ''1997-12-02''\n\nAs of MySQL 4.1.1, the second syntax is allowed, where @var{expr} is a date\nor datetime expression and @var{days} is the number of days to be\nsubtracted from @var{expr}.\n\nmysql> SELECT SUBDATE(''1998-01-02 12:00:00'', 31);\n        -> ''1997-12-02 12:00:00''\n', '', ''),
(135, 'CURDATE', 23, '   CURDATE()\n\nReturns the current date as a value in ''YYYY-MM-DD'' or YYYYMMDD\nformat, depending on whether the function is used in a string or numeric\ncontext.\n', 'mysql> SELECT CURDATE();\n        -> ''1997-12-15''\nmysql> SELECT CURDATE() + 0;\n        -> 19971215', ''),
(136, 'LTRIM', 13, '   LTRIM(@var{str})\nReturns the string @var{str} with leading space characters removed.\n', 'mysql> SELECT LTRIM(''  barbar'');\n        -> ''barbar''', ''),
(137, 'CREATE DATABASE', 1, 'CREATE DATABASE creates a database with the given name.  \nTo use CREATE DATABASE, you need the CREATE privilege on the\ndatabase.\n', 'CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] @var{db_name}\n    [@var{create_specification} [, @var{create_specification}] ...]\n\n@var{create_specification}:\n    [DEFAULT] CHARACTER SET @var{charset_name}\n  | [DEFAULT] COLLATE @var{collation_name}', ''),
(138, 'DISTANCE', 27, '   Distance(@var{g1},@var{g2})\nReturns as a double-precision number\nthe shortest distance between any two points in the two geometries.\n', '', ''),
(139, 'ISEMPTY', 22, '   IsEmpty(@var{g})\nReturns 1 if the geometry value @var{g} is the empty geometry, 0 if it is not\nempty, and @minus{}1 if the argument is NULL.\nIf the geometry is empty, it represents the empty point set.\n', '', ''),
(140, 'BENCHMARK', 28, '   BENCHMARK(@var{count},@var{expr})\nThe BENCHMARK() function executes the expression @var{expr}\nrepeatedly @var{count} times.  It may be used to time how fast MySQL\nprocesses the expression.  The result value is always 0.  The intended\nuse is from within the @command{mysql} client, which reports query execution times:\n', 'mysql> SELECT BENCHMARK(1000000,ENCODE(''hello'',''goodbye''));\n+----------------------------------------------+\n| BENCHMARK(1000000,ENCODE(''hello'',''goodbye'')) |\n+----------------------------------------------+\n|                                            0 |\n+----------------------------------------------+\n1 row in set (4.74 sec)', ''),
(141, 'UPPER', 13, '   UPPER(@var{str})\nReturns the string @var{str} with all characters changed to uppercase\naccording to the current character set mapping (the default is ISO-8859-1\nLatin1).\n', 'mysql> SELECT UPPER(''Hej'');\n        -> ''HEJ''', ''),
(142, 'SPATIAL', 20, 'MySQL can create spatial indexes using syntax similar to that for creating\nregular indexes, but extended with the SPATIAL keyword.\nSpatial columns that are indexed currently must be declared NOT NULL.\nThe following examples demonstrate how to create spatial indexes.\n\n\n   With CREATE TABLE:\n\nmysql> CREATE TABLE geom (g GEOMETRY NOT NULL, SPATIAL INDEX(g));\n\n   With ALTER TABLE:\n\nmysql> ALTER TABLE geom ADD SPATIAL INDEX(g);\n\n   With CREATE INDEX:\n\nmysql> CREATE SPATIAL INDEX sp_index ON geom (g);\n\n\nTo drop spatial indexes, use ALTER TABLE or DROP INDEX:\n\n\n   With ALTER TABLE:\n\nmysql> ALTER TABLE geom DROP INDEX g;\n\n   With DROP INDEX:\n\nmysql> DROP INDEX sp_index ON geom;\n\n\nExample: Suppose that a table geom contains more than 32,000 geometries,\nwhich are stored in the column g of type GEOMETRY.\nThe table also has an AUTO_INCREMENT column fid for storing\nobject ID values.\n', '', ''),
(143, 'DROP VIEW', 1, 'DROP VIEW removes one or more views. You must have the DROP\nprivilege for each view.\n\nYou can use the keywords IF EXISTS to prevent an error from occurring\nfor views that don''t exist.  When this clause is given, a NOTE is\ngenerated for each non-existent view.\nSee also : [SHOW WARNINGS,  , SHOW WARNINGS].\n\nRESTRICT and CASCADE, if given, are parsed and ignored.\n', 'DROP VIEW [IF EXISTS]\n    @var{view_name} [, @var{view_name}] ...\n    [RESTRICT | CASCADE]', ''),
(144, 'EXPLAIN', 8, 'The EXPLAIN statement can be used either as a synonym for\nDESCRIBE or as a way to obtain information about how MySQL will execute\na SELECT statement:\n\n --- The EXPLAIN @var{tbl_name} syntax is synonymous with DESCRIBE @var{tbl_name}\nor\nSHOW COLUMNS FROM @var{tbl_name}.\n --- When you precede a SELECT statement with the keyword EXPLAIN,\nMySQL explains how it would process the SELECT, providing\ninformation about how tables are joined and in which order.\n', 'EXPLAIN @var{tbl_name}', ''),
(145, 'IS_USED_LOCK', 11, '   IS_USED_LOCK(@var{str})\nChecks whether the lock named @var{str} is in use (that is, locked).\nIf so, it returns the connection identifier of the client that holds\nthe lock.\nOtherwise, it returns NULL.\n', '', ''),
(146, 'DES_DECRYPT', 4, '   DES_DECRYPT(@var{crypt_str}[,@var{key_str}])\n\nDecrypts a string encrypted with DES_ENCRYPT().\nOn error, this function returns NULL.\n\nNote that this function works only if MySQL has been configured with\nSSL support. See also : [Secure connections].\n\nIf no @var{key_str} argument is given, DES_DECRYPT() examines\nthe first byte of the encrypted string to determine the DES key number\nthat was used to encrypt the original string, and then reads the key\nfrom the DES key file to decrypt the message.  For this to work,\nthe user must have the SUPER privilege. The key file can be specified\nwith the --des-key-file server option.\n\nIf you pass this function a @var{key_str} argument, that string\nis used as the key for decrypting the message.\n\nIf the @var{crypt_str} argument doesn''t look like an encrypted string,\nMySQL will return the given @var{crypt_str}.\n', '', ''),
(147, 'POINTN', 9, '   PointN(@var{ls},@var{n})\nReturns the @var{n}-th point in the Linestring value @var{ls}.\nPoint numbers begin at 1.\n', 'mysql> SET @ls = ''LineString(1 1,2 2,3 3)'';\nmysql> SELECT AsText(PointN(GeomFromText(@ls),2));\n+-------------------------------------+\n| AsText(PointN(GeomFromText(@ls),2)) |\n+-------------------------------------+\n| POINT(2 2)                          |\n+-------------------------------------+', ''),
(148, 'MBREQUAL', 0, '   MBREqual(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not the Minimum Bounding Rectangles of\nthe two geometries @var{g1} and @var{g2} are the same.\n', '', ''),
(149, 'LOAD DATA FROM MASTER', 8, 'LOAD DATA FROM MASTER\n\nTakes a snapshot of the master and copies it to the slave.  It updates the\nvalues of MASTER_LOG_FILE and MASTER_LOG_POS so that the slave\nwill start replicating from the correct position. Any table and database\nexclusion rules specified with the --replicate-*-do-* and\n--replicate-*-ignore-* options are honored.\n--replicate-rewrite-db is /not/ taken into account (because one user\ncould, with this option, set up a non-unique mapping such as\n--replicate-rewrite-db=db1->db3 and\n--replicate-rewrite-db=db2->db3, which would confuse the slave when\nit loads the master''s tables).\n\nUse of this statement is subject to the following conditions:\n\n\n --- It works only with MyISAM tables.\n\n --- It acquires a global read lock on the master while taking the snapshot,\nwhich prevents updates on the master during the load operation.\n\n\nIn the future, it is planned to make this statement work with\nInnoDB tables and to remove the need for a global read lock by using\nnon-blocking online backup.\n\nIf you are loading big tables, you might have to increase the values\nof net_read_timeout and net_write_timeout\non both your master and slave servers.\nSee also : [Server system variables].\n\nNote that LOAD DATA FROM MASTER does /not/ copy any\ntables from the mysql database.  This makes it easy to have\ndifferent users and privileges on the master and the slave.\n\nThe LOAD DATA FROM MASTER statement\nrequires the replication account that is used to connect to the master\nto have the RELOAD and SUPER privileges on the master and the\nSELECT privilege for all master tables you want to load. All\nmaster tables for which the user does not have the SELECT privilege are\nignored by LOAD DATA FROM MASTER. This is because the\nmaster will hide them from the user: LOAD DATA FROM MASTER calls\nSHOW DATABASES to know the master databases to load, but\nSHOW DATABASES returns only databases for which the user has\nsome privilege.\nSee [SHOW DATABASES,  , SHOW DATABASES].\nOn the slave''s side, the user that issues LOAD DATA FROM MASTER should\nhave grants to drop and create the databases and tables that are copied.\n', '', ''),
(150, 'TOUCHES', 27, '   Touches(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not @var{g1} spatially touches\n@var{g2}. Two geometries /spatially touch/ if the interiors of\nthe geometries do not intersect, but the boundary of one of the geometries\nintersects either the boundary or the interior of the other.\n', '', ''),
(151, 'SECOND', 23, '   SECOND(@var{time})\nReturns the second for @var{time}, in the range 0 to 59.\n', 'mysql> SELECT SECOND(''10:05:03'');\n        -> 3', ''),
(152, 'DROP TABLE', 1, 'DROP TABLE removes one or more tables. You must have the DROP\nprivilege for each table. All table data and the table\ndefinition are /removed/, so /be careful/ with this statement!\n\nIn MySQL 3.22 or later, you can use the keywords IF EXISTS\nto prevent an error from occurring for tables that don''t exist.  As of\nMySQL 4.1, a NOTE is generated for each non-existent table when\nusing IF EXISTS.\nSee also : [SHOW WARNINGS,  , SHOW WARNINGS].\n\nRESTRICT and CASCADE are allowed to make porting easier.\nFor the moment, they do nothing.\n\nNote: DROP TABLE automatically commits the current\nactive transaction, unless you are using MySQL 4.1 or higher and the\nTEMPORARY keyword.\n', 'DROP [TEMPORARY] TABLE [IF EXISTS]\n    @var{tbl_name} [, @var{tbl_name}] ...\n    [RESTRICT | CASCADE]', ''),
(153, 'HANDLER', 8, 'The HANDLER statement provides direct access to table storage engine\ninterfaces.  It is available for MyISAM tables as MySQL 4.0.0 and\nInnoDB tables as of MySQL 4.0.3.\n', 'HANDLER @var{tbl_name} OPEN [ AS @var{alias} ]\nHANDLER @var{tbl_name} READ @var{index_name} { = | >= | <= | < } (@var{value1},@var{value2},...)\n    [ WHERE @var{where_condition} ] [LIMIT ... ]\nHANDLER @var{tbl_name} READ @var{index_name} { FIRST | NEXT | PREV | LAST }\n    [ WHERE @var{where_condition} ] [LIMIT ... ]\nHANDLER @var{tbl_name} READ { FIRST | NEXT }\n    [ WHERE @var{where_condition} ] [LIMIT ... ]\nHANDLER @var{tbl_name} CLOSE', ''),
(154, 'BIT_OR', 17, '   BIT_OR(@var{expr})\nReturns the bitwise OR of all bits in @var{expr}. The calculation is\nperformed with 64-bit (BIGINT) precision.\n', '', ''),
(155, 'GREATEST', 26, '   GREATEST(@var{value1},@var{value2},...)\nWith two or more arguments, returns the largest (maximum-valued) argument.\nThe arguments are compared using the same rules as for LEAST().\n', 'mysql> SELECT GREATEST(2,0);\n        -> 2\nmysql> SELECT GREATEST(34.0,3.0,5.0,767.0);\n        -> 767.0\nmysql> SELECT GREATEST(''B'',''A'',''C'');\n        -> ''C''', ''),
(156, 'BLOB', 2, 'A BLOB is a binary large object that can hold a variable amount of\ndata.  The four BLOB types, TINYBLOB, BLOB,\nMEDIUMBLOB, and LONGBLOB, differ only in the maximum length of\nthe values they can hold.\n', '', ''),
(157, 'MBRCONTAINS', 0, '   MBRContains(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not the Minimum Bounding Rectangle of\n@var{g1} contains the Minimum Bounding Rectangle of @var{g2}.\n', 'mysql> SET @g1 = GeomFromText(''Polygon((0 0,0 3,3 3,3 0,0 0))'');\nmysql> SET @g2 = GeomFromText(''Point(1 1)'');\nmysql> SELECT MBRContains(@g1,@g2), MBRContains(@g2,@g1);\n----------------------+----------------------+\n| MBRContains(@g1,@g2) | MBRContains(@g2,@g1) |\n+----------------------+----------------------+\n|                    1 |                    0 |\n+----------------------+----------------------+', ''),
(158, 'ROW_COUNT', 28, '   ROW_COUNT()\n\nROW_COUNT() returns the number of rows updated, inserted, or deleted\nby the preceding statement.  This is the same as the row count that the\n@command{mysql} client displays and the value from the\nmysql_affected_rows() C API function.\n', 'mysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           3 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> DELETE FROM t WHERE i IN(1,2);\nQuery OK, 2 rows affected (0.00 sec)\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           2 |\n+-------------+\n1 row in set (0.00 sec)', ''),
(159, 'PURGE', 8, '', 'PURGE MASTER LOGS TO ''mysql-bin.010'';\nPURGE MASTER LOGS BEFORE ''2003-04-02 22:46:26'';', ''),
(160, 'LOG10', 10, '   LOG10(@var{X})\nReturns the base-10 logarithm of @var{X}.\n', 'mysql> SELECT LOG10(2);\n        -> 0.301030\nmysql> SELECT LOG10(100);\n        -> 2.000000\nmysql> SELECT LOG10(-100);\n        -> NULL', ''),
(161, 'GLENGTH', 9, '   GLength(@var{ls})\nReturns as a double-precision number the length of the LineString\nvalue @var{ls} in its associated spatial reference.\n', 'mysql> SET @ls = ''LineString(1 1,2 2,3 3)'';\nmysql> SELECT GLength(GeomFromText(@ls));\n+----------------------------+\n| GLength(GeomFromText(@ls)) |\n+----------------------------+\n|            2.8284271247462 |\n+----------------------------+', ''),
(162, 'STDDEV', 17, '   STD(@var{expr})\n   STDDEV(@var{expr})\nReturns the standard deviation of @var{expr} (the square root of\nVARIANCE()). This is an extension to standard SQL. The STDDEV()\nform of this function is provided for Oracle compatibility.\n', '', ''),
(163, 'SIN', 10, '   SIN(@var{X})\nReturns the sine of @var{X}, where @var{X} is given in radians.\n', 'mysql> SELECT SIN(PI());\n        -> 0.000000', ''),
(164, 'COMPRESS', 13, '   COMPRESS(@var{string_to_compress})\nCompresses a string. This function requires MySQL to have been compiled\nwith a compression library such as zlib. Otherwise, the return\nvalue is always NULL. The compressed string can be uncompressed with\nUNCOMPRESS().\n', 'mysql> SELECT LENGTH(COMPRESS(REPEAT(''a'',1000)));\n        -> 21\nmysql> SELECT LENGTH(COMPRESS(''''));\n        -> 0\nmysql> SELECT LENGTH(COMPRESS(''a''));\n        -> 13\nmysql> SELECT LENGTH(COMPRESS(REPEAT(''a'',16)));\n        -> 15', ''),
(165, 'FLUSH QUERY CACHE', 7, 'You can defragment the query cache to better utilize its memory\nwith the FLUSH QUERY CACHE statement.\nThe statement does not remove any queries from the cache.\n\nThe RESET QUERY CACHE statement removes all query results from the\nquery cache.  The FLUSH TABLES statement also does this.\n', '', ''),
(166, 'BIT_AND', 17, '   BIT_AND(@var{expr})\nReturns the bitwise AND of all bits in @var{expr}. The calculation is\nperformed with 64-bit (BIGINT) precision.\n', 'mysql> SELECT order.custid, customer.name, MAX(payments)\n    ->        FROM order,customer\n    ->        WHERE order.custid = customer.custid\n    ->        GROUP BY order.custid;', ''),
(167, 'CHANGE MASTER TO', 8, '\nCHANGE MASTER TO master_def [, master_def] ...\n\nmaster_def:\n      MASTER_HOST = ''@var{host_name}''\n    | MASTER_USER = ''@var{user_name}''\n    | MASTER_PASSWORD = ''@var{password}''\n    | MASTER_PORT = @var{port_num}\n    | MASTER_CONNECT_RETRY = @var{count}\n    | MASTER_LOG_FILE = ''@var{master_log_name}''\n    | MASTER_LOG_POS = @var{master_log_pos}\n    | RELAY_LOG_FILE = ''@var{relay_log_name}''\n    | RELAY_LOG_POS = @var{relay_log_pos}\n    | MASTER_SSL = {0|1}\n    | MASTER_SSL_CA = ''@var{ca_file_name}''\n    | MASTER_SSL_CAPATH = ''@var{ca_directory_name}''\n    | MASTER_SSL_CERT = ''@var{cert_file_name}''\n    | MASTER_SSL_KEY = ''@var{key_file_name}''\n    | MASTER_SSL_CIPHER = ''@var{cipher_list}''\n\nChanges the parameters that the slave server uses for connecting to and\ncommunicating with the master server.\n\nMASTER_USER, MASTER_PASSWORD, MASTER_SSL,\nMASTER_SSL_CA, MASTER_SSL_CAPATH, MASTER_SSL_CERT,\nMASTER_SSL_KEY, and MASTER_SSL_CIPHER provide information for\nthe slave about how to connect to its master.\n\nThe relay log options (RELAY_LOG_FILE and RELAY_LOG_POS) are\navailable beginning with MySQL 4.0.\n\nThe SSL options\n(MASTER_SSL,\nMASTER_SSL_CA,\nMASTER_SSL_CAPATH,\nMASTER_SSL_CERT,\nMASTER_SSL_KEY,\nand\nMASTER_SSL_CIPHER)\nare available beginning with MySQL 4.1.1.\nYou can change these options even on slaves that are compiled without SSL\nsupport. They are saved to the *master.info file, but is ignored\nuntil you use a server that has SSL support enabled.\n\nIf you don''t specify a given parameter, it keeps its old\nvalue, except as indicated in the following discussion. For example, if the password to connect to your MySQL master has\nchanged, you just need to issue these statements\nto tell the slave about the new password:\n\nmysql> STOP SLAVE; -- if replication was running\nmysql> CHANGE MASTER TO MASTER_PASSWORD=''new3cret'';\nmysql> START SLAVE; -- if you want to restart replication\n\nThere is no need to specify the parameters that do\nnot change (host, port, user, and so forth).\n\nMASTER_HOST and MASTER_PORT are the hostname (or IP address) of\nthe master host and its TCP/IP port. Note that if MASTER_HOST is\nequal to localhost, then, like in other parts of MySQL, the port\nmay be ignored (if Unix socket files can be used, for example).\n\nIf you specify MASTER_HOST or MASTER_PORT,\nthe slave assumes that the master server is different than\nbefore (even if you specify a host or port value that is\nthe same as the current value.) In this case, the old values for the master\nbinary log name and position are considered no longer applicable, so if you\ndo not specify MASTER_LOG_FILE and MASTER_LOG_POS in the\nstatement, MASTER_LOG_FILE='''' and MASTER_LOG_POS=4 are\nsilently appended to it. \n\nMASTER_LOG_FILE and MASTER_LOG_POS are the coordinates\nat which the slave I/O thread should begin reading from the master the\nnext time the thread starts.\nIf you specify either of them, you can''t specify RELAY_LOG_FILE or\nRELAY_LOG_POS.\nIf neither of MASTER_LOG_FILE or MASTER_LOG_POS are\nspecified, the slave uses the last coordinates of the /slave SQL thread/\nbefore CHANGE MASTER was issued. This ensures that\nreplication has no discontinuity, even if the slave SQL thread was late\ncompared to the slave I/O thread, when you just want to change, say, the\npassword to use. This safe behavior was introduced starting from MySQL\n4.0.17 and 4.1.1. (Before these versions, the coordinates used were \nthe last coordinates of the slave I/O thread before CHANGE MASTER\nwas issued. This caused the SQL thread to possibly lose some events\nfrom the master, thus breaking replication.)\n\nCHANGE MASTER /deletes all relay log files/ and starts\na new one, unless you specify RELAY_LOG_FILE or\nRELAY_LOG_POS. In that case, relay logs are kept;\nas of MySQL 4.1.1 the relay_log_purge global variable\nis set silently to 0.\n\nCHANGE MASTER TO updates the contents of the *master.info and\n*relay-log.info files.\n\nCHANGE MASTER is useful for setting up a slave when you have\nthe snapshot of the master and have recorded the log and the offset\ncorresponding to it.  After loading the snapshot into the slave, you\ncan run CHANGE MASTER TO MASTER_LOG_FILE=''@var{log_name_on_master'',\nMASTER_LOG_POS=@var{log_offset_on_master}} on the slave.\n\nExamples:\n\nmysql> CHANGE MASTER TO\n    ->     MASTER_HOST=''master2.mycompany.com'',\n    ->     MASTER_USER=''replication'',\n    ->     MASTER_PASSWORD=''bigs3cret'',\n    ->     MASTER_PORT=3306,\n    ->     MASTER_LOG_FILE=''master2-bin.001'',\n    ->     MASTER_LOG_POS=4,\n    ->     MASTER_CONNECT_RETRY=10;\n\nmysql> CHANGE MASTER TO\n    ->     RELAY_LOG_FILE=''slave-relay-bin.006'',\n    ->     RELAY_LOG_POS=4025;\n', '', ''),
(168, 'DATABASE', 28, '   DATABASE()\nReturns the default (current) database name.\n', 'mysql> SELECT DATABASE();\n        -> ''test''', ''),
(169, 'TIME FUNCTION', 23, '   TIME(@var{expr})\n\nExtracts the time part of the time or datetime expression @var{expr}.\n', 'mysql> SELECT TIME(''2003-12-31 01:02:03'');\n        -> ''01:02:03''\nmysql> SELECT TIME(''2003-12-31 01:02:03.000123'');\n        -> ''01:02:03.000123''', ''),
(170, 'FLOAT', 2, '   FLOAT(@var{p}) [UNSIGNED] [ZEROFILL]\n\nA floating-point number.  @var{p} represents the precision. It can be from\n0 to 24 for a single-precision floating-point number and from 25 to 53 for a\ndouble-precision floating-point number. These types are like the FLOAT\nand DOUBLE types described immediately following.  FLOAT(p)\nhas the same range as the corresponding FLOAT and DOUBLE\ntypes, but the display width and number of decimals are undefined.\n\nAs of MySQL 3.23, this is a true floating-point value.  In\nearlier MySQL versions, FLOAT(@var{p)} always has two decimals.\n\nThis syntax is provided for ODBC compatibility.\n\nUsing FLOAT might give you some unexpected problems because\nall calculations in MySQL are done with double precision.\nSee also : [No matching rows].\n\n   FLOAT[(@var{M},@var{D})] [UNSIGNED] [ZEROFILL]\n\nA small (single-precision) floating-point number.  Allowable values are\n-3.402823466E+38 to -1.175494351E-38, 0,\nand 1.175494351E-38 to 3.402823466E+38.  If\nUNSIGNED is specified, negative values are disallowed.  @var{M}\nis the display width and @var{D} is the number of decimals.  FLOAT\nwithout arguments or FLOAT(@var{p)} (where @var{p} is in the range from\n0 to 24) stands for a single-precision floating-point number.\n', '', ''),
(171, 'BIT_XOR', 17, '   BIT_XOR(@var{expr})\nReturns the bitwise XOR of all bits in @var{expr}. The calculation is\nperformed with 64-bit (BIGINT) precision.\n', '', ''),
(172, 'XOR', 25, '   XOR\nLogical XOR.\nReturns NULL if either operand is NULL.\nFor non-NULL operands, evaluates to 1 if an odd number\nof operands is non-zero,\notherwise 0 is returned.\n', 'mysql> SELECT 1 XOR 1;\n        -> 0\nmysql> SELECT 1 XOR 0;\n        -> 1\nmysql> SELECT 1 XOR NULL;\n        -> NULL\nmysql> SELECT 1 XOR 1 XOR 1;\n        -> 1', ''),
(173, 'STRCMP', 13, '   STRCMP(@var{expr1},@var{expr2})\nSTRCMP()\nreturns 0 if the strings are the same, -1 if the first\nargument is smaller than the second according to the current sort order,\nand 1 otherwise.\n', 'mysql> SELECT STRCMP(''text'', ''text2'');\n        -> -1\nmysql> SELECT STRCMP(''text2'', ''text'');\n        -> 1\nmysql> SELECT STRCMP(''text'', ''text'');\n        -> 0', ''),
(174, 'SHOW BINLOG', 8, 'SHOW BINLOG EVENTS\n   [IN ''@var{log_name}''] [FROM @var{pos}] [LIMIT [@var{offset},] @var{row_count}]\n\nShows the events in the binary log. \nIf you do not specify ''log_name'', the first binary log will be displayed.\n', '', ''),
(175, 'CASE', 14, '   CASE @var{value} WHEN [@var{compare-value}] THEN @var{result} [WHEN [@var{compare-value}] THEN @var{result} ...] [ELSE @var{result}] END\n   CASE WHEN [@var{condition}] THEN @var{result} [WHEN [@var{condition}] THEN @var{result} ...] [ELSE @var{result}] END\n\nThe first version returns the @var{result} where\n@var{value=@var{compare-value}}. The second version returns the result for\nthe first condition that is true. If there was no matching result\nvalue, the result after ELSE is returned, or NULL if there is no\nELSE part.\n', 'mysql> SELECT CASE 1 WHEN 1 THEN ''one''\n    ->     WHEN 2 THEN ''two'' ELSE ''more'' END;\n        -> ''one''\nmysql> SELECT CASE WHEN 1>0 THEN ''true'' ELSE ''false'' END;\n        -> ''true''\nmysql> SELECT CASE BINARY ''B''\n    ->     WHEN ''a'' THEN 1 WHEN ''b'' THEN 2 END;\n        -> NULL', ''),
(176, 'REPEAT', 13, '   REPEAT(@var{str},@var{count})\nReturns a string consisting of the string @var{str} repeated @var{count}\ntimes. If @var{count <= 0}, returns an empty string. Returns NULL if\n@var{str} or @var{count} are NULL.\n', 'mysql> SELECT REPEAT(''MySQL'', 3);\n        -> ''MySQLMySQLMySQL''', ''),
(177, 'REPAIR', 7, 'REPAIR TABLE repairs a possibly corrupted table.\nBy default,\nit has the same effect as @command{myisamchk --recover @var{tbl_name}}.\nREPAIR TABLE works only on MyISAM tables.\n', 'REPAIR [LOCAL | NO_WRITE_TO_BINLOG] TABLE\n    @var{tbl_name} [, @var{tbl_name}] ... [QUICK] [EXTENDED] [USE_FRM]', ''),
(178, 'QUARTER', 23, '   QUARTER(@var{date})\nReturns the quarter of the year for @var{date}, in the range 1\nto 4.\n', 'mysql> SELECT QUARTER(''98-04-01'');\n        -> 2', ''),
(179, 'ORD', 13, '   ORD(@var{str})\nIf the leftmost character of the string @var{str} is a multi-byte character,\nreturns the code for that character, calculated from the numeric values\nof its constituent bytes using this formula:\n\n  (1st byte code)\n+ (2nd byte code * 256)\n+ (3rd byte code * 256^2) ...\n\nIf the leftmost character is not a multi-byte character, ORD()\nreturns the same value as the ASCII() function.\n', 'mysql> SELECT ORD(''2'');\n        -> 50', ''),
(180, 'MONTHNAME', 23, '   MONTHNAME(@var{date})\nReturns the full name of the month for @var{date}.\n', 'mysql> SELECT MONTHNAME(''1998-02-05'');\n        -> ''February''', ''),
(181, 'GET_LOCK', 11, '   GET_LOCK(@var{str},@var{timeout})\nTries to obtain a lock with a name given by the string @var{str}, with a\ntimeout of @var{timeout} seconds.  Returns 1 if the lock was obtained\nsuccessfully, 0 if the attempt timed out (for example, because another\nclient has already locked the name), or NULL if an error\noccurred (such as running out of memory or the thread was killed with\n@command{mysqladmin kill}).  If you have a lock obtained with GET_LOCK(),\nit is released when you execute\nRELEASE_LOCK(), execute a new GET_LOCK(), or your connection\nterminates (either normally or abnormally).\n\nThis function can be used to implement application locks or to\nsimulate record locks.  Names are locked on a server-wide basis.\nIf a name has been locked by one client, GET_LOCK() blocks\nany request by another client for a lock with the same name. This\nallows clients that agree on a given lock name to use the name to\nperform cooperative advisory locking.\n', 'mysql> SELECT GET_LOCK(''lock1'',10);\n        -> 1\nmysql> SELECT IS_FREE_LOCK(''lock2'');\n        -> 1\nmysql> SELECT GET_LOCK(''lock2'',10);\n        -> 1\nmysql> SELECT RELEASE_LOCK(''lock2'');\n        -> 1\nmysql> SELECT RELEASE_LOCK(''lock1'');\n        -> NULL', ''),
(182, 'ASCII', 13, '   ASCII(@var{str})\nReturns the numeric value of the leftmost character of the string\n@var{str}. Returns 0 if @var{str} is the empty string.  Returns\nNULL if @var{str} is NULL.\nASCII() works for characters with numeric values from 0 to\n255.\n', 'mysql> SELECT ASCII(''2'');\n        -> 50\nmysql> SELECT ASCII(2);\n        -> 50\nmysql> SELECT ASCII(''dx'');\n        -> 100', ''),
(183, 'MAKE_SET', 13, '   MAKE_SET(@var{bits},@var{str1},@var{str2},...)\nReturns a set value (a string containing substrings separated by ,\ncharacters) consisting of the strings that have the corresponding bit in\n@var{bits} set.  @var{str1} corresponds to bit 0, @var{str2} to bit 1,\nand so on.  NULL values in @var{str1}, @var{str2}, ...\nare not appended to the result.\n', 'mysql> SELECT MAKE_SET(1,''a'',''b'',''c'');\n        -> ''a''\nmysql> SELECT MAKE_SET(1 | 4,''hello'',''nice'',''world'');\n        -> ''hello,world''\nmysql> SELECT MAKE_SET(1 | 4,''hello'',''nice'',NULL,''world'');\n        -> ''hello''\nmysql> SELECT MAKE_SET(0,''a'',''b'',''c'');\n        -> ''''', ''),
(184, 'SQRT', 10, '   SQRT(@var{X})\nReturns the non-negative square root of @var{X}.\n', 'mysql> SELECT SQRT(4);\n        -> 2.000000\nmysql> SELECT SQRT(20);\n        -> 4.472136', ''),
(185, 'GEOMETRY HIERARCHY', 20, 'Geometry is the base class. It''s an abstract class.\nThe instantiable subclasses of Geometry are restricted to zero-, one-,\nand two-dimensional geometric objects that exist in\ntwo-dimensional coordinate space. All instantiable geometry classes are\ndefined so that valid instances of a geometry class are topologically closed\n(that is, all defined geometries include their boundary).\n\nThe base Geometry class has subclasses for Point,\nCurve, Surface, and GeometryCollection:\n\n\n --- Point represents zero-dimensional objects.\n\n --- Curve represents one-dimensional objects, and has subclass\nLineString, with sub-subclasses Line and LinearRing.\n\n --- Surface is designed for two-dimensional objects and\nhas subclass Polygon.\n\n --- GeometryCollection\nhas specialized zero-, one-, and two-dimensional collection classes named\nMultiPoint, MultiLineString, and MultiPolygon\nfor modeling geometries corresponding to collections of\nPoints, LineStrings, and Polygons, respectively.\nMultiCurve and MultiSurface are introduced as abstract superclasses\nthat generalize the collection interfaces to handle Curves and Surfaces.\n\n\nGeometry, Curve, Surface, MultiCurve,\nand MultiSurface are defined as non-instantiable classes.\nThey define a common set of methods for their subclasses and\nare included for extensibility.\n\nPoint, LineString, Polygon, GeometryCollection,\nMultiPoint, MultiLineString, and\nMultiPolygon are instantiable classes.\n', '', ''),
(186, 'CAST', 13, 'The CAST() and CONVERT() functions can be used to take a\nvalue of one type and produce a value of another type.\n\nThe @var{type} can be one of the following values:\n\n --- BINARY\n --- CHAR\n --- DATE\n --- DATETIME\n --- SIGNED [INTEGER]\n --- TIME\n --- UNSIGNED [INTEGER]\n\nBINARY produces a binary string. See the entry for the BINARY\noperator in this section for a description of how this affects comparisons.\n\nCAST() and CONVERT() are available as of MySQL 4.0.2.\nThe CHAR conversion type is available as of 4.0.6.\nThe USING form of CONVERT() is available as of 4.1.0.\n\nCAST() and CONVERT(... USING ...) are standard SQL syntax.\nThe non-USING form of CONVERT() is ODBC syntax.\n\nCONVERT() with USING is used to convert data between different\ncharacter sets.  In MySQL, transcoding names are the same as the\ncorresponding character set names.  For example, this statement converts\nthe string ''abc'' in the server''s default character set to the\ncorresponding string in the utf8 character set:\n\nSELECT CONVERT(''abc'' USING utf8);\n\n  \n\nThe cast functions are useful when you want to create a column with\na specific type in a CREATE ... SELECT statement:\n', 'SELECT @var{enum_col} FROM @var{tbl_name} ORDER BY CAST(@var{enum_col} AS CHAR);', ''),
(187, 'INT', 2, '   INT[(@var{M})] [UNSIGNED] [ZEROFILL]\n\nA normal-size integer. The signed range is -2147483648 to\n2147483647.  The unsigned range is 0 to 4294967295.\n\n   INTEGER[(@var{M})] [UNSIGNED] [ZEROFILL]\n\nThis is a synonym for INT.\n', '', ''),
(188, 'OVERLAPS', 27, '   Overlaps(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not @var{g1} spatially overlaps\n@var{g2}.\nThe term /spatially overlaps/ is used if two\ngeometries intersect and their intersection results in a geometry of the\nsame dimension but not equal to either of the given geometries.\n', '', ''),
(189, 'CACHE INDEX', 8, 'The CACHE INDEX statement assigns table indexes to a specific key\ncache. It is used only for MyISAM tables.\n\nThe following statement assigns indexes from the tables t1,\nt2, and t3 to the key cache named hot_cache:\n\nmysql> CACHE INDEX t1, t2, t3 IN hot_cache;\n+---------+--------------------+----------+----------+\n| Table   | Op                 | Msg_type | Msg_text |\n+---------+--------------------+----------+----------+\n| test.t1 | assign_to_keycache | status   | OK       |\n| test.t2 | assign_to_keycache | status   | OK       |\n| test.t3 | assign_to_keycache | status   | OK       |\n+---------+--------------------+----------+----------+\n', 'CACHE INDEX\n  @var{tbl_index_list} [, @var{tbl_index_list}] ...\n  IN @var{key_cache_name}\n\n@var{tbl_index_list}:\n  @var{tbl_name} [[INDEX|KEY] (@var{index_name}[, @var{index_name}] ...)]', ''),
(190, 'REVOKE', 7, '', 'REVOKE @var{priv_type} [(@var{column_list})] [, @var{priv_type} [(@var{column_list})]] ...\n    ON {@var{tbl_name} | * | *.* | @var{db_name}.*}\n    FROM @var{user} [, @var{user}] ...\n\nREVOKE ALL PRIVILEGES, GRANT OPTION FROM @var{user} [, @var{user}] ...', ''),
(191, 'DATETIME', 2, 'A date and time combination.  The supported range is ''1000-01-01\n00:00:00'' to ''9999-12-31 23:59:59''.  MySQL displays\nDATETIME values in ''YYYY-MM-DD HH:MM:SS'' format, but allows you\nto assign values to DATETIME columns using either strings or numbers.\n', '', ''),
(192, 'INSERT INTO', 8, 'INSERT inserts new rows into an existing table.  The INSERT ...\nVALUES and INSERT ... SET forms of the statement insert rows based\non explicitly specified values.  The INSERT ... SELECT form inserts\nrows selected from another table or tables.  The INSERT ... VALUES\nform with multiple value lists is supported in MySQL 3.22.5 or\nlater.  The INSERT ... SET syntax is supported in MySQL\n3.22.10 or later.\nINSERT ... SELECT is discussed further in\nSee also : [INSERT SELECT,  , INSERT SELECT].\n', 'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] @var{tbl_name} [(@var{col_name},...)]\n    VALUES ({@var{expr} | DEFAULT},...),(...),...\n    [ ON DUPLICATE KEY UPDATE @var{col_name}=@var{expr}, ... ]', ''),
(193, '- BINARY', 10, '   -\nSubtraction:\n', 'mysql> SELECT 3-5;\n        -> -2', ''),
(194, 'DELETE', 8, 'DELETE deletes rows from @var{tbl_name} that satisfy the condition\ngiven by @var{where_definition}, and returns the number of records deleted.\n\nIf you issue a DELETE statement with no WHERE clause, all\nrows are deleted.  A faster way to do this, when you don''t want to know\nthe number of deleted rows, is to use TRUNCATE TABLE.\nSee also : [TRUNCATE,  , TRUNCATE].\n', 'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM @var{tbl_name}\n       [WHERE @var{where_definition}]\n       [ORDER BY ...]\n       [LIMIT @var{row_count}]', ''),
(195, 'AES_DECRYPT', 4, '   AES_ENCRYPT(@var{str},@var{key_str})\n   AES_DECRYPT(@var{crypt_str},@var{key_str})\nThese functions allow encryption and decryption of data using the official\nAES (Advanced Encryption Standard) algorithm, previously known as "Rijndael."\nEncoding with a 128-bit key length is used, but you can extend it up to\n256 bits by modifying the source. We chose 128 bits because it is much\nfaster and it is usually secure enough.\n\nThe input arguments may be any length. If either argument is NULL,\nthe result of this function is also NULL.\n\nBecause AES is a block-level algorithm, padding is used to encode uneven length\nstrings and so the result string length may be calculated as\n16*(trunc(@var{string_length/16)+1)}.\n\nIf AES_DECRYPT() detects invalid data or incorrect padding, it\nreturns NULL. However, it is possible for AES_DECRYPT()\nto return a non-NULL value (possibly garbage) if the input data or\nthe key is invalid.\n\nYou can use the AES functions to store data in an encrypted form by\nmodifying your queries:\n', 'INSERT INTO t VALUES (1,AES_ENCRYPT(''text'',''password''));', ''),
(196, 'TO_DAYS', 23, '   TO_DAYS(@var{date})\nGiven a date @var{date}, returns a daynumber (the number of days since year\n0).\n', 'mysql> SELECT TO_DAYS(950501);\n        -> 728779\nmysql> SELECT TO_DAYS(''1997-10-07'');\n        -> 729669', ''),
(197, 'SET SQL_LOG_BIN', 8, 'SET SQL_LOG_BIN = {0|1}\n\nDisables or enables binary logging for the current connection \n(SQL_LOG_BIN is a session variable)\nif the client connects using an account that has the SUPER privilege.\nThe statement is refused with an error if the client does not have that\nprivilege. (Before MySQL 4.1.2, the statement was simply ignored in that case.)\n', '', ''),
(198, 'ISNULL', 26, '   ISNULL(@var{expr})\nIf @var{expr} is NULL, ISNULL() returns 1, otherwise\nit returns 0.\n', 'mysql> SELECT ISNULL(1+1);\n        -> 0\nmysql> SELECT ISNULL(1/0);\n        -> 1', ''),
(199, 'STARTPOINT', 9, '   StartPoint(@var{ls})\nReturns the Point that is the start point of the LineString value\n@var{ls}.\n', 'mysql> SET @ls = ''LineString(1 1,2 2,3 3)'';\nmysql> SELECT AsText(StartPoint(GeomFromText(@ls)));\n+---------------------------------------+\n| AsText(StartPoint(GeomFromText(@ls))) |\n+---------------------------------------+\n| POINT(1 1)                            |\n+---------------------------------------+', ''),
(200, 'STR_TO_DATE', 23, '   STR_TO_DATE(@var{str},@var{format})\nThis is the reverse function of the DATE_FORMAT() function. It takes a \nstring @var{str} and a format string @var{format}.\nSTR_TO_DATE() returns a DATETIME value if the format\nstring contains both date and time parts, or a DATE or TIME\nvalue if the string contains only date or time parts.\n\nThe date, time, or datetime values contained in @var{str} should be given \nin the format indicated by @var{format}. For the specifiers that can be \nused in @var{format}, see the table in the DATE_FORMAT() function \ndescription. All other characters are just taken verbatim, thus not being \ninterpreted.\nIf @var{str} contains an illegal date, time, or datetime value, \nSTR_TO_DATE() returns NULL.\n', '@c next example commented out until format string becomes optional\n@c mysql> SELECT STR_TO_DATE(''2003-10-03'');\n@c         -> 2003-10-03 00:00:00\nmysql> SELECT STR_TO_DATE(''03.10.2003 09.20'',\n    ->                    ''%d.%m.%Y %H.%i'');\n        -> ''2003-10-03 09:20:00''\nmysql> SELECT STR_TO_DATE(''10arp'', ''%carp'');\n        -> ''0000-10-00 00:00:00''\nmysql> SELECT STR_TO_DATE(''2003-15-10 00:00:00'',\n    ->                    ''%Y-%m-%d %H:%i:%s'');\n        -> NULL', ''),
(201, 'ASBINARY', 3, '   AsBinary(@var{g})\nConverts a value in internal geometry format to its WKB representation\nand returns the binary result.\n', 'SELECT AsBinary(g) FROM geom;', ''),
(202, 'LOAD DATA', 8, 'The LOAD DATA INFILE statement reads rows from a text file into a\ntable at a very high speed.\nFor more information about the efficiency of INSERT versus\nLOAD DATA INFILE and speeding up LOAD DATA INFILE,\n[Insert speed].\n\nYou can also load data files by using the @command{mysqlimport} utility; it\noperates by sending a LOAD DATA INFILE statement to the server.  The\n--local option causes @command{mysqlimport} to read data files from the\nclient host.  You can specify the --compress option to get better\nperformance over slow networks if the client and server support the\ncompressed protocol.\nSee also : [mysqlimport,  , @command{mysqlimport]}.\n\nIf you specify the LOW_PRIORITY keyword, execution of the\nLOAD DATA statement is delayed until no other clients are reading\nfrom the table.\n\nIf you specify the CONCURRENT keyword with a MyISAM table that\nsatisfies the condition for concurrent inserts (that is, it contains no free\nblocks in the middle),\nthen other threads can retrieve data from the table while LOAD DATA\nis executing. Using this option affects the performance of LOAD DATA\na bit, even if no other thread is using the table at the same time.\n\nIf the LOCAL keyword is specified, it is\ninterpreted with respect to the client end of the connection:\n\n\n --- If LOCAL is specified, the file is read by the client program on the\nclient host and sent to the server.\n\n --- If LOCAL is not specified, the\nfile must be located on the server host and is read directly by the server.\n\n\nLOCAL is available in MySQL 3.22.6 or later.\n\nFor security reasons, when reading text files located on the server, the\nfiles must either reside in the database directory or be readable by all.\nAlso, to use LOAD DATA INFILE on server files, you must have the\nFILE privilege.\n', 'LOAD DATA [LOW_PRIORITY | CONCURRENT] [LOCAL] INFILE ''@var{file_name}.txt''\n    [REPLACE | IGNORE]\n    INTO TABLE @var{tbl_name}\n    [FIELDS\n        [TERMINATED BY ''\\t'']\n        [[OPTIONALLY] ENCLOSED BY '''']\n        [ESCAPED BY ''\\\\'' ]\n    ]\n    [LINES \n        [STARTING BY '''']    \n        [TERMINATED BY ''\\n'']\n    ]\n    [IGNORE @var{number} LINES]\n    [(@var{col_name},...)]', ''),
(203, 'INET_ATON', 11, '   INET_ATON(@var{expr})\nGiven the dotted-quad representation of a network address as a string,\nreturns an integer that represents the numeric value of the address.\nAddresses may be 4- or 8-byte addresses.\n', 'mysql> SELECT INET_ATON(''209.207.224.40'');\n        -> 3520061480', ''),
(204, 'SHOW MASTER LOGS', 8, 'SHOW MASTER LOGS\nSHOW BINARY LOGS\n\nLists the binary log files on the server. This statement is used as part of\nthe procedure described in [PURGE MASTER LOGS] for determining which logs\ncan be purged.\n', '', ''),
(205, 'DIV', 10, 'Integer division.\nSimilar to FLOOR() but safe with BIGINT values.\n', 'mysql> SELECT 5 DIV 2;\n        -> 2', ''),
(206, 'OCT', 13, '   OCT(@var{N})\nReturns a string representation of the octal value of @var{N}, where\n@var{N} is a longlong (BIGINT)number.  This is equivalent to\nCONV(N,10,8).\nReturns NULL if @var{N} is NULL.\n', 'mysql> SELECT OCT(12);\n        -> ''14''', ''),
(207, 'EQUALS', 27, '   Equals(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not @var{g1} is spatially equal to\n@var{g2}.\n', '', '');
INSERT INTO `help_topic` (`help_topic_id`, `name`, `help_category_id`, `description`, `example`, `url`) VALUES
(208, 'KILL', 8, 'Each connection to @command{mysqld} runs in a separate thread.  You can see\nwhich threads are running with the SHOW PROCESSLIST statement and kill\na thread with the KILL thread_id statement.\n\nAs of MySQL 5.0.0, KILL allows the optional CONNECTION or\nQUERY modifiers:\n\n\n --- KILL CONNECTION is the same as KILL with no modifier:\nIt terminates the connection associated with the given @var{thread_id}.\n\n --- KILL QUERY terminates the statement that the connection currently\nis executing, but leaves the connection intact.\n\n\nIf you have the PROCESS privilege, you can see all threads.\nIf you have the SUPER privilege, you can kill all threads and\nstatements.  Otherwise, you can see and kill only your own threads and\nstatements.\n\nYou can also use the @command{mysqladmin processlist} and @command{mysqladmin kill}\ncommands to examine and kill threads.\n\nNote: You currently cannot use KILL with the Embedded MySQL\nServer library, because the embedded server merely runs inside the threads\nof the host application, it does not create connection threads of its own.\n', 'KILL [CONNECTION | QUERY] @var{thread_id}', ''),
(209, '&&', 25, '   AND\n   &&\nLogical AND.\nEvaluates to 1 if all operands are non-zero and not NULL,\nto 0 if one or more operands are 0,\notherwise NULL is returned.\n', 'mysql> SELECT 1 && 1;\n        -> 1\nmysql> SELECT 1 && 0;\n        -> 0\nmysql> SELECT 1 && NULL;\n        -> NULL\nmysql> SELECT 0 && NULL;\n        -> 0\nmysql> SELECT NULL && 0;\n        -> 0', ''),
(210, 'MPOINTFROMWKB', 3, '   MPointFromWKB(@var{wkb}[,@var{srid}])\n   MultiPointFromWKB(@var{wkb}[,@var{srid}])\nConstructs a MULTIPOINT value using its WKB representation and SRID.\n', '', ''),
(211, 'UNCOMPRESS', 13, '   UNCOMPRESS(@var{string_to_uncompress})\nUncompresses a string compressed by the COMPRESS() function.\nIf the argument is not a compressed value, the result is NULL.\nThis function requires MySQL to have been compiled with a compression library\nsuch as zlib. Otherwise, the return value is always NULL.\n', 'mysql> SELECT UNCOMPRESS(COMPRESS(''any string''));\n        -> ''any string''\nmysql> SELECT UNCOMPRESS(''any string'');\n        -> NULL', ''),
(212, 'CHECKSUM', 7, '\nReports a table checksum.\n\nIf QUICK is specified, the live table checksum is reported if it is\navailable, or NULL otherwise.  This is very fast.  A live checksum\nis enabled by specifying the CHECKSUM=1 table option, currently\nsupported only for MyISAM tables.\nSee also : [CREATE TABLE,  , CREATE TABLE].\n\nIn EXTENDED mode the whole table is read row by row and the checksum\nis calculated. This can be very slow for large tables.\n\nBy default, if neither QUICK nor EXTENDED is specified, MySQL\nreturns a live checksum if the table storage engine supports it and scans\nthe table otherwise.\n\nThis statement is implemented in MySQL 4.1.1.\n\n\n  @subsubsection OPTIMIZE TABLE Syntax\n\n\n\n\nOPTIMIZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE @var{tbl_name} [, @var{tbl_name}] ...\n\nOPTIMIZE TABLE should be used if you have deleted a large part of a\ntable or if you have made many changes to a table with variable-length rows\n(tables that have VARCHAR, BLOB, or TEXT columns).\nDeleted records are maintained in a linked list and subsequent INSERT\noperations reuse old record positions. You can use OPTIMIZE TABLE to\nreclaim the unused space and to defragment the data file.\n', 'CHECKSUM TABLE @var{tbl_name} [, @var{tbl_name}] ... [ QUICK | EXTENDED ]', ''),
(213, 'DO', 8, 'DO executes the expressions but doesn''t return any results.  This is\nshorthand for SELECT @var{expr, ...}, but has the advantage that it''s\nslightly faster when you don''t care about the result.\n\nDO is useful mainly with functions that have side effects, such as\nRELEASE_LOCK().\n', 'DO @var{expr} [, @var{expr}] ...', ''),
(214, 'INSERT', 13, '   INSERT(@var{str},@var{pos},@var{len},@var{newstr})\nReturns the string @var{str}, with the substring beginning at position\n@var{pos} and @var{len} characters long replaced by the string\n@var{newstr}.\n', 'mysql> SELECT INSERT(''Quadratic'', 3, 4, ''What'');\n        -> ''QuWhattic''', ''),
(215, 'GEOMETRYN', 5, '   GeometryN(@var{gc},@var{n})\nReturns the @var{n}-th geometry in the GeometryCollection value\n@var{gc}.  Geometry numbers begin at 1.\n', 'mysql> SET @gc = ''GeometryCollection(Point(1 1),LineString(2 2, 3 3))'';\nmysql> SELECT AsText(GeometryN(GeomFromText(@gc),1));\n+----------------------------------------+\n| AsText(GeometryN(GeomFromText(@gc),1)) |\n+----------------------------------------+\n| POINT(1 1)                             |\n+----------------------------------------+', ''),
(216, 'BETWEEN AND', 26, '   @var{expr} BETWEEN @var{min} AND @var{max}\nIf @var{expr} is greater than or equal to @var{min} and @var{expr} is\nless than or equal to @var{max}, BETWEEN returns 1,\notherwise it returns 0.  This is equivalent to the expression\n(@var{min <= @var{expr} AND @var{expr} <= @var{max})} if all the arguments are of the\nsame type. Otherwise type conversion takes place according to the rules\ndescribed at the beginning of this section, but applied to all the three\narguments. Note: Before MySQL\n4.0.5, arguments were converted to the type of @var{expr} instead.\n', 'mysql> SELECT 1 BETWEEN 2 AND 3;\n        -> 0\nmysql> SELECT ''b'' BETWEEN ''a'' AND ''c'';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND ''3'';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND ''x-3'';\n        -> 0', ''),
(217, 'SET PASSWORD', 7, '', 'SET PASSWORD = PASSWORD(''@var{some password}'')\nSET PASSWORD FOR @var{user} = PASSWORD(''@var{some password}'')', ''),
(218, 'DAYOFWEEK', 23, '   DAYOFWEEK(@var{date})\nReturns the weekday index\nfor @var{date} (1 = Sunday, 2 = Monday, ..., 7 =\nSaturday).  These index values correspond to the ODBC standard.\n', 'mysql> SELECT DAYOFWEEK(''1998-02-03'');\n        -> 3', ''),
(219, 'DES_ENCRYPT', 4, '   DES_ENCRYPT(@var{str}[,(@var{key_num}|@var{key_str})])\n\nEncrypts the string with the given key using the Triple-DES algorithm.\nOn error, this function returns NULL.\n\nNote that this function works only if MySQL has been configured with\nSSL support. See also : [Secure connections].\n\nThe encryption key to use is chosen based on the second argument to\nDES_ENCRYPT(), if one was given:\n\n     Argument 	 Description\n   No argument 	\nThe first key from the DES key file is used.\n   @var{key_num} 	\nThe given key number (0-9) from the DES key file is used.\n   @var{key_str} 	\nThe given key string is used to encrypt @var{str}.\n  \n\nThe key file can be specified with the --des-key-file server option.\n\nThe return string is a binary string where the first character\nis CHAR(128 | key_num).\n\nThe 128 is added to make it easier to recognize an encrypted key.\nIf you use a string key, @var{key_num} will be 127.\n\nThe string length for the result will be\n@var{new_len = @var{orig_len} + (8-(@var{orig_len} % 8))+1}.\n', '@var{key_num} @var{des_key_str}', ''),
(220, 'SESSION_USER', 28, '   SESSION_USER()\n\nSESSION_USER() is a synonym for USER().\n', '', ''),
(221, 'UPDATE', 8, 'The UPDATE statement updates columns in existing table rows with new values.\nThe SET clause indicates which columns to modify and the values\nthey should be given.  The WHERE clause, if given, specifies\nwhich rows should be updated.  Otherwise, all rows are updated. If the\nORDER BY clause is specified, the rows will be updated in the\norder that is specified. The LIMIT clause places a limit on the number\nof rows that can be updated.\n\nThe UPDATE statement supports the following modifiers:\n\n\n --- If you specify the LOW_PRIORITY keyword, execution of the\nUPDATE is delayed until no other clients are reading from the table.\n\n --- If you specify the IGNORE keyword, the update statement will not\nabort even if duplicate-key errors occur during the update.  Rows for which\nconflicts occur are not updated.\n', 'UPDATE [LOW_PRIORITY] [IGNORE] @var{tbl_name}\n    SET @var{col_name1}=@var{expr1} [, @var{col_name2}=@var{expr2} ...]\n    [WHERE @var{where_definition}]\n    [ORDER BY ...]\n    [LIMIT @var{row_count}]', ''),
(222, 'DISJOINT', 27, '   Disjoint(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not @var{g1} is spatially disjoint\nfrom (does not intersect) @var{g2}.\n', '', ''),
(223, 'ENCRYPT', 4, '   ENCRYPT(@var{str}[,@var{salt}])\nEncrypt @var{str} using the Unix crypt() system call. The\n@var{salt} argument should be a string with two characters.\n(As of MySQL 3.22.16, @var{salt} may be longer than two characters.)\nIf no @var{salt} argument is given, a random value is used.\n', 'mysql> SELECT ENCRYPT(''hello'');\n        -> ''VxuFAJXVARROc''', ''),
(224, 'SOUNDEX', 13, '   SOUNDEX(@var{str})\nReturns a soundex string from @var{str}. Two strings that sound almost the\nsame should have identical soundex strings. A standard soundex string\nis four characters long, but the SOUNDEX() function returns an\narbitrarily long string. You can use SUBSTRING() on the result to get\na standard soundex string.  All non-alphabetic characters are ignored in the\ngiven string. All international alphabetic characters outside the A-Z range\nare treated as vowels.\n', 'mysql> SELECT SOUNDEX(''Hello'');\n        -> ''H400''\nmysql> SELECT SOUNDEX(''Quadratically'');\n        -> ''Q36324''', ''),
(225, 'FOUND_ROWS', 28, '\nA SELECT statement may include a LIMIT clause to restrict the\nnumber of rows the server returns to the client.\nIn some cases, it is desirable to know how many rows the statement would have\nreturned without the LIMIT, but without running the statement again.\nTo get this row count, include a SQL_CALC_FOUND_ROWS option in the\nSELECT statement, then invoke FOUND_ROWS() afterward:\n', 'mysql> SELECT SQL_CALC_FOUND_ROWS * FROM @var{tbl_name}\n    -> WHERE id > 100 LIMIT 10;\nmysql> SELECT FOUND_ROWS();', ''),
(226, 'BIT_COUNT', 19, '   BIT_COUNT(@var{N})\nReturns the number of bits that are set in the argument @var{N}.\n', 'mysql> SELECT BIT_COUNT(29);\n        -> 4', ''),
(227, 'LCASE', 13, '   LCASE(@var{str})\n\nLCASE() is a synonym for LOWER().\n', '', ''),
(228, 'ROUND', 10, '   ROUND(@var{X})\n   ROUND(@var{X},@var{D})\nReturns the argument @var{X}, rounded to the nearest integer.\nWith two arguments, returns @var{X} rounded to @var{D} decimals.\nIf @var{D} is negative, the integer part of the number is zeroed out.\n', 'mysql> SELECT ROUND(-1.23);\n        -> -1\nmysql> SELECT ROUND(-1.58);\n        -> -2\nmysql> SELECT ROUND(1.58);\n        -> 2\nmysql> SELECT ROUND(1.298, 1);\n        -> 1.3\nmysql> SELECT ROUND(1.298, 0);\n        -> 1\nmysql> SELECT ROUND(23.298, -1);\n        -> 20', ''),
(229, 'FORMAT', 11, '   FORMAT(@var{X},@var{D})\nFormats the number @var{X} to a format like ''#,###,###.##'', rounded\nto @var{D} decimals, and returns the result as a string.\nIf @var{D} is 0, the result will have no\ndecimal point or fractional part.\n', 'mysql> SELECT FORMAT(12332.123456, 4);\n        -> ''12,332.1235''\nmysql> SELECT FORMAT(12332.1,4);\n        -> ''12,332.1000''\nmysql> SELECT FORMAT(12332.2,0);\n        -> ''12,332''', ''),
(230, 'POINT', 6, '   Point(@var{x},@var{y})\nConstructs a WKB Point using its coordinates.\n', '', ''),
(231, 'MPOLYFROMTEXT', 16, '   MPolyFromText(@var{wkt}[,@var{srid}])\n   MultiPolygonFromText(@var{wkt}[,@var{srid}])\nConstructs a MULTIPOLYGON value using its WKT representation and SRID.\n', '', ''),
(232, 'MBR DEFINITION', 0, 'Every geometry occupies some position in space. The exterior of\na geometry is all space not occupied by the geometry. The interior\nis the space occupied by the geometry. The boundary is the\ninterface between the geometry''s interior and exterior.\n\n --- Its MBR (Minimum Bounding Rectangle), or Envelope.\nThis is the bounding geometry, formed by the minimum and maximum (X,Y)\ncoordinates:\n', '((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))', ''),
(233, 'CREATE INDEX', 1, 'In MySQL 3.22 or later, CREATE INDEX is mapped to an\nALTER TABLE statement to create indexes.\nSee also : [ALTER TABLE, , ALTER TABLE].\nThe CREATE INDEX statement doesn''t do anything prior\nto MySQL 3.22.\n', 'CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX @var{index_name} [@var{index_type}]\n    ON @var{tbl_name} (@var{index_col_name},...)\n\n@var{index_col_name}:\n    @var{col_name} [(@var{length})] [ASC | DESC]', ''),
(234, 'SHOW SLAVE HOSTS', 8, 'SHOW SLAVE HOSTS\n\nDisplays a list of slaves currently registered with the master. \nAny slave not started with the --report-host=slave_name \noption will not be visible in that list.\n', '', ''),
(235, 'EXP', 10, '   EXP(@var{X})\nReturns the value of e (the base of natural logarithms) raised to\nthe power of @var{X}.\n', 'mysql> SELECT EXP(2);\n        -> 7.389056\nmysql> SELECT EXP(-2);\n        -> 0.135335', ''),
(236, 'MAKETIME', 23, '   MAKETIME(@var{hour},@var{minute},@var{second})\n\nReturns a time value calculated from the @var{hour}, @var{minute}, and\n@var{second} arguments.\n', 'mysql> SELECT MAKETIME(12,15,30);\n        -> ''12:15:30''', ''),
(237, 'ENCODE', 4, '   ENCODE(@var{str},@var{pass_str})\nEncrypt @var{str} using @var{pass_str} as the password.\nTo decrypt the result, use DECODE().\n\nThe result is a binary string of the same length as @var{str}.\nIf you want to save it in a column, use a BLOB column type.\n', '', ''),
(238, 'TINYINT', 2, '   TINYINT[(@var{M})] [UNSIGNED] [ZEROFILL]\n\nA very small integer. The signed range is -128 to 127. The\nunsigned range is 0 to 255.\n\n   BIT\n   BOOL\n   BOOLEAN\nThese are synonyms for TINYINT(1).\nThe BOOLEAN synonym was added in MySQL 4.1.0.\nA value of zero is considered false. Non-zero values are considered true.\n\nIn the future,\nfull boolean type handling will be introduced in accordance with standard SQL.\n', '', ''),
(239, 'MERGE', 7, '\n@menu\n* MERGE table problems::        MERGE Table Problems\n@end menu\n\nThe MERGE storage engine was introduced in MySQL 3.23.25. It\nis also known as the MRG_MyISAM engine. The code is now reasonably\nstable.\n\nA MERGE table is a collection of identical MyISAM tables that\ncan be used as one.  ``Identical'''' means that all tables have\nidentical column and index information.  You can''t merge tables in which the\ncolumns are listed in a different order, don''t have exactly the same columns, or\nhave the indexes in different order.  However, any or all of the tables can be\ncompressed with @command{myisampack}.\nSee also : [myisampack, , @command{myisampack]}.\nDifferences in table options such as AVG_ROW_LENGTH, MAX_ROWS,\nor PACK_KEYS do not matter.\n', 'mysql> CREATE TABLE t1 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20));\nmysql> CREATE TABLE t2 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20));\nmysql> INSERT INTO t1 (message) VALUES (''Testing''),(''table''),(''t1'');\nmysql> INSERT INTO t2 (message) VALUES (''Testing''),(''table''),(''t2'');\nmysql> CREATE TABLE total (\n    ->    a INT NOT NULL AUTO_INCREMENT,\n    ->    message CHAR(20), INDEX(a))\n    ->    TYPE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST;', ''),
(240, 'MASTER_POS_WAIT', 11, '   MASTER_POS_WAIT(@var{log_name},@var{log_pos}[,@var{timeout}])\n\nThis function is useful for control of master/slave synchronization.\nIt blocks until the slave has read and applied all updates up to the specified\nposition in the master log.\nThe return value is the number of log events it had to wait for to get to\nthe specified position.  The function returns NULL if the slave SQL thread\nis not started, the slave''s master information is not initialized, the\narguments are incorrect, or an error occurs. It returns -1 if the\ntimeout has been exceeded. If the slave SQL thread stops while\nMASTER_POS_WAIT() is waiting, the function returns NULL.\nIf the slave is already past the specified position, the function returns\nimmediately.\n', 'SELECT MASTER_POS_WAIT(''@var{master_log_file}'', @var{master_log_pos})', ''),
(241, 'ISOLATION', 24, 'SET [GLOBAL | SESSION] TRANSACTION ISOLATION LEVEL\n{ READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE }\n\nThis statement\nsets the transaction isolation level for the next transaction, globally, or\nfor the current session.\n\nThe default behavior of SET TRANSACTION is to set the isolation level\nfor the next (not yet\nstarted) transaction.  If you use the GLOBAL keyword, the statement\nsets the default transaction level globally for all new connections\ncreated from that point on. Existing connections are unaffected.\nYou need the SUPER\nprivilege to do this.  Using the SESSION keyword sets the\ndefault transaction level for all future transactions performed on the\ncurrent connection.\n\nFor descriptions of each InnoDB transaction isolation level, see\n[InnoDB transaction isolation, InnoDB transaction isolation].\nInnoDB supports each of these levels\nfrom MySQL 4.0.5 on. The default level is REPEATABLE READ.\n\nYou can set the initial default global isolation level for @command{mysqld} with\nthe --transaction-isolation option.\nSee also : [Server options].\n', '', ''),
(242, 'PASSWORD', 4, '', 'mysql> SELECT PASSWORD(''badpwd'');\n        -> ''7f84554057dd964b''', ''),
(243, 'ENUM', 2, '   ENUM(''@var{value1}'',''@var{value2}'',...)\n\nAn enumeration.  A string object that can have only one value, chosen\nfrom the list of values ''@var{value1''}, ''@var{value2''}, ...,\nNULL or the special '''' error value.  An ENUM column can\nhave a maximum of 65,535 distinct values.\nENUM values are represented internally as integers.\n', '', ''),
(244, 'CONCAT', 13, '   CONCAT(@var{str1},@var{str2},...)\nReturns the string that results from concatenating the arguments.  Returns\nNULL if any argument is NULL.  May have one or more arguments.\nA numeric argument is converted to its equivalent string form.\n', 'mysql> SELECT CONCAT(''My'', ''S'', ''QL'');\n        -> ''MySQL''\nmysql> SELECT CONCAT(''My'', NULL, ''QL'');\n        -> NULL\nmysql> SELECT CONCAT(14.3);\n        -> ''14.3''', ''),
(245, 'MID', 13, '   MID(@var{str},@var{pos},@var{len})\n\nMID(@var{str,@var{pos},@var{len})} is a synonym for\nSUBSTRING(@var{str,@var{pos},@var{len})}.\n', '', ''),
(246, 'DAYNAME', 23, '   DAYNAME(@var{date})\nReturns the name of the weekday for @var{date}.\n', 'mysql> SELECT DAYNAME(''1998-02-05'');\n        -> ''Thursday''', ''),
(247, 'UTC_TIMESTAMP', 23, '   UTC_TIMESTAMP\n   UTC_TIMESTAMP()\nReturns the current UTC date and time as a value in ''YYYY-MM-DD HH:MM:SS''\nor YYYYMMDDHHMMSS format, depending on whether the function is used in\na string or numeric context.\n', 'mysql> SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0;\n        -> ''2003-08-14 18:08:04'', 20030814180804', ''),
(248, 'GEOMFROMWKB', 3, '   GeomFromWKB(@var{wkb}[,@var{srid}])\n   GeometryFromWKB(@var{wkt}[,@var{srid}])\nConstructs a geometry value of any type using its WKB representation and SRID.\n', '', ''),
(249, 'POINTFROMWKB', 3, '   PointFromWKB(@var{wkb}[,@var{srid}])\nConstructs a POINT value using its WKB representation and SRID.\n', '', ''),
(250, 'LENGTH', 13, '   LENGTH(@var{str})\nReturns the length of the string @var{str}, measured in bytes.\nA multi-byte character counts as multiple bytes.\nThis means that for a string containing five two-byte characters,\nLENGTH() returns 10, whereas CHAR_LENGTH() returns\n5.\n', 'mysql> SELECT LENGTH(''text'');\n        -> 4', ''),
(251, 'LIKE', 13, '   @var{expr} LIKE @var{pat} [ESCAPE ''@var{escape-char}'']\nPattern matching using\nSQL simple regular expression comparison. Returns 1 (TRUE) or 0\n(FALSE).  If either @var{expr} or @var{pat} is NULL, the result is\nNULL.\n\nWith LIKE you can use the following two wildcard characters\nin the pattern:\n\n     Character 	 Description\n   % 	 Matches any number of characters, even zero characters\n   _ 	 Matches exactly one character\n  \n', 'mysql> SELECT ''David!'' LIKE ''David_'';\n        -> 1\nmysql> SELECT ''David!'' LIKE ''%D%v%'';\n        -> 1', ''),
(252, 'BINARY', 13, '   BINARY\nThe BINARY operator casts the string following it to a binary string.\nThis is an easy way to force a column comparison to be done byte by byte\nrather than character by character. This causes the comparison to be\ncase sensitive even\nif the column isn''t defined as BINARY or BLOB.\nBINARY also causes trailing spaces to be significant.\n', 'mysql> SELECT ''a'' = ''A'';\n        -> 1\nmysql> SELECT BINARY ''a'' = ''A'';\n        -> 0\nmysql> SELECT ''a'' = ''a '';\n        -> 1\nmysql> SELECT BINARY ''a'' = ''a '';\n        -> 0', ''),
(253, 'FUNCTION', 21, 'A user-defined function (UDF) is a way to extend MySQL with a new\nfunction that works like native (built in) MySQL function such as\nABS() and CONCAT().\n\nAGGREGATE is a new option for MySQL 3.23.  An\nAGGREGATE function works exactly like a native MySQL\nGROUP function like SUM or COUNT().\n\nCREATE FUNCTION saves the function''s name, type, and shared library\nname in the mysql.func system table.  You must have the\nINSERT and DELETE privileges for the mysql database\nto create and drop functions.\n', 'CREATE [AGGREGATE] FUNCTION function_name RETURNS {STRING|REAL|INTEGER}\n       SONAME shared_library_name\n\nDROP FUNCTION function_name', ''),
(254, 'ISSIMPLE', 22, '   IsSimple(@var{g})\n\nCurrently, this function is a placeholder and should not be used.\nIf implemented, its behavior will be as described in the next paragraph.\n\nReturns 1 if the geometry value @var{g} has no anomalous geometric points,\nsuch as self-intersection or self-tangency. IsSimple() returns 0 if the\nargument is not simple, and @minus{}1 if it is NULL.\n\nThe description of each instantiable geometric class given earlier in\nthe chapter includes the specific conditions that cause an instance of\nthat class to be classified as not simple.\n', '', ''),
(255, 'MULTILINESTRING', 6, '   MultiLineString(@var{ls1},@var{ls2},...)\nConstructs a WKB MultiLineString value using using WKB LineString\narguments.  If any argument is not a WKB LineString, the return\nvalue is NULL.\n', '', ''),
(256, 'GEOMCOLLFROMTEXT', 16, '   GeomCollFromText(@var{wkt}[,@var{srid}])\n   GeometryCollectionFromText(@var{wkt}[,@var{srid}])\nConstructs a GEOMETRYCOLLECTION value using its WKT representation and SRID.\n', '', ''),
(257, 'GEOMETRY', 20, 'MySQL provides a standard way of creating spatial columns for\ngeometry types, for example, with CREATE TABLE or ALTER TABLE.\nCurrently, spatial columns are supported only for MyISAM tables.\n', 'mysql> CREATE TABLE geom (g GEOMETRY);\nQuery OK, 0 rows affected (0.02 sec)', ''),
(258, 'WITHIN', 27, '   Within(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not @var{g1} is spatially within\n@var{g2}.\n', '', ''),
(259, 'LAST_INSERT_ID', 28, '   LAST_INSERT_ID()\n   LAST_INSERT_ID(@var{expr})\nReturns the last automatically generated value that was inserted into\nan AUTO_INCREMENT column.\n', 'mysql> SELECT LAST_INSERT_ID();\n        -> 195', ''),
(260, 'ISCLOSED', 9, '   IsClosed(@var{ls})\nReturns 1 if the LineString value @var{ls} is closed\n(that is, its StartPoint() and EndPoint() values are the same).\nReturns 0 if @var{ls} is not closed, and @minus{}1 if it is NULL.\n', 'mysql> SET @ls = ''LineString(1 1,2 2,3 3)'';\nmysql> SELECT IsClosed(GeomFromText(@ls));\n+-----------------------------+\n| IsClosed(GeomFromText(@ls)) |\n+-----------------------------+\n|                           0 |\n+-----------------------------+', ''),
(261, 'ABS', 10, '   ABS(@var{X})\nReturns the absolute value of @var{X}.\n', 'mysql> SELECT ABS(2);\n        -> 2\nmysql> SELECT ABS(-32);\n        -> 32', ''),
(262, 'ATAN2', 10, '   ATAN(@var{Y},@var{X})\n   ATAN2(@var{Y},@var{X})\nReturns the arc tangent of the two variables @var{X} and @var{Y}. It is\nsimilar to calculating the arc tangent of @var{Y / @var{X}}, except that the\nsigns of both arguments are used to determine the quadrant of the\nresult.\n', 'mysql> SELECT ATAN(-2,2);\n        -> -0.785398\nmysql> SELECT ATAN2(PI(),0);\n        -> 1.570796', ''),
(263, '<=>', 26, '   <=>\nNULL-safe equal.\nThis operator performs an equality comparison like the = operator, but\nreturns 1 rather than NULL if both operands are NULL,\nand 0 rather than NULL if one operand is NULL.\n', 'mysql> SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL;\n        -> 1, 1, 0\nmysql> SELECT 1 = 1, NULL = NULL, 1 = NULL;\n        -> 1, NULL, NULL', ''),
(264, 'GEOMETRYCOLLECTION', 6, '   GeometryCollection(@var{g1},@var{g2},...)\nConstructs a WKB GeometryCollection. If any argument is not a\nwell-formed WKB representation of a geometry, the return value is\nNULL.\n', '', ''),
(265, 'POLYFROMWKB', 3, '   PolyFromWKB(@var{wkb}[,@var{srid}])\n   PolygonFromWKB(@var{wkb}[,@var{srid}])\nConstructs a POLYGON value using its WKB representation and SRID.\n', '', ''),
(266, 'POLYFROMTEXT', 16, '   PolyFromText(@var{wkt}[,@var{srid}])\n   PolygonFromText(@var{wkt}[,@var{srid}])\nConstructs a POLYGON value using its WKT representation and SRID.\n', '', ''),
(267, 'TIMESTAMPADD', 23, '   TIMESTAMPADD(@var{interval},@var{int_expr},@var{datetime_expr})\n\nAdds the integer expression @var{int_expr} to the date or datetime expression\n@var{datetime_expr}. The unit for @var{int_expr} is given by the\ninterval argument, which should be one of the following values:\nFRAC_SECOND,\nSECOND,\nMINUTE,\nHOUR,\nDAY,\nWEEK,\nMONTH,\nQUARTER,\nor\nYEAR.\n\nThe @var{interval} value may be specified using one of keywords as shown,\nor with a prefix of SQL_TSI_. For example, DAY or\nSQL_TSI_DAY both are legal.\n', '', ''),
(268, 'DATE', 2, 'A date.  The supported range is ''1000-01-01'' to ''9999-12-31''.\nMySQL displays DATE values in ''YYYY-MM-DD'' format, but\nallows you to assign values to DATE columns using either strings or\nnumbers.\n', '', ''),
(269, 'CONTAINS', 27, '   Contains(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not @var{g1} completely contains\n@var{g2}.\n', '', ''),
(270, 'CURRENT_DATE', 23, '   CURRENT_DATE\n   CURRENT_DATE()\n\nCURRENT_DATE and CURRENT_DATE() are synonyms for\nCURDATE().\n', '', ''),
(271, 'ENDPOINT', 9, '   EndPoint(@var{ls})\nReturns the Point that is the end point of the LineString value\n@var{ls}.\n', 'mysql> SET @ls = ''LineString(1 1,2 2,3 3)'';\nmysql> SELECT AsText(EndPoint(GeomFromText(@ls)));\n+-------------------------------------+\n| AsText(EndPoint(GeomFromText(@ls))) |\n+-------------------------------------+\n| POINT(3 3)                          |\n+-------------------------------------+', ''),
(272, 'FIND_IN_SET', 13, '   FIND_IN_SET(@var{str},@var{strlist})\nReturns a value 1 to @var{N} if the string @var{str} is in the string list\n@var{strlist} consisting of @var{N} substrings. A string list is a string\ncomposed of substrings separated by , characters. If the first\nargument is a constant string and the second is a column of type SET,\nthe FIND_IN_SET() function is optimized to use bit arithmetic.\nReturns 0 if @var{str} is not in @var{strlist} or if @var{strlist}\nis the empty string.  Returns NULL if either argument is NULL.\nThis function will not work properly if the first argument contains a comma\n(,) character.\n', 'mysql> SELECT FIND_IN_SET(''b'',''a,b,c,d'');\n        -> 2', ''),
(273, 'TIMESTAMPADD FUNCTION', 23, '', 'mysql> SELECT TIMESTAMPADD(MINUTE,1,''2003-01-02'');\n        -> ''2003-01-02 00:01:00''\nmysql> SELECT TIMESTAMPADD(WEEK,1,''2003-01-02'');\n        -> ''2003-01-09''', ''),
(274, 'DAYOFYEAR', 23, '   DAYOFYEAR(@var{date})\nReturns the day of the year for @var{date}, in the range 1 to\n366.\n', 'mysql> SELECT DAYOFYEAR(''1998-02-03'');\n        -> 34', ''),
(275, 'COLLATION', 28, '   COLLATION(@var{str})\nReturns the collation for the character set of the string argument.\n', 'mysql> SELECT COLLATION(''abc'');\n        -> ''latin1_swedish_ci''\nmysql> SELECT COLLATION(_utf8''abc'');\n        -> ''utf8_general_ci''', ''),
(276, 'IS_FREE_LOCK', 11, '   IS_FREE_LOCK(@var{str})\nChecks whether the lock named @var{str} is free to use (that is, not locked).\nReturns 1 if the lock is free (no one is using the lock),\n0 if the lock is in use, and\nNULL on errors (such as incorrect arguments).\n', '', ''),
(277, 'TRUNCATE', 10, '   TRUNCATE(@var{X},@var{D})\nReturns the number @var{X}, truncated to @var{D} decimals.  If @var{D}\nis 0, the result will have no decimal point or fractional part.\nIf @var{D} is negative, the integer part of the number is zeroed out.\n', 'mysql> SELECT TRUNCATE(1.223,1);\n        -> 1.2\nmysql> SELECT TRUNCATE(1.999,1);\n        -> 1.9\nmysql> SELECT TRUNCATE(1.999,0);\n        -> 1\nmysql> SELECT TRUNCATE(-1.999,1);\n        -> -1.9\nmysql> SELECT TRUNCATE(122,-2);\n       -> 100', ''),
(278, 'VARCHAR', 2, '   [NATIONAL] VARCHAR(@var{M}) [BINARY]\n\nA variable-length string.  @var{M} represents the maximum column length.\nThe range of @var{M} is 0 to 255 characters (1 to 255 prior to MySQL 4.0.2).\n\nNote: Trailing spaces are removed when VARCHAR values are\nstored, which differs from the standard SQL specification.\n\nFrom MySQL 4.1.0 on, a VARCHAR column with a length specification\ngreater than 255 is converted to the smallest TEXT type that can hold\nvalues of the given length.  For example, VARCHAR(500) is converted\nto TEXT, and VARCHAR(200000) is converted to\nMEDIUMTEXT.  This is a compatibility feature.\nHowever, this conversion affects trailing-space removal.\n\nVARCHAR is shorthand for CHARACTER VARYING.\n\nThe BINARY attribute causes sorting and comparisons to be\ncase sensitive.\n', '', ''),
(279, 'ADDDATE', 23, '   ADDDATE(@var{date},INTERVAL @var{expr} @var{type})\n   ADDDATE(@var{expr},@var{days})\n\nWhen invoked with the INTERVAL form of the second argument,\nADDDATE() is a synonym for DATE_ADD().  The related\nfunction SUBDATE() is a synonym for DATE_SUB().\nFor information on the INTERVAL argument, see the\ndiscussion for DATE_ADD().\n\nmysql> SELECT DATE_ADD(''1998-01-02'', INTERVAL 31 DAY);\n        -> ''1998-02-02''\nmysql> SELECT ADDDATE(''1998-01-02'', INTERVAL 31 DAY);\n        -> ''1998-02-02''\n\nAs of MySQL 4.1.1, the second syntax is allowed, where @var{expr} is a date\nor datetime expression and @var{days} is the number of days to be added to\n@var{expr}.\n\nmysql> SELECT ADDDATE(''1998-01-02'', 31);\n        -> ''1998-02-02''\n', '', ''),
(280, 'UNION', 8, 'UNION is used to combine the result from many SELECT\nstatements into one result set.  UNION is available from MySQL 4.0.0\non.\n\nSelected columns listed in corresponding positions of each SELECT\nstatement should have the same type. (For example, the first column selected\nby the first statement should have the same type as the first column selected\nby the other statements.) The column names used in\nthe first SELECT statement are used as the column names for the\nresults returned.\n', 'SELECT ...\nUNION [ALL | DISTINCT]\nSELECT ...\n  [UNION [ALL | DISTINCT]\n   SELECT ...]', ''),
(281, 'UTC_DATE', 23, '   UTC_DATE\n   UTC_DATE()\nReturns the current UTC date as a value in ''YYYY-MM-DD'' or\nYYYYMMDD format, depending on whether the function is used in a\nstring or numeric context.\n', 'mysql> SELECT UTC_DATE(), UTC_DATE() + 0;\n        -> ''2003-08-14'', 20030814', ''),
(282, 'RELEASE_LOCK', 11, '   RELEASE_LOCK(@var{str})\nReleases the lock named by the string @var{str} that was obtained with\nGET_LOCK(). Returns 1 if the lock was released, 0 if the\nlock wasn''t locked by this thread (in which case the lock is not released),\nand NULL if the named lock didn''t exist.  The lock will not exist if\nit was never obtained by a call to GET_LOCK() or if it already has\nbeen released.\n\nThe DO statement is convenient to use with RELEASE_LOCK().\nSee also : [DO,  , DO].\n', '', ''),
(283, 'ASIN', 10, '   ASIN(@var{X})\nReturns the arc sine of @var{X}, that is, the value whose sine is\n@var{X}. Returns NULL if @var{X} is not in the range -1 to\n1.\n', 'mysql> SELECT ASIN(0.2);\n        -> 0.201358\nmysql> SELECT ASIN(''foo'');\n        -> 0.000000', ''),
(284, 'MPOINTFROMTEXT', 16, '   MPointFromText(@var{wkt}[,@var{srid}])\n   MultiPointFromText(@var{wkt}[,@var{srid}])\nConstructs a MULTIPOINT value using its WKT representation and SRID.\n', '', ''),
(285, 'SIGN', 10, '   SIGN(@var{X})\nReturns the sign of the argument as -1, 0, or 1, depending\non whether @var{X} is negative, zero, or positive.\n', 'mysql> SELECT SIGN(-32);\n        -> -1\nmysql> SELECT SIGN(0);\n        -> 0\nmysql> SELECT SIGN(234);\n        -> 1', ''),
(286, 'MINUTE', 23, '   MINUTE(@var{time})\nReturns the minute for @var{time}, in the range 0 to 59.\n', 'mysql> SELECT MINUTE(''98-02-03 10:05:03'');\n        -> 5', ''),
(287, 'MULTIPOINT', 6, '   MultiPoint(@var{pt1},@var{pt2},...)\nConstructs a WKB MultiPoint value using WKB Point arguments.\nIf any argument is not a WKB Point, the return value is NULL.\n', '', ''),
(288, 'UUID', 11, '   UUID()\n\nReturns a Universal Unique Identifier (UUID) generated\naccording to ``DCE 1.1: Remote Procedure Call'''' (Appendix A)\nCAE (Common Applications Environment) Specifications\npublished by The Open Group in October 1997 (Document Number C706).\n\nA UUID is designed as a number that is globally unique in space and\ntime. Two calls to UUID() are expected to generate two different\nvalues, even if these calls are performed on two separate computers that are\nnot connected to each other.\n\nA UUID is a 128-bit number represented by a string\nof five hexadecimal numbers in aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\nformat:\n\n\n --- The first three numbers are generated from a timestamp.\n\n --- The fourth number preserves temporal uniqueness in case the timestamp value loses\nmonotonicity (for example, due to daylight saving time).\n\n --- The fifth number is an IEEE 802 node number that provides spatial uniqueness.  A\nrandom number is substituted if the latter is not available (for example,\nbecause the host computer has no Ethernet card, or we do not know how to\nfind the hardware address of an interface on your operating system).  In\nthis case, spatial uniqueness cannot be guaranteed. Nevertheless, a\ncollision should have /very/ low probability.\n\nCurrently, the MAC address of an interface is taken into account only on\nFreeBSD and Linux. On other operating systems, MySQL uses a randomly generated\n48-bit number.\n', 'mysql> SELECT UUID();\n        -> ''6ccd780c-baba-1026-9564-0040f4311e29''', ''),
(289, 'DAYOFMONTH', 23, '   DAYOFMONTH(@var{date})\nReturns the day of the month for @var{date}, in the range 1 to\n31.\n', 'mysql> SELECT DAYOFMONTH(''1998-02-03'');\n        -> 3', ''),
(290, 'CHECK', 7, 'CHECK TABLE works only on MyISAM and InnoDB tables. On\nMyISAM tables, This is the same thing as running @command{myisamchk\n--medium-check @var{tbl_name}} on the table.\n\nIf you don''t specify any option, MEDIUM is used.\n', 'CHECK TABLE @var{tbl_name} [, @var{tbl_name}] ... [@var{option}] ...\n\n@var{option} = {QUICK | FAST | MEDIUM | EXTENDED | CHANGED}', ''),
(291, 'NUMINTERIORRINGS', 15, '   NumInteriorRings(@var{poly})\nReturns the number of interior rings in the Polygon value @var{poly}.\n', 'mysql> SET @poly =\n    -> ''Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))'';\nmysql> SELECT NumInteriorRings(GeomFromText(@poly));\n+---------------------------------------+\n| NumInteriorRings(GeomFromText(@poly)) |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+', ''),
(292, 'CHAR_LENGTH', 13, '   CHAR_LENGTH(@var{str})\n\nReturns the length of the string @var{str}, measured in characters.\nA multi-byte character counts as a single character.\nThis means that for a string containing five two-byte characters,\nLENGTH() returns 10, whereas CHAR_LENGTH() returns\n5.\n', '', ''),
(293, 'RADIANS', 10, '   RADIANS(@var{X})\nReturns the argument @var{X}, converted from degrees to radians.\n', 'mysql> SELECT RADIANS(90);\n        -> 1.570796', ''),
(294, 'TINYBLOB', 2, '   TINYBLOB\n   TINYTEXT\n\nA BLOB or TEXT column with a maximum length of 255 (2^8\n@minus{} 1)\ncharacters.\n', '', ''),
(295, 'BOUNDARY', 22, '   Boundary(@var{g})\nReturns a geometry that is the closure of the combinatorial boundary of the\ngeometry value @var{g}.\n', '', ''),
(296, 'CHAR FUNCTION', 13, '   CHAR(@var{N},...)\nCHAR() interprets the arguments as integers and returns a string\nconsisting of the characters given by the code values of those\nintegers. NULL values are skipped.\n', 'mysql> SELECT CHAR(77,121,83,81,''76'');\n        -> ''MySQL''\nmysql> SELECT CHAR(77,77.3,''77.3'');\n        -> ''MMM''', ''),
(297, 'COS', 10, '   COS(@var{X})\nReturns the cosine of @var{X}, where @var{X} is given in radians.\n', 'mysql> SELECT COS(PI());\n        -> -1.000000', ''),
(298, 'HEX', 13, '   HEX(@var{N_or_S})\n\nIf @var{N_OR_S} is a number, returns a string representation of the hexadecimal\nvalue of @var{N}, where @var{N} is a longlong (BIGINT) number.\nThis is equivalent to CONV(N,10,16).\n\nFrom MySQL 4.0.1 and up,\nif @var{N_OR_S} is a string, returns a hexadecimal string of @var{N_OR_S}\nwhere each character in @var{N_OR_S} is converted to two hexadecimal digits.\n', 'mysql> SELECT HEX(255);\n        -> ''FF''\nmysql> SELECT 0x616263;\n        -> ''abc''\nmysql> SELECT HEX(''abc'');\n        -> 616263', ''),
(299, 'COT', 10, '   COT(@var{X})\nReturns the cotangent of @var{X}.\n', 'mysql> SELECT COT(12);\n        -> -1.57267341\nmysql> SELECT COT(0);\n        -> NULL', ''),
(300, 'MPOLYFROMWKB', 3, '   MPolyFromWKB(@var{wkb}[,@var{srid}])\n   MultiPolygonFromWKB(@var{wkb}[,@var{srid}])\nConstructs a MULTIPOLYGON value using its WKB representation and SRID.\n', '', ''),
(301, 'LOWER', 13, '   LOWER(@var{str})\nReturns the string @var{str} with all characters changed to lowercase\naccording to the current character set mapping (the default is ISO-8859-1\nLatin1).\n', 'mysql> SELECT LOWER(''QUADRATICALLY'');\n        -> ''quadratically''', ''),
(302, 'GEOMCOLLFROMWKB', 3, '   GeomCollFromWKB(@var{wkb}[,@var{srid}])\n   GeometryCollectionFromWKB(@var{wkt}[,@var{srid}])\nConstructs a GEOMETRYCOLLECTION value using its WKB representation and SRID.\n', '', ''),
(303, 'SPACE', 13, '   SPACE(@var{N})\nReturns a string consisting of @var{N} space characters.\n', 'mysql> SELECT SPACE(6);\n        -> ''      ''', ''),
(304, 'POWER', 10, '   POW(@var{X},@var{Y})\n   POWER(@var{X},@var{Y})\nReturns the value of @var{X} raised to the power of @var{Y}.\n', 'mysql> SELECT POW(2,2);\n        -> 4.000000\nmysql> SELECT POW(2,-2);\n        -> 0.250000', ''),
(305, 'INSERT DELAYED', 8, 'The DELAYED option for the INSERT statement is a\nMySQL extension to standard SQL that is very useful if you have clients\nthat can''t wait for the INSERT to complete.  This is a common\nproblem when you use MySQL for logging and you also\nperiodically run SELECT and UPDATE statements that take a\nlong time to complete.  DELAYED was introduced in MySQL\n3.22.15.\n\nWhen a client uses INSERT DELAYED, it gets an okay from the server at\nonce, and the row is queued to be inserted when the table is not in use by\nany other thread.\n\nAnother major benefit of using INSERT DELAYED is that inserts\nfrom many clients are bundled together and written in one block. This is much\nfaster than doing many separate inserts.\n\nThere are some constraints on the use of DELAYED:\n\n\n --- INSERT DELAYED works only with MyISAM and ISAM\ntables.\nAs of MySQL 4.0.14, it also works with InnoDB tables.\nFor MyISAM tables, if there are no free blocks in the middle of the\ndata file, concurrent SELECT and INSERT statements are supported.\nUnder these circumstances, you very seldom need to use INSERT\nDELAYED with MyISAM. See also : [MyISAM].\n\n --- INSERT DELAYED should be used only for INSERT statements that\nspecify value lists. This is enforced as of MySQL 4.0.18.  The server ignores\nDELAYED for INSERT DELAYED ... SELECT statements.\n\n --- The server ignores\nDELAYED for INSERT DELAYED ... ON DUPLICATE UPDATE statements.\n\n --- Because the statement returns immediately before the rows are inserted,\nyou cannot use LAST_INSERT_ID() to get the AUTO_INCREMENT\nvalue the statement might generate.\n\n --- DELAYED rows are not visible to SELECT statements until they\nactually have been inserted.\n', 'INSERT DELAYED ...', ''),
(306, 'OLD_PASSWORD', 4, '   OLD_PASSWORD(@var{str})\n\n\nOLD_PASSWORD() is available as of MySQL 4.1, when the implementation of\nPASSWORD() was changed to improve security. OLD_PASSWORD()\nreturns the value of the pre-4.1 implementation of PASSWORD().\n[Password hashing].\n\n   PASSWORD(@var{str})\nCalculates and returns a password string from the plaintext password\n@var{str}, or NULL if the argument was NULL. This is\nthe function that is used for encrypting MySQL passwords for storage\nin the Password column of the user grant table.\n', '', ''),
(307, 'WEEKOFYEAR', 23, '   WEEKOFYEAR(@var{date})\n\nReturns the calendar week of the date as a number in the\nrange from 1 to 53.\n', 'mysql> SELECT WEEKOFYEAR(''1998-02-20'');\n        -> 8', ''),
(308, 'MULTIPOLYGON', 6, '   MultiPolygon(@var{poly1},@var{poly2},...)\nConstructs a WKB MultiPolygon value from a set of WKB Polygon\narguments.\nIf any argument is not a WKB Polygon, the rerurn value is NULL.\n', '', ''),
(309, 'ALTER VIEW', 1, 'This statement changes the definition of an existing view.\n@var{select_statement} is as for CREATE VIEW.\nSee also : [CREATE VIEW,  , CREATE VIEW].\n', 'ALTER VIEW @var{view_name} [(@var{column_list})] AS @var{select_statement}', ''),
(310, 'CURRENT_TIMESTAMP', 23, '   CURRENT_TIMESTAMP\n   CURRENT_TIMESTAMP()\n\nCURRENT_TIMESTAMP and CURRENT_TIMESTAMP() are synonyms for\nNOW().\n', '', ''),
(311, 'SUBSTRING_INDEX', 13, '   SUBSTRING_INDEX(@var{str},@var{delim},@var{count})\nReturns the substring from string @var{str} before @var{count}\noccurrences of the delimiter @var{delim}.\nIf @var{count} is positive, everything to the left of the final delimiter\n(counting from the left) is returned.\nIf @var{count} is negative, everything to the right of the final delimiter\n(counting from the right) is returned.\n', 'mysql> SELECT SUBSTRING_INDEX(''www.mysql.com'', ''.'', 2);\n        -> ''www.mysql''\nmysql> SELECT SUBSTRING_INDEX(''www.mysql.com'', ''.'', -2);\n        -> ''mysql.com''', ''),
(312, 'DOUBLE', 2, '   DOUBLE[(@var{M},@var{D})] [UNSIGNED] [ZEROFILL]\n\nA normal-size (double-precision) floating-point number.\nAllowable values are -1.7976931348623157E+308 to\n-2.2250738585072014E-308, 0, and\n2.2250738585072014E-308 to 1.7976931348623157E+308.  If\nUNSIGNED is specified, negative values are disallowed.\n@var{M} is the display width and @var{D} is the number of decimals.\nDOUBLE without arguments or FLOAT(@var{p)} (where\n@var{p} is in the\nrange from 25 to 53) stands for a double-precision floating-point number.\n\n   DOUBLE PRECISION[(@var{M},@var{D})] [UNSIGNED] [ZEROFILL]\n   REAL[(@var{M},@var{D})] [UNSIGNED] [ZEROFILL]\n\nThese are synonyms for DOUBLE.\nException: If the server SQL mode includes the REAL_AS_FLOAT option,\nREAL is a synonym for FLOAT rather than DOUBLE.\n', '', ''),
(313, 'AUTO_INCREMENT', 2, 'The AUTO_INCREMENT attribute can be used to generate a unique\nidentity for new rows:\n', 'CREATE TABLE animals (\n             id MEDIUMINT NOT NULL AUTO_INCREMENT,\n             name CHAR(30) NOT NULL,\n             PRIMARY KEY (id)\n             );\nINSERT INTO animals (name) VALUES (''dog''),(''cat''),(''penguin''),\n                                  (''lax''),(''whale''),(''ostrich'');\nSELECT * FROM animals;', ''),
(314, 'CROSSES', 27, '   Crosses(@var{g1},@var{g2})\nReturns 1 if @var{g1} spatially crosses @var{g2}.\nReturns NULL if g1 is a Polygon or a MultiPolygon,\nor if @var{g2} is a Point or a MultiPoint.\nOtherwise, returns 0.\n\nThe term /spatially crosses/ denotes a spatial relation between two given\ngeometries that has the following properties:\n\n\n --- The two geometries intersect\n\n --- Their intersection results in a geometry that has\na dimension that is one less than the maximum dimension of the two given\ngeometries\n\n --- Their intersection is not equal to either of the two given geometries\n', '', ''),
(315, 'EXTERIORRING', 15, '   ExteriorRing(@var{poly})\nReturns the exterior ring of the Polygon value @var{poly}\nas a LineString.\n', 'mysql> SET @poly =\n    -> ''Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))'';\nmysql> SELECT AsText(ExteriorRing(GeomFromText(@poly)));\n+-------------------------------------------+\n| AsText(ExteriorRing(GeomFromText(@poly))) |\n+-------------------------------------------+\n| LINESTRING(0 0,0 3,3 3,3 0,0 0)           |\n+-------------------------------------------+', ''),
(316, 'ELT', 13, '   ELT(@var{N},@var{str1},@var{str2},@var{str3},...)\nReturns @var{str1} if @var{N} = 1, @var{str2} if @var{N} =\n2, and so on.  Returns NULL if @var{N} is less than 1\nor greater than the number of arguments.  ELT() is the complement of\nFIELD().\n', 'mysql> SELECT ELT(1, ''ej'', ''Heja'', ''hej'', ''foo'');\n        -> ''ej''\nmysql> SELECT ELT(4, ''ej'', ''Heja'', ''hej'', ''foo'');\n        -> ''foo''', ''),
(317, 'BLOB TYPE TEXT BLOB', 2, '   BLOB\n   TEXT\n\nA BLOB or TEXT column with a maximum length of 65,535 (2^16\n@minus{}1)\ncharacters.\n', '', ''),
(318, 'DIMENSION', 22, '   Dimension(@var{g})\nReturns the inherent dimension of the geometry value @var{g}. The result\ncan be @minus{}1, 0, 1, or 2. (The meaning of these values is given in\n[GIS class geometry].)\n', 'mysql> SELECT Dimension(GeomFromText(''LineString(1 1,2 2)''));\n+------------------------------------------------+\n| Dimension(GeomFromText(''LineString(1 1,2 2)'')) |\n+------------------------------------------------+\n|                                              1 |\n+------------------------------------------------+', ''),
(319, 'MONTH', 23, '   MONTH(@var{date})\nReturns the month for @var{date}, in the range 1 to 12.\n', 'mysql> SELECT MONTH(''1998-02-03'');\n        -> 2', ''),
(320, 'TIMEDIFF', 23, '   TIMEDIFF(@var{expr},@var{expr2})\n\n\nTIMEDIFF() returns the time between the start time\n@var{expr} and the end time @var{expr2}.\n@var{expr} and @var{expr2} are time or date-and-time expressions, but both\nmust be of the same type.\n', 'mysql> SELECT TIMEDIFF(''2000:01:01 00:00:00'',\n    ->                 ''2000:01:01 00:00:00.000001'');\n        -> ''-00:00:00.000001''\nmysql> SELECT TIMEDIFF(''1997-12-31 23:59:59.000001'',\n    ->                 ''1997-12-30 01:01:01.000002'');\n        -> ''46:58:57.999999''', ''),
(321, 'COUNT', 17, '   COUNT(@var{expr})\nReturns a count of the number of non-NULL values in the rows\nretrieved by a SELECT statement.\n', 'mysql> SELECT student.student_name,COUNT(*)\n    ->        FROM student,course\n    ->        WHERE student.student_id=course.student_id\n    ->        GROUP BY student_name;', ''),
(322, 'DROP DATABASE', 1, 'DROP DATABASE drops all tables in the database and deletes the\ndatabase.  Be /very/ careful with this statement!\nTo use DROP DATABASE, you need the DROP privilege on the\ndatabase.\n\nIn MySQL 3.22 or later, you can use the keywords IF EXISTS\nto prevent an error from occurring if the database doesn''t exist.\n\nDROP SCHEMA can be used as of MySQL 5.0.2.\n', 'DROP {DATABASE | SCHEMA} [IF EXISTS] @var{db_name}', ''),
(323, 'NULLIF', 14, '   NULLIF(@var{expr1},@var{expr2})\nReturns NULL if @var{expr1 = @var{expr2}} is true, else returns @var{expr1}.\nThis is the same as CASE WHEN @var{expr1 = @var{expr2} THEN NULL ELSE @var{expr1} END}.\n', 'mysql> SELECT NULLIF(1,1);\n        -> NULL\nmysql> SELECT NULLIF(1,2);\n        -> 1', ''),
(324, 'MIN MAX', 17, '   MIN(@var{expr})\n   MAX(@var{expr})\nReturns the minimum or maximum value of @var{expr}.  MIN() and\nMAX() may take a string argument; in such cases they return the\nminimum or maximum string value. See also : [MySQL indexes].\n', 'mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n    ->        FROM student\n    ->        GROUP BY student_name;', ''),
(325, 'LEFT', 13, '   LEFT(@var{str},@var{len})\nReturns the leftmost @var{len} characters from the string @var{str}.\n', 'mysql> SELECT LEFT(''foobarbar'', 5);\n        -> ''fooba''', ''),
(326, 'COUNT DISTINCT', 17, '   COUNT(DISTINCT @var{expr},[@var{expr}...])\nReturns a count of the number of different non-NULL values.\n', 'mysql> SELECT COUNT(DISTINCT results) FROM student;', '');
INSERT INTO `help_topic` (`help_topic_id`, `name`, `help_category_id`, `description`, `example`, `url`) VALUES
(327, 'WEEK', 23, '   WEEK(@var{date}[,@var{mode}])\nThe function returns the week number for @var{date}.  The two-argument form\nof WEEK() allows you to specify whether the week starts on Sunday or\nMonday and whether the return value should be in the range from 0 to\n53 or from 1 to 52. If the @var{mode} argument is\nomitted, the value of the default_week_format system variable is\nused (or 0 before MySQL 4.0.14).\nSee also : [Server system variables].\n\nThe following table describes how the @var{mode} argument works:\n\n     Value 	 Meaning\n   0 	 Week starts on Sunday; return value range is 0 to\n53; week 1 is the first week that starts in this year\n   1 	 Week starts on Monday; return value range is 0 to\n53; week 1 is the first week that has more than three days in this year\n   2 	 Week starts on Sunday; return value range is 1 to\n53; week 1 is the first week that starts in this year\n   3 	 Week starts on Monday; return value range is 1 to\n53; week 1 is the first week that has more than three days in this year\n   4 	 Week starts on Sunday; return value range is 0 to\n53; week 1 is the first week that has more than three days in this year\n   5 	 Week starts on Monday; return value range is 0 to\n53; week 1 is the first week that starts in this year\n   6 	 Week starts on Sunday; return value range is 1 to\n53; week 1 is the first week that has more than three days in this year\n   7 	 Week starts on Monday; return value range is 1 to\n53; week 1 is the first week that starts in this year\n  \n\nThe @var{mode} value of 3 can be used as of MySQL 4.0.5.\nValues of 4 and above can be used as of MySQL 4.0.17.\n', 'mysql> SELECT WEEK(''1998-02-20'');\n        -> 7\nmysql> SELECT WEEK(''1998-02-20'',0);\n        -> 7\nmysql> SELECT WEEK(''1998-02-20'',1);\n        -> 8\nmysql> SELECT WEEK(''1998-12-31'',1);\n        -> 53', ''),
(328, 'RTRIM', 13, '   RTRIM(@var{str})\nReturns the string @var{str} with trailing space characters removed.\n', 'mysql> SELECT RTRIM(''barbar   '');\n        -> ''barbar''', ''),
(329, 'RESET MASTER', 8, 'RESET MASTER\n\nDeletes all binary logs listed in the index file,\nresets the binary log index file to be empty, and creates a new binary log\nfile.\n\nThis statement was named FLUSH MASTER before MySQL 3.23.26.\n', '', ''),
(330, 'IF', 14, '   IF(@var{expr1},@var{expr2},@var{expr3})\nIf @var{expr1} is TRUE (@var{expr1 <> 0} and @var{expr1 <> NULL}) then\nIF() returns @var{expr2}, else it returns @var{expr3}.\nIF() returns a numeric or string value, depending on the context\nin which it is used.\n', 'mysql> SELECT IF(1>2,2,3);\n        -> 3\nmysql> SELECT IF(1<2,''yes'',''no'');\n        -> ''yes''\nmysql> SELECT IF(STRCMP(''test'',''test1''),''no'',''yes'');\n        -> ''no''', ''),
(331, 'SHOW MASTER STATUS', 8, 'SHOW MASTER STATUS\n\nProvides status information on the binary log files of the master.\n', '', ''),
(332, 'UCASE', 13, '   UCASE(@var{str})\n\nUCASE() is a synonym for UPPER().\n', '', ''),
(333, 'YEAR TYPE', 2, '   YEAR[(2|4)]\n\nA year in two-digit or four-digit format. The default is four-digit format.\nIn four-digit format, the\nallowable values are 1901 to 2155, and 0000.\nIn two-digit format, the allowable values are\n70 to 69, representing years from\n1970 to 2069.  MySQL displays YEAR values in\nYYYY format, but allows you to assign values to YEAR columns\nusing either strings or numbers. The YEAR type is unavailable prior\nto MySQL 3.22.\n', '', ''),
(334, 'NUMERIC', 2, '   DECIMAL[(@var{M}[,@var{D}])] [UNSIGNED] [ZEROFILL]\n\nAn unpacked fixed-point number.  Behaves like a CHAR column;\n``unpacked'''' means the number is stored as a string, using one character for\neach digit of the value.  @var{M} is the total number of digits and\n@var{D} is the number of decimals.  The decimal point and (for negative\nnumbers) the - sign are not counted in @var{M}, although space for\nthem is reserved. If @var{D} is 0, values have no decimal point or\nfractional part.  The maximum range of DECIMAL values is the same as\nfor DOUBLE, but the actual range for a given DECIMAL column\nmay be constrained by the choice of @var{M} and @var{D}.  If\nUNSIGNED is specified, negative values are disallowed.\n\nIf @var{D} is omitted, the default is 0.  If @var{M} is omitted, the\ndefault is 10.\n\nPrior to MySQL 3.23, the @var{M} argument must be large enough to\ninclude the space needed for the sign and the decimal point.\n\n   DEC[(@var{M}[,@var{D}])] [UNSIGNED] [ZEROFILL]\n   NUMERIC[(@var{M}[,@var{D}])] [UNSIGNED] [ZEROFILL]\n   FIXED[(@var{M}[,@var{D}])] [UNSIGNED] [ZEROFILL]\n\nThese are synonyms for DECIMAL.\n\nThe FIXED synonym was added in MySQL 4.1.0 for compatibility\nwith other servers.\n', '', ''),
(335, 'MATCH AGAINST', 13, 'As of MySQL 3.23.23, MySQL has support for full-text indexing\nand searching.  A full-text index in MySQL is an index of type\nFULLTEXT.  FULLTEXT indexes are used with MyISAM tables\nonly and can be created from CHAR, VARCHAR,\nor TEXT columns at CREATE TABLE time or added later with\nALTER TABLE or CREATE INDEX.  For large datasets, it will be\nmuch faster to load your data into a table that has no FULLTEXT\nindex, then create the index with ALTER TABLE (or\nCREATE INDEX).  Loading data into a table that already has a\nFULLTEXT index could be significantly slower.\n', 'mysql> SELECT id, body, MATCH (title,body) AGAINST\n    -> (''Security implications of running MySQL as root'') AS score\n    -> FROM articles WHERE MATCH (title,body) AGAINST\n    -> (''Security implications of running MySQL as root'');\n+----+-------------------------------------+-----------------+\n| id | body                                | score           |\n+----+-------------------------------------+-----------------+\n|  4 | 1. Never run mysqld as root. 2. ... | 1.5219271183014 |\n|  6 | When configured properly, MySQL ... | 1.3114095926285 |\n+----+-------------------------------------+-----------------+\n2 rows in set (0.00 sec)', ''),
(336, 'POSITION', 13, '   POSITION(@var{substr} IN @var{str})\n\nPOSITION(@var{substr IN @var{str})} is a synonym for LOCATE(@var{substr,@var{str})}.\n', 'mysql> SELECT LOCATE(''bar'', ''foobarbar'');\n        -> 4\nmysql> SELECT LOCATE(''xbar'', ''foobar'');\n        -> 0\nmysql> SELECT LOCATE(''bar'', ''foobarbar'',5);\n        -> 7', ''),
(337, 'IN', 26, '   @var{expr} IN (@var{value},...)\nReturns 1 if @var{expr} is any of the values in the IN list,\nelse returns 0.  If all values are constants, they are\nevaluated according to the type of @var{expr} and sorted. The search for the\nitem then is done using a binary search. This means IN is very quick\nif the IN value list consists entirely of constants.  If @var{expr}\nis a case-sensitive string expression, the string comparison is performed in\ncase-sensitive fashion.\n', 'mysql> SELECT 2 IN (0,3,5,''wefwf'');\n        -> 0\nmysql> SELECT ''wefwf'' IN (0,3,5,''wefwf'');\n        -> 1', ''),
(338, 'ASTEXT', 16, '   AsText(@var{g})\nConverts a value in internal geometry format to its WKT representation\nand returns the string result.\n', 'mysql> SELECT AsText(g) FROM geom;\n+-------------------------+\n| AsText(p1)              |\n+-------------------------+\n| POINT(1 1)              |\n| LINESTRING(0 0,1 1,2 2) |\n+-------------------------+', ''),
(339, 'PURGE MASTER LOGS BEFORE TO', 8, 'PURGE {MASTER | BINARY} LOGS TO ''@var{log_name}''\nPURGE {MASTER | BINARY} LOGS BEFORE ''@var{date}''\n\nDeletes all the binary logs listed in the log\nindex that are strictly prior to the specified log or date.\nThe logs also are removed from the list recorded in the log index file,\nso that the given log becomes the first. \n', '', ''),
(340, 'SET GLOBAL SQL_SLAVE_SKIP_COUNTER', 7, 'SET GLOBAL SQL_SLAVE_SKIP_COUNTER = @var{n}\n\nSkip the next @var{n} events from the master. This is\nuseful for recovering from replication stops caused by a statement.\n\nThis statement is valid only when the slave thread is not running.\nOtherwise, it produces an error.\n\nBefore MySQL 4.0, omit the GLOBAL keyword from the statement.\n', '', ''),
(341, 'GRANT', 7, 'The GRANT and REVOKE statements allow system administrators to\ncreate MySQL user accounts and to grant rights to and revoke them from\naccounts.  GRANT and REVOKE are implemented in MySQL 3.22.11\nor later. For earlier MySQL versions, these statements do nothing.\n\nMySQL account information is stored in the tables of the mysql\ndatabase. This database and the access control system are discussed\nextensively in [MySQL Database Administration], which you should consult\nfor additional details.\n\nPrivileges can be granted at four levels:\n\n   Global level\nGlobal privileges apply to all databases on a given server. These privileges\nare stored in the mysql.user table.\nGRANT ALL ON *.* and\nREVOKE ALL ON *.* grant and revoke only global privileges.\n\n   Database level\nDatabase privileges apply to all tables in a given database. These privileges\nare stored in the mysql.db and mysql.host tables.\nGRANT ALL ON @var{db_name.*} and\nREVOKE ALL ON @var{db_name.*} grant and revoke only database privileges.\n\n   Table level\nTable privileges apply to all columns in a given table. These privileges are\nstored in the mysql.tables_priv table.\nGRANT ALL ON @var{db_name.tbl_name} and\nREVOKE ALL ON @var{db_name.tbl_name} grant and revoke only table privileges.\n\n   Column level\nColumn privileges apply to single columns in a given table. These privileges are\nstored in the mysql.columns_priv table.\nWhen using REVOKE, you must specify the same columns that were granted.\n  \n', 'GRANT @var{priv_type} [(@var{column_list})] [, @var{priv_type} [(@var{column_list})]] ...\n    ON {@var{tbl_name} | * | *.* | @var{db_name}.*}\n    TO @var{user} [IDENTIFIED BY [PASSWORD] ''@var{password}'']\n        [, @var{user} [IDENTIFIED BY [PASSWORD] ''@var{password}'']] ...\n    [REQUIRE\n        NONE |\n        [{SSL| X509}]\n        [CIPHER ''@var{cipher}'' [AND]]\n        [ISSUER ''@var{issuer}'' [AND]]\n        [SUBJECT ''@var{subject}'']]\n    [WITH [GRANT OPTION | MAX_QUERIES_PER_HOUR @var{count} |\n                          MAX_UPDATES_PER_HOUR @var{count} |\n                          MAX_CONNECTIONS_PER_HOUR @var{count}]]', ''),
(342, 'NOT REGEXP', 13, '   @var{expr} NOT REGEXP @var{pat}\n   @var{expr} NOT RLIKE @var{pat}\n\nThis is the same as NOT (@var{expr REGEXP @var{pat})}.\n', '', ''),
(343, 'REPLACE', 13, '   REPLACE(@var{str},@var{from_str},@var{to_str})\nReturns the string @var{str} with all occurrences of the string\n@var{from_str} replaced by the string @var{to_str}.\n', 'mysql> SELECT REPLACE(''www.mysql.com'', ''w'', ''Ww'');\n        -> ''WwWwWw.mysql.com''', ''),
(344, 'SYSDATE', 23, '   SYSDATE()\n\nSYSDATE() is a synonym for NOW().\n', '', ''),
(345, 'ENVELOPE', 22, '   Envelope(@var{g})\nReturns the Minimum Bounding Rectangle (MBR) for the geometry value @var{g}.\nThe result is returned as a Polygon value.\n\nmysql> SELECT AsText(Envelope(GeomFromText(''LineString(1 1,2 2)'')));\n+-------------------------------------------------------+\n| AsText(Envelope(GeomFromText(''LineString(1 1,2 2)''))) |\n+-------------------------------------------------------+\n| POLYGON((1 1,2 1,2 2,1 2,1 1))                        |\n+-------------------------------------------------------+\n\nThe polygon is defined by the corner points of the bounding box:\n\nPOLYGON((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n', '', ''),
(346, 'WKT DEFINITION', 16, 'The Well-Known Text (WKT) representation of Geometry is designed to\nexchange geometry data in ASCII form.\n', '', ''),
(347, 'COALESCE', 26, '   COALESCE(@var{value},...)\nReturns the first non-NULL value in the list.\n', 'mysql> SELECT COALESCE(NULL,1);\n        -> 1\nmysql> SELECT COALESCE(NULL,NULL,NULL);\n        -> NULL', ''),
(348, 'GEOMFROMTEXT', 16, '   GeomFromText(@var{wkt}[,@var{srid}])\n   GeometryFromText(@var{wkt}[,@var{srid}])\nConstructs a geometry value of any type using its WKT representation and SRID.\n', '', ''),
(349, 'LPAD', 13, '   LPAD(@var{str},@var{len},@var{padstr})\nReturns the string @var{str}, left-padded with the string @var{padstr}\nto a length of @var{len} characters. If @var{str} is longer\nthan @var{len}, the return value is shortened to @var{len} characters.\n', 'mysql> SELECT LPAD(''hi'',4,''??'');\n        -> ''??hi''\nmysql> SELECT LPAD(''hi'',1,''??'');\n        -> ''h''', ''),
(350, 'LOG', 10, '   LOG(@var{X})\n   LOG(@var{B},@var{X})\nIf called with one parameter, this function returns the natural logarithm\nof @var{X}.\n', 'mysql> SELECT LOG(2);\n        -> 0.693147\nmysql> SELECT LOG(-2);\n        -> NULL', ''),
(351, 'RESET', 8, 'The RESET statement is used to clear the state of various server\noperations. It also acts as a stronger\nversion of the FLUSH statement.  See also : [FLUSH, , FLUSH].\n', 'RESET @var{reset_option} [, @var{reset_option}] ...', ''),
(352, 'RESTORE', 7, '\nRESTORE TABLE @var{tbl_name} [, @var{tbl_name}] ... FROM ''@var{/path/to/backup/directory}''\n\nRestores the table or tables from a backup that was made with BACKUP\nTABLE. Existing tables will not be overwritten; if you try to restore over\nan existing table, you will get an error.  Just as BACKUP TABLE,\nRESTORE TABLE currently works only for MyISAM tables.\nThe directory should be specified as a full pathname.\n\nThe backup for each table consists of its *.frm format file and\n*.MYD data file. The restore operation restores those files, then\nuses them to rebuild the *.MYI index file.  Restoring takes longer\nthan backing up due to the need to rebuild the indexes. The more indexes the\ntable has, the longer it will take.\n', '', ''),
(353, 'CONSTRAINT', 7, 'The syntax of a foreign key constraint definition in InnoDB looks like\nthis:\n\n[CONSTRAINT @var{symbol}] FOREIGN KEY [@var{id}] (@var{index_col_name}, ...)\n    REFERENCES @var{tbl_name} (@var{index_col_name}, ...)\n    [ON DELETE {RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT}]\n    [ON UPDATE {RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT}]\n', 'CREATE TABLE product (category INT NOT NULL, id INT NOT NULL,\n                      price DECIMAL,\n                      PRIMARY KEY(category, id)) TYPE=INNODB;\nCREATE TABLE customer (id INT NOT NULL,\n                      PRIMARY KEY (id)) TYPE=INNODB;\nCREATE TABLE product_order (no INT NOT NULL AUTO_INCREMENT,\n                      product_category INT NOT NULL,\n                      product_id INT NOT NULL,\n                      customer_id INT NOT NULL,\n                      PRIMARY KEY(no),\n                      INDEX (product_category, product_id),\n                      FOREIGN KEY (product_category, product_id)\n                        REFERENCES product(category, id)\n                        ON UPDATE CASCADE ON DELETE RESTRICT,\n                      INDEX (customer_id),\n                      FOREIGN KEY (customer_id)\n                        REFERENCES customer(id)) TYPE=INNODB;', ''),
(354, 'LOCK', 24, 'LOCK TABLES locks tables for the current thread.  UNLOCK\nTABLES releases any locks held by the current thread.  All tables that\nare locked by the current thread are implicitly unlocked when the\nthread issues another LOCK TABLES, or when the connection to the\nserver is closed.\n', 'LOCK TABLES\n    @var{tbl_name} [AS @var{alias}] {READ [LOCAL] | [LOW_PRIORITY] WRITE}\n    [, @var{tbl_name} [AS @var{alias}] {READ [LOCAL] | [LOW_PRIORITY] WRITE}] ...\nUNLOCK TABLES', ''),
(355, 'NUMPOINTS', 9, '   NumPoints(@var{ls})\nReturns the number of points in the LineString value @var{ls}.\n', 'mysql> SET @ls = ''LineString(1 1,2 2,3 3)'';\nmysql> SELECT NumPoints(GeomFromText(@ls));\n+------------------------------+\n| NumPoints(GeomFromText(@ls)) |\n+------------------------------+\n|                            3 |\n+------------------------------+', ''),
(356, 'DROP INDEX', 1, 'DROP INDEX drops the index named @var{index_name} from the table\n@var{tbl_name}.  In MySQL 3.22 or later, DROP INDEX is mapped to an\nALTER TABLE statement to drop the index.  See also : [ALTER TABLE, ,\nALTER TABLE].  DROP INDEX doesn''t do anything prior to MySQL\n3.22.\n', 'DROP INDEX @var{index_name} ON @var{tbl_name}', ''),
(357, 'TRUNCATE TABLE', 8, 'TRUNCATE TABLE empties a table completely.\nLogically, this is equivalent to a DELETE statement that deletes all\nrows, but there are practical differences under some circumstances.\n\nFor InnoDB, TRUNCATE TABLE is mapped to\nDELETE, so there is no difference. For other storage engines,\nTRUNCATE TABLE differs from DELETE FROM ...\nin the following ways from MySQL 4.0 and up:\n\n --- Truncate operations drop and re-create the table, which is much faster\nthan deleting rows one by one.\n --- Truncate operations are not transaction-safe; you will get an error if\nyou have an active transaction or an active table lock.\n --- The number of deleted rows is not returned.\n --- As long as the table definition file *@var{tbl_name.frm} is\nvalid, the table can be re-created as an empty table with TRUNCATE\nTABLE, even if the data or index files have become corrupted.\n --- The table handler does not remember the last used AUTO_INCREMENT\nvalue, but starts counting from the beginning.  This is true even for\nMyISAM, which normally does not reuse sequence values.\n\nIn MySQL 3.23, TRUNCATE TABLE is mapped to\nCOMMIT; DELETE FROM @var{tbl_name}, so it behaves like DELETE.\nSee also : [DELETE,  , DELETE].\n\nTRUNCATE TABLE is an Oracle SQL extension.\nThis statement was added in MySQL 3.23.28, although from 3.23.28\nto 3.23.32, the keyword TABLE must be omitted.\n', 'TRUNCATE TABLE @var{tbl_name}', ''),
(358, 'JOIN', 8, 'MySQL supports the following JOIN syntaxes for the\n@var{table_references} part of SELECT statements and multiple-table\nDELETE and UPDATE statements:\n\n@var{table_reference}, @var{table_reference}\n@var{table_reference} [INNER | CROSS] JOIN @var{table_reference} [@var{join_condition}]\n@var{table_reference} STRAIGHT_JOIN @var{table_reference}\n@var{table_reference} LEFT [OUTER] JOIN @var{table_reference} [@var{join_condition}]\n@var{table_reference} NATURAL [LEFT [OUTER]] JOIN @var{table_reference}\n{ OJ @var{table_reference} LEFT OUTER JOIN @var{table_reference}\n    ON @var{conditional_expr} }\n@var{table_reference} RIGHT [OUTER] JOIN @var{table_reference} [@var{join_condition}]\n@var{table_reference} NATURAL [RIGHT [OUTER]] JOIN @var{table_reference}\n\n@var{table_reference} is defined as:\n\n@var{tbl_name} [[AS] @var{alias}]\n    [[USE INDEX (@var{key_list})]\n      | [IGNORE INDEX (@var{key_list})]\n      | [FORCE INDEX (@var{key_list})]]\n\n@var{join_condition} is defined as:\n\nON @var{conditional_expr} | USING (@var{column_list})\n', 'mysql> SELECT table1.* FROM table1\n    ->        LEFT JOIN table2 ON table1.id=table2.id\n    ->        WHERE table2.id IS NULL;', ''),
(359, 'INSERT SELECT', 8, 'INSERT [LOW_PRIORITY] [IGNORE] [INTO] @var{tbl_name} [(@var{column_list})]\n    SELECT ...\n\nWith INSERT ... SELECT, you can quickly insert many rows\ninto a table from one or many tables.\n', 'INSERT INTO tbl_temp2 (fld_id)\n    SELECT tbl_temp1.fld_order_id\n    FROM tbl_temp1 WHERE tbl_temp1.fld_order_id > 100;', ''),
(360, 'CONV', 13, '   CONV(@var{N},@var{from_base},@var{to_base})\nConverts numbers between different number bases.  Returns a string\nrepresentation of the number @var{N}, converted from base @var{from_base}\nto base @var{to_base}.  Returns NULL if any argument is NULL.\nThe argument @var{N} is interpreted as an integer, but may be specified as\nan integer or a string.  The minimum base is 2 and the maximum base is\n36.  If @var{to_base} is a negative number, @var{N} is regarded as a\nsigned number.  Otherwise, @var{N} is treated as unsigned.  CONV() works\nwith 64-bit precision.\n', 'mysql> SELECT CONV(''a'',16,2);\n        -> ''1010''\nmysql> SELECT CONV(''6E'',18,8);\n        -> ''172''\nmysql> SELECT CONV(-17,10,-18);\n        -> ''-H''\nmysql> SELECT CONV(10+''10''+''10''+0xa,10,10);\n        -> ''40''', ''),
(361, 'SAVEPOINT', 24, 'SAVEPOINT identifier\nROLLBACK TO SAVEPOINT identifier\n\nStarting from MySQL 4.0.14 and 4.1.1, InnoDB supports the SQL statements\nSAVEPOINT and ROLLBACK TO SAVEPOINT.\n', '', ''),
(362, 'UNCOMPRESSED_LENGTH', 13, '   UNCOMPRESSED_LENGTH(@var{compressed_string})\nReturns the length of a compressed string before compression.\n', 'mysql> SELECT UNCOMPRESSED_LENGTH(COMPRESS(REPEAT(''a'',30)));\n        -> 30', ''),
(363, 'CURTIME', 23, '   CURTIME()\n\nReturns the current time as a value in ''HH:MM:SS'' or HHMMSS\nformat, depending on whether the function is used in a string or numeric\ncontext.\n', 'mysql> SELECT CURTIME();\n        -> ''23:50:26''\nmysql> SELECT CURTIME() + 0;\n        -> 235026', ''),
(364, 'SUBTIME', 23, '   SUBTIME(@var{expr},@var{expr2})\n\n\nSUBTIME() subtracts @var{expr2} from @var{expr} and returns the result.\n@var{expr} is a time or datetime expression, and @var{expr2} is a time\nexpression.\n', 'mysql> SELECT SUBTIME(''1997-12-31 23:59:59.999999'',\n    ->                ''1 1:1:1.000002'');\n        -> ''1997-12-30 22:58:58.999997''\nmysql> SELECT SUBTIME(''01:00:00.999999'', ''02:00:00.999998'');\n        -> ''-00:59:59.999999''', ''),
(365, '- UNARY', 10, '   -\nUnary minus. Changes the sign of the argument.\n', 'mysql> SELECT - 2;\n        -> -2', ''),
(366, 'AVG', 17, '   AVG(@var{expr})\nReturns the average value of @var{expr}.\n', 'mysql> SELECT student_name, AVG(test_score)\n    ->        FROM student\n    ->        GROUP BY student_name;', ''),
(367, 'CONCAT_WS', 13, '   CONCAT_WS(@var{separator},@var{str1},@var{str2},...)\n\nCONCAT_WS() stands for CONCAT With Separator and is a special form of\nCONCAT().  The first argument is the separator for the rest of the\narguments.\nThe separator is added between the strings to be concatenated.\nThe separator can be a string as can the rest of the\narguments. If the separator is NULL, the result is NULL.\nThe function skips any NULL values after the\nseparator argument.\n', 'mysql> SELECT CONCAT_WS('','',''First name'',''Second name'',''Last Name'');\n        -> ''First name,Second name,Last Name''\nmysql> SELECT CONCAT_WS('','',''First name'',NULL,''Last Name'');\n        -> ''First name,Last Name''', ''),
(368, 'INET_NTOA', 11, '   INET_NTOA(@var{expr})\nGiven a numeric network address (4 or 8 byte), returns the dotted-quad\nrepresentation of the address as a string.\n', 'mysql> SELECT INET_NTOA(3520061480);\n        -> ''209.207.224.40''', ''),
(369, 'SMALLINT', 2, '   SMALLINT[(@var{M})] [UNSIGNED] [ZEROFILL]\n\nA small integer. The signed range is -32768 to 32767. The\nunsigned range is 0 to 65535.\n', '', ''),
(370, 'MBRINTERSECTS', 0, '   MBRIntersects(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not the Minimum Bounding Rectangles of\nthe two geometries @var{g1} and @var{g2} intersect.\n', '', ''),
(371, 'RAND', 10, '   RAND()\n   RAND(@var{N})\nReturns a random floating-point value in the range from 0 to 1.0.\nIf an integer argument @var{N} is specified, it is used as the seed value\n(producing a repeatable sequence).\n', 'mysql> SELECT RAND();\n        -> 0.9233482386203\nmysql> SELECT RAND(20);\n        -> 0.15888261251047\nmysql> SELECT RAND(20);\n        -> 0.15888261251047\nmysql> SELECT RAND();\n        -> 0.63553050033332\nmysql> SELECT RAND();\n        -> 0.70100469486881', ''),
(372, 'UNHEX', 13, '   UNHEX(@var{str})\n\nDoes the opposite of HEX(@var{str)}. That is, it interprets each pair of\nhexadecimal digits in the argument as a number and converts it to the\ncharacter represented by the number. The resulting characters are returned as\na binary string.\n', 'mysql> SELECT UNHEX(''4D7953514C'');\n        -> ''MySQL''\nmysql> SELECT 0x4D7953514C;\n        -> ''MySQL''\nmysql> SELECT UNHEX(HEX(''string''));\n        -> ''string''\nmysql> SELECT HEX(UNHEX(''1267''));\n        -> ''1267''', ''),
(373, 'CHARSET', 28, '   CHARSET(@var{str})\nReturns the character set of the string argument.\n', 'mysql> SELECT CHARSET(''abc'');\n        -> ''latin1''\nmysql> SELECT CHARSET(CONVERT(''abc'' USING utf8));\n        -> ''utf8''\nmysql> SELECT CHARSET(USER());\n        -> ''utf8''', ''),
(374, 'TIMESTAMPDIFF', 23, '   TIMESTAMPDIFF(@var{interval},@var{datetime_expr1},@var{datetime_expr2})\n\nReturns the integer difference between the date or datetime expressions\n@var{datetime_expr1} and\n@var{datetime_expr2}. The unit for the result is given by the\n@var{interval} argument. The legal values for @var{interval} are the same as\nthose listed in the description of the TIMESTAMPADD() function.\n', '', ''),
(375, 'LONGBLOB', 2, '   LONGBLOB\n   LONGTEXT\n\nA BLOB or TEXT column with a maximum length of 4,294,967,295 or\n4GB (2^32 @minus{} 1) characters.  Up to MySQL\n3.23, the client/server protocol and MyISAM tables had a limit\nof 16MB per communication packet / table row. From MySQL 4.0, the maximum\nallowed length of LONGBLOB or LONGTEXT columns depends on the\nconfigured maximum packet size in the client/server protocol and available\nmemory.\n', '', ''),
(376, 'YEAR', 23, '   YEAR(@var{date})\nReturns the year for @var{date}, in the range 1000 to 9999.\n', 'mysql> SELECT YEAR(''98-02-03'');\n        -> 1998', ''),
(377, 'CHAR BYTE', 21, 'CHAR BYTE is an alias for CHAR BINARY.\n', '', ''),
(378, 'SRID', 22, '   SRID(@var{g})\nReturns an integer indicating the Spatial Reference System ID for the geometry\nvalue @var{g}.\n', 'mysql> SELECT SRID(GeomFromText(''LineString(1 1,2 2)'',101));\n+-----------------------------------------------+\n| SRID(GeomFromText(''LineString(1 1,2 2)'',101)) |\n+-----------------------------------------------+\n|                                           101 |\n+-----------------------------------------------+', ''),
(379, 'TIMESTAMPDIFF FUNCTION', 23, '', 'mysql> SELECT TIMESTAMPDIFF(MONTH,''2003-02-01'',''2003-05-01'');\n        -> 3\nmysql> SELECT TIMESTAMPDIFF(YEAR,''2002-05-01'',''2001-01-01'');\n        -> -1', ''),
(380, 'START TRANSACTION', 24, 'By default, MySQL runs with autocommit mode enabled. This means that\nas soon as you execute a statement that updates (modifies) a table,\nMySQL stores the update on disk.\n\nIf you are using transaction-safe tables (like InnoDB or BDB),\nyou can disable autocommit mode with the following statement:\n\nSET AUTOCOMMIT=0;\n\nAfter disabling autocommit mode by setting the AUTOCOMMIT variable to\nzero, you must use COMMIT to store your changes to disk or\nROLLBACK if you want to ignore the changes you have made since\nthe beginning of your transaction.\n\nIf you want to disable autocommit mode for a single series of\nstatements, you can use the START TRANSACTION statement:\n', 'START TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;', ''),
(381, 'REPLACE INTO', 8, 'REPLACE works exactly like INSERT, except that if an old\nrecord in the table has the same value as a new record for a PRIMARY\nKEY or a UNIQUE index, the old record is deleted before the new\nrecord is inserted.\nSee also : [INSERT, ,INSERT].\n\nNote that unless the table has a PRIMARY KEY or UNIQUE index,\nusing a REPLACE statement makes no sense. It becomes equivalent to\nINSERT, because there is no index to be used to determine whether a new\nrow duplicates another.\n\nValues for all columns are taken from the values specified in the\nREPLACE statement.  Any missing columns are set to their default\nvalues, just as happens for INSERT.  You can''t refer to values from\nthe old row and use them in the new row.  It appeared that you could do this\nin some old MySQL versions, but that was a bug that has been corrected.\n\nTo be able to use REPLACE, you must have INSERT and\nDELETE privileges for the table.\n', 'REPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] @var{tbl_name} [(@var{col_name},...)]\n    VALUES ({@var{expr} | DEFAULT},...),(...),...', ''),
(382, 'DATEDIFF', 23, '   DATEDIFF(@var{expr},@var{expr2})\n\n\nDATEDIFF() returns the number of days between the start date\n@var{expr} and the end date @var{expr2}.\n@var{expr} and @var{expr2} are date or date-and-time expressions.\nOnly the date parts of the values are used in the calculation.\n', 'mysql> SELECT DATEDIFF(''1997-12-31 23:59:59'',''1997-12-30'');\n        -> 1\nmysql> SELECT DATEDIFF(''1997-11-30 23:59:59'',''1997-12-31'');\n        -> -31', ''),
(383, '<<', 19, '   <<\nShifts a longlong (BIGINT) number to the left.\n', 'mysql> SELECT 1 << 2;\n        -> 4', ''),
(384, '<=', 26, '   <=\nLess than or equal:\n', 'mysql> SELECT 0.1 <= 2;\n        -> 1', ''),
(385, 'LEAST', 26, '   LEAST(@var{value1},@var{value2},...)\nWith two or more arguments, returns the smallest (minimum-valued) argument.\nThe arguments are compared using the following rules.\n\n --- If the return value is used in an INTEGER context or all arguments\nare integer-valued, they are compared as integers.\n\n --- If the return value is used in a REAL context or all arguments are\nreal-valued, they are compared as reals.\n\n --- If any argument is a case-sensitive string, the arguments are compared\nas case-sensitive strings.\n\n --- In other cases, the arguments are compared as case-insensitive strings.\n', 'mysql> SELECT LEAST(2,0);\n        -> 0\nmysql> SELECT LEAST(34.0,3.0,5.0,767.0);\n        -> 3.0\nmysql> SELECT LEAST(''B'',''A'',''C'');\n        -> ''A''', ''),
(386, 'LOCALTIME', 23, '   LOCALTIME\n   LOCALTIME()\n\nLOCALTIME and LOCALTIME() are synonyms for\nNOW().\n', '', ''),
(387, 'MBRTOUCHES', 0, '   MBRTouches(@var{g1},@var{g2})\nReturns 1 or 0 to indicate whether or not the Minimum Bounding Rectangles of\nthe two geometries @var{g1} and @var{g2} touch.\n', '', ''),
(388, 'MAKEDATE', 23, '   MAKEDATE(@var{year},@var{dayofyear})\n\nReturns a date, given year and day-of-year values.\n@var{dayofyear} must be greater than 0 or the result will be NULL.\n', 'mysql> SELECT MAKEDATE(2001,31), MAKEDATE(2001,32);\n        -> ''2001-01-31'', ''2001-02-01''\nmysql> SELECT MAKEDATE(2001,365), MAKEDATE(2004,365);\n        -> ''2001-12-31'', ''2004-12-30''\nmysql> SELECT MAKEDATE(2001,0);\n        -> NULL', ''),
(389, 'DAY', 23, '   DAY(@var{date})\n\nDAY() is a synonym for DAYOFMONTH().\nIt is available as of MySQL 4.1.1.\n', '', '');

-- --------------------------------------------------------

--
-- Table structure for table `host`
--

CREATE TABLE IF NOT EXISTS `host` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Host privileges;  Merged with database privileges';

-- --------------------------------------------------------

--
-- Table structure for table `ndb_binlog_index`
--

CREATE TABLE IF NOT EXISTS `ndb_binlog_index` (
  `Position` bigint(20) unsigned NOT NULL,
  `File` varchar(255) NOT NULL,
  `epoch` bigint(20) unsigned NOT NULL,
  `inserts` bigint(20) unsigned NOT NULL,
  `updates` bigint(20) unsigned NOT NULL,
  `deletes` bigint(20) unsigned NOT NULL,
  `schemaops` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`epoch`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `plugin`
--

CREATE TABLE IF NOT EXISTS `plugin` (
  `name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `dl` char(128) COLLATE utf8_bin NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='MySQL plugins';

-- --------------------------------------------------------

--
-- Table structure for table `proc`
--

CREATE TABLE IF NOT EXISTS `proc` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `type` enum('FUNCTION','PROCEDURE') NOT NULL,
  `specific_name` char(64) NOT NULL DEFAULT '',
  `language` enum('SQL') NOT NULL DEFAULT 'SQL',
  `sql_data_access` enum('CONTAINS_SQL','NO_SQL','READS_SQL_DATA','MODIFIES_SQL_DATA') NOT NULL DEFAULT 'CONTAINS_SQL',
  `is_deterministic` enum('YES','NO') NOT NULL DEFAULT 'NO',
  `security_type` enum('INVOKER','DEFINER') NOT NULL DEFAULT 'DEFINER',
  `param_list` blob NOT NULL,
  `returns` longblob NOT NULL,
  `body` longblob NOT NULL,
  `definer` char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','IGNORE_BAD_TABLE_OPTIONS','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`,`type`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Stored Procedures';

-- --------------------------------------------------------

--
-- Table structure for table `procs_priv`
--

CREATE TABLE IF NOT EXISTS `procs_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Routine_name` char(64) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Routine_type` enum('FUNCTION','PROCEDURE') COLLATE utf8_bin NOT NULL,
  `Grantor` char(77) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proc_priv` set('Execute','Alter Routine','Grant') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`Db`,`User`,`Routine_name`,`Routine_type`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Procedure privileges';

-- --------------------------------------------------------

--
-- Table structure for table `servers`
--

CREATE TABLE IF NOT EXISTS `servers` (
  `Server_name` char(64) NOT NULL DEFAULT '',
  `Host` char(64) NOT NULL DEFAULT '',
  `Db` char(64) NOT NULL DEFAULT '',
  `Username` char(64) NOT NULL DEFAULT '',
  `Password` char(64) NOT NULL DEFAULT '',
  `Port` int(4) NOT NULL DEFAULT '0',
  `Socket` char(64) NOT NULL DEFAULT '',
  `Wrapper` char(64) NOT NULL DEFAULT '',
  `Owner` char(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`Server_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='MySQL Foreign Servers table';

-- --------------------------------------------------------

--
-- Table structure for table `slow_log`
--

CREATE TABLE IF NOT EXISTS `slow_log` (
  `start_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_host` mediumtext NOT NULL,
  `query_time` time(6) NOT NULL,
  `lock_time` time(6) NOT NULL,
  `rows_sent` int(11) NOT NULL,
  `rows_examined` int(11) NOT NULL,
  `db` varchar(512) NOT NULL,
  `last_insert_id` int(11) NOT NULL,
  `insert_id` int(11) NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `sql_text` mediumtext NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='Slow log';

-- --------------------------------------------------------

--
-- Table structure for table `tables_priv`
--

CREATE TABLE IF NOT EXISTS `tables_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Grantor` char(77) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Table_priv` set('Select','Insert','Update','Delete','Create','Drop','Grant','References','Index','Alter','Create View','Show view','Trigger') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Table privileges';

-- --------------------------------------------------------

--
-- Table structure for table `time_zone`
--

CREATE TABLE IF NOT EXISTS `time_zone` (
  `Time_zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Use_leap_seconds` enum('Y','N') NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Time_zone_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zones' AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `time_zone_leap_second`
--

CREATE TABLE IF NOT EXISTS `time_zone_leap_second` (
  `Transition_time` bigint(20) NOT NULL DEFAULT '0',
  `Correction` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`Transition_time`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Leap seconds information for time zones';

-- --------------------------------------------------------

--
-- Table structure for table `time_zone_name`
--

CREATE TABLE IF NOT EXISTS `time_zone_name` (
  `Name` char(64) NOT NULL DEFAULT '',
  `Time_zone_id` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`Name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone names';

-- --------------------------------------------------------

--
-- Table structure for table `time_zone_transition`
--

CREATE TABLE IF NOT EXISTS `time_zone_transition` (
  `Time_zone_id` int(10) unsigned NOT NULL DEFAULT '0',
  `Transition_time` bigint(20) NOT NULL DEFAULT '0',
  `Transition_type_id` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`Time_zone_id`,`Transition_time`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone transitions';

-- --------------------------------------------------------

--
-- Table structure for table `time_zone_transition_type`
--

CREATE TABLE IF NOT EXISTS `time_zone_transition_type` (
  `Time_zone_id` int(10) unsigned NOT NULL DEFAULT '0',
  `Transition_type_id` int(10) unsigned NOT NULL DEFAULT '0',
  `Offset` int(11) NOT NULL DEFAULT '0',
  `Is_DST` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `Abbreviation` char(8) NOT NULL DEFAULT '',
  PRIMARY KEY (`Time_zone_id`,`Transition_type_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Time zone transition types';

-- --------------------------------------------------------

--
-- Table structure for table `user`
--

CREATE TABLE IF NOT EXISTS `user` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Password` char(41) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Reload_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Shutdown_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Process_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `File_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_db_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Super_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_slave_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_client_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_user_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `ssl_type` enum('','ANY','X509','SPECIFIED') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `ssl_cipher` blob NOT NULL,
  `x509_issuer` blob NOT NULL,
  `x509_subject` blob NOT NULL,
  `max_questions` int(11) unsigned NOT NULL DEFAULT '0',
  `max_updates` int(11) unsigned NOT NULL DEFAULT '0',
  `max_connections` int(11) unsigned NOT NULL DEFAULT '0',
  `max_user_connections` int(11) NOT NULL DEFAULT '0',
  `plugin` char(60) CHARACTER SET latin1 NOT NULL DEFAULT '',
  `auth_string` text COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`Host`,`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Users and global privileges';

--
-- Dumping data for table `user`
--

INSERT INTO `user` (`Host`, `User`, `Password`, `Select_priv`, `Insert_priv`, `Update_priv`, `Delete_priv`, `Create_priv`, `Drop_priv`, `Reload_priv`, `Shutdown_priv`, `Process_priv`, `File_priv`, `Grant_priv`, `References_priv`, `Index_priv`, `Alter_priv`, `Show_db_priv`, `Super_priv`, `Create_tmp_table_priv`, `Lock_tables_priv`, `Execute_priv`, `Repl_slave_priv`, `Repl_client_priv`, `Create_view_priv`, `Show_view_priv`, `Create_routine_priv`, `Alter_routine_priv`, `Create_user_priv`, `Event_priv`, `Trigger_priv`, `ssl_type`, `ssl_cipher`, `x509_issuer`, `x509_subject`, `max_questions`, `max_updates`, `max_connections`, `max_user_connections`, `plugin`, `auth_string`) VALUES
('localhost', 'root', '*160589A51A3CEFFE5FA779DBE2364F7201B49C48', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', ''),
('%', 'arbo40', '*1FC20E5A49745A83BB30D713AD3649AC8B793285', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'N', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', '');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
